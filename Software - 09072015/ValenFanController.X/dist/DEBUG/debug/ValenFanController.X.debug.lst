

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Thu Jul 09 16:47:42 2015

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	eeprom_data,global,class=EEDATA,space=2,delta=2
     6                           	psect	idataBANK0,global,class=CODE,delta=2
     7                           	psect	idataCOMMON,global,class=CODE,delta=2
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cinit,global,class=CODE,delta=2
    11                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
    12                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    18                           	psect	clrtext,global,class=CODE,delta=2
    19                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    21                           	psect	maintext,global,class=CODE,delta=2
    22                           	psect	text654,local,class=CODE,delta=2
    23                           	psect	text655,local,class=CODE,delta=2
    24                           	psect	text660,local,class=CODE,delta=2
    25                           	psect	text665,local,class=CODE,delta=2
    26                           	psect	text666,local,class=CODE,delta=2
    27                           	psect	text667,local,class=CODE,delta=2
    28                           	psect	text668,local,class=CODE,delta=2
    29                           	psect	text669,local,class=CODE,delta=2
    30                           	psect	text671,local,class=CODE,delta=2
    31                           	psect	text672,local,class=CODE,delta=2
    32                           	psect	intentry,global,class=CODE,delta=2
    33                           	psect	text676,local,class=CODE,delta=2
    34                           	psect	pa_nodes,global,class=CODE,delta=2
    35                           	dabs	1,0x7E,2
    36  000A                     	;#
    37                           
    38                           	psect	config
    39  2007  E32C               	dw	58156	;#
    40                           
    41                           	psect	eeprom_data
    42  0000  000A 0014 0019     	db	10,20,25,59,0,0,0,0	;#
      +       003B 0000 0000     
      +       0000 0000          
    43  0008  0001 0009 000A     	db	1,9,10,11,12,13,14,15	;#
      +       000B 000C 000D     
      +       000E 000F          
    44  0010  0000 003C 0021     	db	0,60,33,33,3,48,1,32	;#
      +       0021 0003 0030     
      +       0001 0020          
    45  0018  0031 0032 0033     	db	49,50,51,52,53,54,55,56	;#
      +       0034 0035 0036     
      +       0037 0038          
    46  0020  0031 0030 0000     	db	49,48,0,0,0,0,0,0	;#
      +       0000 0000 0000     
      +       0000 0000          
    47                           
    48                           	psect	idataBANK0
    49  0000                     __pidataBANK0:	
    50                           
    51                           	psect	idataCOMMON
    52  0000                     __pidataCOMMON:	
    53                           
    54                           	psect	nvBANK0
    55  006D                     __pnvBANK0:	
    56  006D                     _tim10Hz:	
    57  006D                     	ds	1
    58  006E                     _tim2Hz:	
    59  006E                     	ds	1
    60  001F                     _ADCON0bits	set	31
    61  001E                     _ADRESH	set	30
    62  0017                     _CCP1CON	set	23
    63  001D                     _CCP2CON	set	29
    64  0015                     _CCPR1L	set	21
    65  001B                     _CCPR2L	set	27
    66  0005                     _PORTA	set	5
    67  0005                     _PORTAbits	set	5
    68  0006                     _PORTB	set	6
    69  0006                     _PORTBbits	set	6
    70  0007                     _PORTC	set	7
    71  0007                     _PORTCbits	set	7
    72  0008                     _PORTD	set	8
    73  0008                     _PORTDbits	set	8
    74  0009                     _PORTE	set	9
    75  001A                     _RCREG	set	26
    76  0012                     _T2CON	set	18
    77  0012                     _T2CONbits	set	18
    78  0001                     _TMR0	set	1
    79  0019                     _TXREG	set	25
    80  00C3                     _ADDEN	set	195
    81  00C4                     _CREN	set	196
    82  00C2                     _FERR	set	194
    83  005F                     _GIE	set	95
    84  00C1                     _OERR	set	193
    85  005E                     _PEIE	set	94
    86  0065                     _RCIF	set	101
    87  00C6                     _RX9	set	198
    88  00C7                     _SPEN	set	199
    89  005D                     _T0IE	set	93
    90  005A                     _T0IF	set	90
    91  0064                     _TXIF	set	100
    92  009F                     _ADCON1bits	set	159
    93  009E                     _ADRESL	set	158
    94  0081                     _OPTION_REG	set	129
    95  008F                     _OSCCON	set	143
    96  008C                     _PIE1bits	set	140
    97  0092                     _PR2	set	146
    98  0099                     _SPBRG	set	153
    99  0085                     _TRISA	set	133
   100  0085                     _TRISAbits	set	133
   101  0086                     _TRISB	set	134
   102  0086                     _TRISBbits	set	134
   103  0087                     _TRISC	set	135
   104  0087                     _TRISCbits	set	135
   105  0088                     _TRISD	set	136
   106  0088                     _TRISDbits	set	136
   107  0089                     _TRISE	set	137
   108  04C2                     _BRGH	set	1218
   109  0465                     _RCIE	set	1125
   110  04C4                     _SYNC	set	1220
   111  04C6                     _TX9	set	1222
   112  04C5                     _TXEN	set	1221
   113  0464                     _TXIE	set	1124
   114  0107                     _CM1CON0	set	263
   115  0108                     _CM2CON0	set	264
   116  0105                     _WDTCON	set	261
   117  083F                     _C1ON	set	2111
   118  0847                     _C2ON	set	2119
   119  0188                     _ANSEL	set	392
   120  0189                     _ANSELH	set	393
   121  0188                     _ANSELbits	set	392
   122  0C3B                     _BRG16	set	3131
   123                           
   124                           	psect	nvBANK1
   125  00CE                     __pnvBANK1:	
   126  00CE                     _tim1sec:	
   127  00CE                     	ds	1
   128                           
   129                           	psect	cinit
   130  0207                     start_initialization:	
   131  0207  3050               	movlw	low __pbssBANK0
   132                           
   133                           ; Clear objects allocated to BITCOMMON
   134  0208  01FA               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   135                           
   136                           ; Clear objects allocated to COMMON
   137  0209  01F6               	clrf	__pbssCOMMON& (0+127)
   138  020A  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   139  020B  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   140  020C  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   141                           
   142                           ; Clear objects allocated to BANK0
   143  020D  1383               	bcf	3,7	;select IRP bank0
   144  020E  0084               	movwf	4
   145  020F  306D               	movlw	low (__pbssBANK0+29)
   146  0210  120A  118A  21BD   	fcall	clear_ram
      +       120A  118A         
   147                           
   148                           ; Clear objects allocated to BANK1
   149  0215  30A0               	movlw	low __pbssBANK1
   150  0216  0084               	movwf	4
   151  0217  30CE               	movlw	low (__pbssBANK1+46)
   152  0218  120A  118A  21BD   	fcall	clear_ram
      +       120A  118A         
   153  021D  3090               	movlw	low __pbssBANK3
   154                           
   155                           ; Clear objects allocated to BANK3
   156  021E  1783               	bsf	3,7	;select IRP bank2
   157  021F  0084               	movwf	4
   158  0220  30CC               	movlw	low (__pbssBANK3+60)
   159  0221  120A  118A  21BD   	fcall	clear_ram
   160                           
   161                           ;initializer for _buffer_SM
   162  0224  3001               	movlw	1
   163  0225  00EF               	movwf	__pdataBANK0& (0+127)
   164                           
   165                           ;initializer for _debugModeStatus
   166  0226  3030               	movlw	48
   167  0227  00FB               	movwf	__pdataCOMMON& (0+127)
   168  0228                     end_of_initialization:	
   169                           ;End of C runtime variable initialization code
   170                           
   171  0228  0183               	clrf	3
   172  0229  120A  118A  2DDB   	ljmp	_main	;jump to C main() function
   173                           
   174                           	psect	bitbssCOMMON
   175  03D0                     __pbitbssCOMMON:	
   176  03D0                     _CONV:	
   177  03D0                     	ds	1
   178  03D1                     _conversionFinished:	
   179  03D1                     	ds	1
   180                           
   181                           	psect	bssCOMMON
   182  0076                     __pbssCOMMON:	
   183  0076                     _convert:	
   184  0076                     	ds	1
   185  0077                     _tim1min:	
   186  0077                     	ds	1
   187  0078                     _uartTransmitBufferR:	
   188  0078                     	ds	1
   189  0079                     _uartTransmitBufferW:	
   190  0079                     	ds	1
   191                           
   192                           	psect	dataCOMMON
   193  007B                     __pdataCOMMON:	
   194  007B                     _debugModeStatus:	
   195  007B                     	ds	1
   196                           
   197                           	psect	bssBANK0
   198  0050                     __pbssBANK0:	
   199  0050                     _printBuffer:	
   200  0050                     	ds	6
   201  0056                     _currentTemperature:	
   202  0056                     	ds	2
   203  0058                     _bufferValue:	
   204  0058                     	ds	1
   205  0059                     _currentCommand:	
   206  0059                     	ds	1
   207  005A                     _dataCounter:	
   208  005A                     	ds	1
   209  005B                     _debounceCounter:	
   210  005B                     	ds	1
   211  005C                     _oldTempLevel:	
   212  005C                     	ds	1
   213  005D                     _ondalik:	
   214  005D                     	ds	1
   215  005E                     _tam:	
   216  005E                     	ds	1
   217  005F                     _tempH:	
   218  005F                     	ds	1
   219  0060                     _tempL:	
   220  0060                     	ds	1
   221  0061                     _timerOverflow:	
   222  0061                     	ds	1
   223  0062                     _uartReceiveBufferR:	
   224  0062                     	ds	1
   225  0063                     _uartReceiveBufferW:	
   226  0063                     	ds	1
   227  0064                     _currentTemperatureBuffer:	
   228  0064                     	ds	6
   229  006A                     _commandBuffer:	
   230  006A                     	ds	3
   231                           
   232                           	psect	dataBANK0
   233  006F                     __pdataBANK0:	
   234  006F                     _buffer_SM:	
   235  006F                     	ds	1
   236                           
   237                           	psect	bssBANK1
   238  00A0                     __pbssBANK1:	
   239  00A0                     _uartTransmitBuffer:	
   240  00A0                     	ds	30
   241  00BE                     _dataBuffer:	
   242  00BE                     	ds	16
   243                           
   244                           	psect	bssBANK3
   245  0190                     __pbssBANK3:	
   246  0190                     _uartReceiveBuffer:	
   247  0190                     	ds	60
   248                           
   249                           	psect	clrtext
   250  01BD                     clear_ram:	
   251                           ;	Called with FSR containing the base address, and
   252                           ;	W with the last address+1
   253                           
   254  01BD  0064               	clrwdt	;clear the watchdog before getting into this loop
   255  01BE                     clrloop:	
   256  01BE  0180               	clrf	0	;clear RAM location pointed to by FSR
   257  01BF  0A84               	incf	4,f	;increment pointer
   258  01C0  0604               	xorwf	4,w	;XOR with final address
   259  01C1  1903               	btfsc	3,2	;have we reached the end yet?
   260  01C2  3400               	retlw	0	;all done for this memory range, return
   261  01C3  0604               	xorwf	4,w	;XOR again to restore value
   262  01C4  29BE               	goto	clrloop	;do the next byte
   263                           
   264                           	psect	cstackCOMMON
   265  0071                     __pcstackCOMMON:	
   266  0071                     ?_vInitializeBoard:	
   267  0071                     ?_vInitializeVHN5019:	
   268                           ; 0 bytes @ 0x0
   269                           
   270  0071                     ?_vInitializeUart:	
   271                           ; 0 bytes @ 0x0
   272                           
   273  0071                     ?_putch:	
   274                           ; 0 bytes @ 0x0
   275                           
   276  0071                     ?_vCheckError:	
   277                           ; 0 bytes @ 0x0
   278                           
   279  0071                     ??_vCheckError:	
   280                           ; 0 bytes @ 0x0
   281                           
   282  0071                     ?_vAddToUartReceiveBuffer:	
   283                           ; 0 bytes @ 0x0
   284                           
   285  0071                     ??_vAddToUartReceiveBuffer:	
   286                           ; 0 bytes @ 0x0
   287                           
   288  0071                     ??_cGetFromTxBuffer:	
   289                           ; 0 bytes @ 0x0
   290                           
   291  0071                     ?_vInitializeADC:	
   292                           ; 0 bytes @ 0x0
   293                           
   294  0071                     ?_erdem:	
   295                           ; 0 bytes @ 0x0
   296                           
   297  0071                     ?_getTemperature:	
   298                           ; 0 bytes @ 0x0
   299                           
   300  0071                     ?_cGetFromReceiveBuffer:	
   301                           ; 1 bytes @ 0x0
   302                           
   303  0071                     ?_cGetFromTxBuffer:	
   304                           ; 1 bytes @ 0x0
   305                           
   306  0071                     ?_main:	
   307                           ; 1 bytes @ 0x0
   308                           
   309  0071                     vAddToUartReceiveBuffer@data:	
   310                           ; 2 bytes @ 0x0
   311                           
   312  0071                     cGetFromTxBuffer@value:	
   313                           ; 1 bytes @ 0x0
   314                           
   315                           
   316                           ; 1 bytes @ 0x0
   317  0071                     	ds	1
   318  0072                     ??_erdem:	
   319                           
   320                           ; 0 bytes @ 0x1
   321  0072                     	ds	3
   322  0075                     erdem@temp:	
   323                           
   324                           ; 1 bytes @ 0x4
   325  0075                     	ds	1
   326                           
   327                           	psect	cstackBANK0
   328  0020                     __pcstackBANK0:	
   329  0020                     ??_vInitializeBoard:	
   330  0020                     ??_vInitializeVHN5019:	
   331                           ; 0 bytes @ 0x0
   332                           
   333  0020                     ??_vInitializeUart:	
   334                           ; 0 bytes @ 0x0
   335                           
   336  0020                     ??_putch:	
   337                           ; 0 bytes @ 0x0
   338                           
   339  0020                     ??_cGetFromReceiveBuffer:	
   340                           ; 0 bytes @ 0x0
   341                           
   342  0020                     ??_vInitializeADC:	
   343                           ; 0 bytes @ 0x0
   344                           
   345  0020                     ?___bmul:	
   346                           ; 0 bytes @ 0x0
   347                           
   348  0020                     ?_read_ADC:	
   349                           ; 1 bytes @ 0x0
   350                           
   351  0020                     ?___lwdiv:	
   352                           ; 2 bytes @ 0x0
   353                           
   354  0020                     ?___lwmod:	
   355                           ; 2 bytes @ 0x0
   356                           
   357  0020                     ?___ftpack:	
   358                           ; 2 bytes @ 0x0
   359                           
   360  0020                     cGetFromReceiveBuffer@value:	
   361                           ; 3 bytes @ 0x0
   362                           
   363  0020                     putch@c:	
   364                           ; 1 bytes @ 0x0
   365                           
   366  0020                     ___bmul@multiplicand:	
   367                           ; 1 bytes @ 0x0
   368                           
   369  0020                     ___lwdiv@divisor:	
   370                           ; 1 bytes @ 0x0
   371                           
   372  0020                     ___lwmod@divisor:	
   373                           ; 2 bytes @ 0x0
   374                           
   375  0020                     ___ftpack@arg:	
   376                           ; 2 bytes @ 0x0
   377                           
   378                           
   379                           ; 3 bytes @ 0x0
   380  0020                     	ds	1
   381  0021                     ??___bmul:	
   382  0021                     ___bmul@product:	
   383                           ; 0 bytes @ 0x1
   384                           
   385                           
   386                           ; 1 bytes @ 0x1
   387  0021                     	ds	1
   388  0022                     ??_read_ADC:	
   389  0022                     ___bmul@multiplier:	
   390                           ; 0 bytes @ 0x2
   391                           
   392  0022                     ___lwdiv@dividend:	
   393                           ; 1 bytes @ 0x2
   394                           
   395  0022                     ___lwmod@dividend:	
   396                           ; 2 bytes @ 0x2
   397                           
   398                           
   399                           ; 2 bytes @ 0x2
   400  0022                     	ds	1
   401  0023                     read_ADC@analogChannel:	
   402  0023                     ___ftpack@exp:	
   403                           ; 1 bytes @ 0x3
   404                           
   405                           
   406                           ; 1 bytes @ 0x3
   407  0023                     	ds	1
   408  0024                     ??___lwdiv:	
   409  0024                     ??___lwmod:	
   410                           ; 0 bytes @ 0x4
   411                           
   412  0024                     ___lwdiv@counter:	
   413                           ; 0 bytes @ 0x4
   414                           
   415  0024                     ___lwmod@counter:	
   416                           ; 1 bytes @ 0x4
   417                           
   418  0024                     ___ftpack@sign:	
   419                           ; 1 bytes @ 0x4
   420                           
   421  0024                     read_ADC@adcResult:	
   422                           ; 1 bytes @ 0x4
   423                           
   424                           
   425                           ; 2 bytes @ 0x4
   426  0024                     	ds	1
   427  0025                     ??___ftpack:	
   428  0025                     ___lwdiv@quotient:	
   429                           ; 0 bytes @ 0x5
   430                           
   431                           
   432                           ; 2 bytes @ 0x5
   433  0025                     	ds	2
   434  0027                     ?_utoa:	
   435  0027                     utoa@val:	
   436                           ; 1 bytes @ 0x7
   437                           
   438                           
   439                           ; 2 bytes @ 0x7
   440  0027                     	ds	1
   441  0028                     ?___lwtoft:	
   442  0028                     ?___fttol:	
   443                           ; 3 bytes @ 0x8
   444                           
   445  0028                     ___lwtoft@c:	
   446                           ; 4 bytes @ 0x8
   447                           
   448  0028                     ___fttol@f1:	
   449                           ; 2 bytes @ 0x8
   450                           
   451                           
   452                           ; 3 bytes @ 0x8
   453  0028                     	ds	1
   454  0029                     utoa@base:	
   455                           
   456                           ; 2 bytes @ 0x9
   457  0029                     	ds	2
   458  002B                     ??_utoa:	
   459  002B                     ??___lwtoft:	
   460                           ; 0 bytes @ 0xB
   461                           
   462  002B                     ?___ftmul:	
   463                           ; 0 bytes @ 0xB
   464                           
   465  002B                     utoa@v:	
   466                           ; 3 bytes @ 0xB
   467                           
   468  002B                     ___ftmul@f1:	
   469                           ; 2 bytes @ 0xB
   470                           
   471                           
   472                           ; 3 bytes @ 0xB
   473  002B                     	ds	1
   474  002C                     ??___fttol:	
   475                           
   476                           ; 0 bytes @ 0xC
   477  002C                     	ds	1
   478  002D                     utoa@c:	
   479                           
   480                           ; 1 bytes @ 0xD
   481  002D                     	ds	1
   482  002E                     utoa@buf:	
   483  002E                     ___ftmul@f2:	
   484                           ; 1 bytes @ 0xE
   485                           
   486                           
   487                           ; 3 bytes @ 0xE
   488  002E                     	ds	1
   489  002F                     ?_itoa:	
   490  002F                     ___fttol@sign1:	
   491                           ; 1 bytes @ 0xF
   492                           
   493  002F                     itoa@val:	
   494                           ; 1 bytes @ 0xF
   495                           
   496                           
   497                           ; 2 bytes @ 0xF
   498  002F                     	ds	1
   499  0030                     ___fttol@lval:	
   500                           
   501                           ; 4 bytes @ 0x10
   502  0030                     	ds	1
   503  0031                     ??___ftmul:	
   504  0031                     itoa@base:	
   505                           ; 0 bytes @ 0x11
   506                           
   507                           
   508                           ; 2 bytes @ 0x11
   509  0031                     	ds	2
   510  0033                     ??_itoa:	
   511                           
   512                           ; 0 bytes @ 0x13
   513  0033                     	ds	1
   514  0034                     itoa@buf:	
   515  0034                     ___ftmul@exp:	
   516                           ; 1 bytes @ 0x14
   517                           
   518  0034                     ___fttol@exp1:	
   519                           ; 1 bytes @ 0x14
   520                           
   521                           
   522                           ; 1 bytes @ 0x14
   523  0034                     	ds	1
   524  0035                     ?___ftdiv:	
   525  0035                     ___ftdiv@f2:	
   526                           ; 3 bytes @ 0x15
   527                           
   528  0035                     ___ftmul@f3_as_product:	
   529                           ; 3 bytes @ 0x15
   530                           
   531                           
   532                           ; 3 bytes @ 0x15
   533  0035                     	ds	3
   534  0038                     ___ftmul@cntr:	
   535  0038                     ___ftdiv@f1:	
   536                           ; 1 bytes @ 0x18
   537                           
   538                           
   539                           ; 3 bytes @ 0x18
   540  0038                     	ds	1
   541  0039                     ___ftmul@sign:	
   542                           
   543                           ; 1 bytes @ 0x19
   544  0039                     	ds	2
   545  003B                     ??___ftdiv:	
   546                           
   547                           ; 0 bytes @ 0x1B
   548  003B                     	ds	3
   549  003E                     ___ftdiv@cntr:	
   550                           
   551                           ; 1 bytes @ 0x1E
   552  003E                     	ds	1
   553  003F                     ___ftdiv@f3:	
   554                           
   555                           ; 3 bytes @ 0x1F
   556  003F                     	ds	3
   557  0042                     ___ftdiv@exp:	
   558                           
   559                           ; 1 bytes @ 0x22
   560  0042                     	ds	1
   561  0043                     ___ftdiv@sign:	
   562                           
   563                           ; 1 bytes @ 0x23
   564  0043                     	ds	1
   565  0044                     ??_getTemperature:	
   566  0044                     getTemperature@milliVolt:	
   567                           ; 0 bytes @ 0x24
   568                           
   569                           
   570                           ; 3 bytes @ 0x24
   571  0044                     	ds	3
   572  0047                     getTemperature@iTempP:	
   573                           
   574                           ; 2 bytes @ 0x27
   575  0047                     	ds	2
   576  0049                     getTemperature@iTempN:	
   577                           
   578                           ; 2 bytes @ 0x29
   579  0049                     	ds	2
   580  004B                     getTemperature@m:	
   581                           
   582                           ; 1 bytes @ 0x2B
   583  004B                     	ds	1
   584  004C                     ??_main:	
   585                           
   586                           ; 0 bytes @ 0x2C
   587  004C                     	ds	3
   588  004F                     main@i:	
   589                           
   590                           ; 1 bytes @ 0x2F
   591  004F                     	ds	1
   592                           
   593                           	psect	maintext
   594  05DB                     __pmaintext:	
   595 ;;Data sizes: Strings 0, constant 0, data 2, bss 139, persistent 3 stack 0
   596 ;;Auto spaces:   Size  Autos    Used
   597 ;; COMMON          13      5      11
   598 ;; BANK0           80     48      80
   599 ;; BANK1           80      0      47
   600 ;; BANK3           85      0      60
   601 ;; BANK2           96      0       0
   602 ;;
   603 ;; Pointer list with targets:
   604 ;; ?___ftpack	float  size(1) Largest target is 0
   605 ;;
   606 ;; ?___lwmod	unsigned int  size(1) Largest target is 0
   607 ;;
   608 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
   609 ;;
   610 ;; ?_utoa	PTR unsigned char  size(1) Largest target is 6
   611 ;;		 -> currentTemperatureBuffer(BANK0[6]), 
   612 ;;
   613 ;; ?___fttol	long  size(1) Largest target is 0
   614 ;;
   615 ;; ?___ftdiv	float  size(1) Largest target is 0
   616 ;;
   617 ;; ?___ftmul	float  size(1) Largest target is 0
   618 ;;
   619 ;; ?___lwtoft	float  size(1) Largest target is 0
   620 ;;
   621 ;; ?_itoa	PTR unsigned char  size(1) Largest target is 6
   622 ;;		 -> currentTemperatureBuffer(BANK0[6]), 
   623 ;;
   624 ;; ?_read_ADC	unsigned int  size(1) Largest target is 0
   625 ;;
   626 ;; utoa@buf	PTR unsigned char  size(1) Largest target is 6
   627 ;;		 -> currentTemperatureBuffer(BANK0[6]), 
   628 ;;
   629 ;; sp__utoa	PTR unsigned char  size(1) Largest target is 6
   630 ;;		 -> currentTemperatureBuffer(BANK0[6]), 
   631 ;;
   632 ;; itoa@buf	PTR unsigned char  size(1) Largest target is 6
   633 ;;		 -> currentTemperatureBuffer(BANK0[6]), 
   634 ;;
   635 ;; itoa@cp	PTR unsigned char  size(1) Largest target is 6
   636 ;;		 -> currentTemperatureBuffer(BANK0[6]), 
   637 ;;
   638 ;; sp__itoa	PTR unsigned char  size(1) Largest target is 6
   639 ;;		 -> currentTemperatureBuffer(BANK0[6]), 
   640 ;;
   641 ;;
   642 ;; Critical Paths under _main in COMMON
   643 ;;
   644 ;;   None.
   645 ;;
   646 ;; Critical Paths under _erdem in COMMON
   647 ;;
   648 ;;   _erdem->_vAddToUartReceiveBuffer
   649 ;;   _erdem->_cGetFromTxBuffer
   650 ;;
   651 ;; Critical Paths under _main in BANK0
   652 ;;
   653 ;;   _main->_getTemperature
   654 ;;   _itoa->_utoa
   655 ;;   _getTemperature->___ftdiv
   656 ;;   ___lwtoft->___ftpack
   657 ;;   ___ftmul->___lwtoft
   658 ;;   ___ftdiv->___fttol
   659 ;;   _utoa->___lwdiv
   660 ;;   ___fttol->___ftpack
   661 ;;
   662 ;; Critical Paths under _erdem in BANK0
   663 ;;
   664 ;;   None.
   665 ;;
   666 ;; Critical Paths under _main in BANK1
   667 ;;
   668 ;;   None.
   669 ;;
   670 ;; Critical Paths under _erdem in BANK1
   671 ;;
   672 ;;   None.
   673 ;;
   674 ;; Critical Paths under _main in BANK3
   675 ;;
   676 ;;   None.
   677 ;;
   678 ;; Critical Paths under _erdem in BANK3
   679 ;;
   680 ;;   None.
   681 ;;
   682 ;; Critical Paths under _main in BANK2
   683 ;;
   684 ;;   None.
   685 ;;
   686 ;; Critical Paths under _erdem in BANK2
   687 ;;
   688 ;;   None.
   689 ;;
   690 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   691 ;;
   692 ;;
   693 ;;Call Graph Tables:
   694 ;;
   695 ;; ---------------------------------------------------------------------------------
   696 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   697 ;; ---------------------------------------------------------------------------------
   698 ;; (0) _main                                                10    10      0    3475
   699 ;;                                             44 BANK0      4     4      0
   700 ;;                   _vInitializeBoard
   701 ;;                 _vInitializeVHN5019
   702 ;;                    _vInitializeUart
   703 ;;                     _vInitializeADC
   704 ;;                     _getTemperature
   705 ;;                               _itoa
   706 ;;                              _putch
   707 ;;              _cGetFromReceiveBuffer
   708 ;;                             ___bmul
   709 ;; ---------------------------------------------------------------------------------
   710 ;; (1) _itoa                                                 6     2      4    1143
   711 ;;                                             15 BANK0      6     2      4
   712 ;;                               _utoa
   713 ;; ---------------------------------------------------------------------------------
   714 ;; (1) _getTemperature                                       8     8      0    1874
   715 ;;                                             36 BANK0      8     8      0
   716 ;;                           _read_ADC
   717 ;;                           ___lwtoft
   718 ;;                            ___ftmul
   719 ;;                            ___ftdiv
   720 ;;                            ___fttol
   721 ;; ---------------------------------------------------------------------------------
   722 ;; (2) ___lwtoft                                             3     0      3     240
   723 ;;                                              8 BANK0      3     0      3
   724 ;;                           ___ftpack
   725 ;; ---------------------------------------------------------------------------------
   726 ;; (2) ___ftmul                                             15     9      6     535
   727 ;;                                             11 BANK0     15     9      6
   728 ;;                           ___ftpack
   729 ;;                           ___lwtoft (ARG)
   730 ;; ---------------------------------------------------------------------------------
   731 ;; (2) ___ftdiv                                             15     9      6     489
   732 ;;                                             21 BANK0     15     9      6
   733 ;;                           ___ftpack
   734 ;;                            ___fttol (ARG)
   735 ;; ---------------------------------------------------------------------------------
   736 ;; (2) _utoa                                                 8     4      4     910
   737 ;;                                              7 BANK0      8     4      4
   738 ;;                            ___lwdiv
   739 ;;                            ___lwmod
   740 ;; ---------------------------------------------------------------------------------
   741 ;; (1) _vInitializeVHN5019                                   2     2      0       0
   742 ;;                                              0 BANK0      2     2      0
   743 ;; ---------------------------------------------------------------------------------
   744 ;; (2) ___fttol                                             13     9      4     252
   745 ;;                                              8 BANK0     13     9      4
   746 ;;                           ___ftpack (ARG)
   747 ;; ---------------------------------------------------------------------------------
   748 ;; (3) ___ftpack                                             8     3      5     209
   749 ;;                                              0 BANK0      8     3      5
   750 ;; ---------------------------------------------------------------------------------
   751 ;; (3) ___lwmod                                              5     1      4     232
   752 ;;                                              0 BANK0      5     1      4
   753 ;; ---------------------------------------------------------------------------------
   754 ;; (3) ___lwdiv                                              7     3      4     241
   755 ;;                                              0 BANK0      7     3      4
   756 ;; ---------------------------------------------------------------------------------
   757 ;; (1) ___bmul                                               3     2      1     136
   758 ;;                                              0 BANK0      3     2      1
   759 ;; ---------------------------------------------------------------------------------
   760 ;; (1) _cGetFromReceiveBuffer                                1     1      0      34
   761 ;;                                              0 BANK0      1     1      0
   762 ;; ---------------------------------------------------------------------------------
   763 ;; (1) _putch                                                1     1      0      31
   764 ;;                                              0 BANK0      1     1      0
   765 ;; ---------------------------------------------------------------------------------
   766 ;; (1) _vInitializeUart                                      1     1      0     127
   767 ;;                                              0 BANK0      1     1      0
   768 ;; ---------------------------------------------------------------------------------
   769 ;; (1) _vInitializeBoard                                     0     0      0       0
   770 ;; ---------------------------------------------------------------------------------
   771 ;; (2) _read_ADC                                             6     4      2      74
   772 ;;                                              0 BANK0      6     4      2
   773 ;; ---------------------------------------------------------------------------------
   774 ;; (1) _vInitializeADC                                       0     0      0       0
   775 ;; ---------------------------------------------------------------------------------
   776 ;; Estimated maximum stack depth 3
   777 ;; ---------------------------------------------------------------------------------
   778 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   779 ;; ---------------------------------------------------------------------------------
   780 ;; (4) _erdem                                                6     6      0     114
   781 ;;                                              1 COMMON     4     4      0
   782 ;;                        _vCheckError
   783 ;;            _vAddToUartReceiveBuffer
   784 ;;                   _cGetFromTxBuffer
   785 ;; ---------------------------------------------------------------------------------
   786 ;; (5) _cGetFromTxBuffer                                     1     1      0      23
   787 ;;                                              0 COMMON     1     1      0
   788 ;; ---------------------------------------------------------------------------------
   789 ;; (5) _vAddToUartReceiveBuffer                              1     1      0      22
   790 ;;                                              0 COMMON     1     1      0
   791 ;; ---------------------------------------------------------------------------------
   792 ;; (5) _vCheckError                                          1     1      0       0
   793 ;; ---------------------------------------------------------------------------------
   794 ;; Estimated maximum stack depth 5
   795 ;; ---------------------------------------------------------------------------------
   796 ;; Call Graph Graphs:
   797 ;; _main (ROOT)
   798 ;;   _vInitializeBoard
   799 ;;   _vInitializeVHN5019
   800 ;;   _vInitializeUart
   801 ;;   _vInitializeADC
   802 ;;   _getTemperature
   803 ;;     _read_ADC
   804 ;;     ___lwtoft
   805 ;;       ___ftpack
   806 ;;     ___ftmul
   807 ;;       ___ftpack
   808 ;;       ___lwtoft (ARG)
   809 ;;         ___ftpack
   810 ;;     ___ftdiv
   811 ;;       ___ftpack
   812 ;;       ___fttol (ARG)
   813 ;;         ___ftpack (ARG)
   814 ;;     ___fttol
   815 ;;       ___ftpack (ARG)
   816 ;;   _itoa
   817 ;;     _utoa
   818 ;;       ___lwdiv
   819 ;;       ___lwmod
   820 ;;   _putch
   821 ;;   _cGetFromReceiveBuffer
   822 ;;   ___bmul
   823 ;;
   824 ;; _erdem (ROOT)
   825 ;;   _vCheckError
   826 ;;   _vAddToUartReceiveBuffer
   827 ;;   _cGetFromTxBuffer
   828 ;;
   829 ;; Address spaces:
   830 ;;Name               Size   Autos  Total    Cost      Usage
   831 ;;BANK3               55      0      3C       9       70.6%
   832 ;;BITBANK3            55      0       0       8        0.0%
   833 ;;SFR3                 0      0       0       4        0.0%
   834 ;;BITSFR3              0      0       0       4        0.0%
   835 ;;BANK2               60      0       0      11        0.0%
   836 ;;BITBANK2            60      0       0      10        0.0%
   837 ;;SFR2                 0      0       0       5        0.0%
   838 ;;BITSFR2              0      0       0       5        0.0%
   839 ;;SFR1                 0      0       0       2        0.0%
   840 ;;BITSFR1              0      0       0       2        0.0%
   841 ;;BANK1               50      0      2F       7       58.8%
   842 ;;BITBANK1            50      0       0       6        0.0%
   843 ;;CODE                 0      0       0       0        0.0%
   844 ;;DATA                 0      0      CD      12        0.0%
   845 ;;ABS                  0      0      C6       3        0.0%
   846 ;;NULL                 0      0       0       0        0.0%
   847 ;;STACK                0      0       7       2        0.0%
   848 ;;BANK0               50     30      50       5      100.0%
   849 ;;BITBANK0            50      0       0       4        0.0%
   850 ;;SFR0                 0      0       0       1        0.0%
   851 ;;BITSFR0              0      0       0       1        0.0%
   852 ;;COMMON               D      5       B       1       84.6%
   853 ;;BITCOMMON            D      0       1       0        7.7%
   854 ;;EEDATA             100      0       0       0        0.0%
   855                           
   856                           
   857 ;; *************** function _main *****************
   858 ;; Defined at:
   859 ;;		line 190 in file "../src/main.c"
   860 ;; Parameters:    Size  Location     Type
   861 ;;		None
   862 ;; Auto vars:     Size  Location     Type
   863 ;;  goster          6    0        unsigned char [6]
   864 ;;  i               1   47[BANK0 ] unsigned char 
   865 ;; Return value:  Size  Location     Type
   866 ;;                  2  2273[COMMON] int 
   867 ;; Registers used:
   868 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   869 ;; Tracked objects:
   870 ;;		On entry : 17F/0
   871 ;;		On exit  : 60/0
   872 ;;		Unchanged: 0/0
   873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   874 ;;      Params:         0       0       0       0       0
   875 ;;      Locals:         0       1       0       0       0
   876 ;;      Temps:          0       3       0       0       0
   877 ;;      Totals:         0       4       0       0       0
   878 ;;Total ram usage:        4 bytes
   879 ;; Hardware stack levels required when called:    5
   880 ;; This function calls:
   881 ;;		_vInitializeBoard
   882 ;;		_vInitializeVHN5019
   883 ;;		_vInitializeUart
   884 ;;		_vInitializeADC
   885 ;;		_getTemperature
   886 ;;		_itoa
   887 ;;		_putch
   888 ;;		_cGetFromReceiveBuffer
   889 ;;		___bmul
   890 ;; This function is called by:
   891 ;;		Startup code after reset
   892 ;; This function uses a non-reentrant model
   893 ;;
   894  05DB                     _main:	
   895                           
   896                           ;main.c: 191: unsigned char i;
   897                           ;main.c: 192: unsigned char goster[6];
   898                           ;main.c: 193: vInitializeBoard();
   899                           
   900                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   901  05DB  120A  118A  222C   	fcall	_vInitializeBoard
      +       120A  118A         
   902                           
   903                           ;main.c: 194: vInitializeVHN5019();
   904  05E0  120A  118A  225A   	fcall	_vInitializeVHN5019
      +       120A  118A         
   905                           
   906                           ;main.c: 195: vInitializeUart();
   907  05E5  120A  118A  21F0   	fcall	_vInitializeUart
      +       120A  118A         
   908                           
   909                           ;main.c: 196: vInitializeADC();
   910  05EA  120A  118A  21E0   	fcall	_vInitializeADC
      +       120A  118A         
   911                           
   912                           ;main.c: 198: PEIE = 1;
   913  05EF  170B               	bsf	11,6
   914                           
   915                           ;main.c: 199: (GIE = 1);
   916  05F0  178B               	bsf	11,7
   917                           
   918                           ;main.c: 200: uartTransmitBufferR = 0;
   919  05F1  01F8               	clrf	_uartTransmitBufferR	;volatile
   920                           
   921                           ;main.c: 201: uartTransmitBufferW = 0;
   922  05F2  01F9               	clrf	_uartTransmitBufferW	;volatile
   923                           
   924                           ;main.c: 202: uartReceiveBufferR = 0;
   925  05F3  01E2               	clrf	_uartReceiveBufferR	;volatile
   926                           
   927                           ;main.c: 203: uartReceiveBufferW = 0;
   928  05F4  01E3               	clrf	_uartReceiveBufferW	;volatile
   929                           
   930                           ;main.c: 204: currentTemperature = 0;
   931  05F5  01D6               	clrf	_currentTemperature	;volatile
   932  05F6  01D7               	clrf	_currentTemperature+1	;volatile
   933                           
   934                           ;main.c: 207: (PORTAbits.RA3) = 1;
   935  05F7  1585               	bsf	5,3	;volatile
   936  05F8                     l8995:	
   937  05F8  0064               	clrwdt	;#
   938                           
   939                           ;main.c: 236: currentTemperature = getTemperature();
   940  05F9  120A  118A  23BC   	fcall	_getTemperature
      +       120A  118A         
   941  05FE  00D6               	movwf	_currentTemperature	;volatile
   942  05FF  01D7               	clrf	_currentTemperature+1	;volatile
   943                           
   944                           ;main.c: 240: itoa(currentTemperatureBuffer, currentTemperature, 10);
   945  0600  0857               	movf	_currentTemperature+1,w	;volatile
   946  0601  00B0               	movwf	?_itoa+1
   947  0602  0856               	movf	_currentTemperature,w	;volatile
   948  0603  00AF               	movwf	?_itoa
   949  0604  300A               	movlw	10
   950  0605  00B1               	movwf	?_itoa+2
   951  0606  3064               	movlw	_currentTemperatureBuffer& (0+255)
   952  0607  01B2               	clrf	?_itoa+3
   953  0608  120A  118A  230B   	fcall	_itoa
      +       120A  118A         
   954                           
   955                           ;main.c: 242: printBuffer[0] = '+';
   956  060D  302B               	movlw	43
   957  060E  00D0               	movwf	_printBuffer
   958                           
   959                           ;main.c: 243: printBuffer[1] = currentTemperatureBuffer[0];
   960  060F  0864               	movf	_currentTemperatureBuffer,w	;volatile
   961  0610  00D1               	movwf	_printBuffer+1
   962                           
   963                           ;main.c: 244: printBuffer[2] = currentTemperatureBuffer[1];
   964  0611  0865               	movf	_currentTemperatureBuffer+1,w	;volatile
   965  0612  00D2               	movwf	_printBuffer+2
   966                           
   967                           ;main.c: 245: printBuffer[3] = currentTemperatureBuffer[2];
   968  0613  0866               	movf	_currentTemperatureBuffer+2,w	;volatile
   969  0614  00D3               	movwf	_printBuffer+3
   970                           
   971                           ;main.c: 246: printBuffer[4] = 'C';
   972  0615  3043               	movlw	67
   973  0616  00D4               	movwf	_printBuffer+4
   974                           
   975                           ;main.c: 247: printBuffer[5] = '\0';
   976  0617  01D5               	clrf	_printBuffer+5
   977                           
   978                           ;main.c: 249: if(currentTemperature < 100)
   979  0618  0857               	movf	_currentTemperature+1,w	;volatile
   980  0619  3A80               	xorlw	128
   981  061A  00FF               	movwf	127
   982  061B  3080               	movlw	128
   983  061C  027F               	subwf	127,w
   984  061D  1D03               	skipz
   985  061E  2E21               	goto	u1845
   986  061F  3064               	movlw	100
   987  0620  0256               	subwf	_currentTemperature,w	;volatile
   988  0621                     u1845:	
   989  0621  1803               	skipnc
   990  0622  2E30               	goto	l9019
   991                           
   992                           ;main.c: 250: {
   993                           ;main.c: 251: printBuffer[0] = '+';
   994  0623  302B               	movlw	43
   995  0624  1283               	bcf	3,5	;RP0=0, select bank0
   996  0625  1303               	bcf	3,6	;RP1=0, select bank0
   997  0626  00D0               	movwf	_printBuffer
   998                           
   999                           ;main.c: 252: printBuffer[1] = '0';
  1000  0627  3030               	movlw	48
  1001  0628  00D1               	movwf	_printBuffer+1
  1002                           
  1003                           ;main.c: 253: printBuffer[2] = currentTemperatureBuffer[0];
  1004  0629  0864               	movf	_currentTemperatureBuffer,w	;volatile
  1005  062A  00D2               	movwf	_printBuffer+2
  1006                           
  1007                           ;main.c: 254: printBuffer[3] = currentTemperatureBuffer[1];
  1008  062B  0865               	movf	_currentTemperatureBuffer+1,w	;volatile
  1009  062C  00D3               	movwf	_printBuffer+3
  1010                           
  1011                           ;main.c: 255: printBuffer[4] = 'C';
  1012  062D  3043               	movlw	67
  1013  062E  00D4               	movwf	_printBuffer+4
  1014                           
  1015                           ;main.c: 256: printBuffer[5] = '\0';
  1016  062F  01D5               	clrf	_printBuffer+5
  1017  0630                     l9019:	
  1018                           
  1019                           ;main.c: 257: }
  1020                           ;main.c: 258: if(currentTemperature < 10)
  1021  0630  1283               	bcf	3,5	;RP0=0, select bank0
  1022  0631  1303               	bcf	3,6	;RP1=0, select bank0
  1023  0632  0857               	movf	_currentTemperature+1,w	;volatile
  1024  0633  3A80               	xorlw	128
  1025  0634  00FF               	movwf	127
  1026  0635  3080               	movlw	128
  1027  0636  027F               	subwf	127,w
  1028  0637  1D03               	skipz
  1029  0638  2E3B               	goto	u1855
  1030  0639  300A               	movlw	10
  1031  063A  0256               	subwf	_currentTemperature,w	;volatile
  1032  063B                     u1855:	
  1033  063B  1803               	skipnc
  1034  063C  2E49               	goto	l9025
  1035                           
  1036                           ;main.c: 259: {
  1037                           ;main.c: 260: printBuffer[0] = '+';
  1038  063D  302B               	movlw	43
  1039  063E  1283               	bcf	3,5	;RP0=0, select bank0
  1040  063F  1303               	bcf	3,6	;RP1=0, select bank0
  1041  0640  00D0               	movwf	_printBuffer
  1042                           
  1043                           ;main.c: 261: printBuffer[1] = '0';
  1044  0641  3030               	movlw	48
  1045  0642  00D1               	movwf	_printBuffer+1
  1046                           
  1047                           ;main.c: 262: printBuffer[2] = '0';
  1048  0643  00D2               	movwf	_printBuffer+2
  1049                           
  1050                           ;main.c: 263: printBuffer[3] = currentTemperatureBuffer[0];
  1051  0644  0864               	movf	_currentTemperatureBuffer,w	;volatile
  1052  0645  00D3               	movwf	_printBuffer+3
  1053                           
  1054                           ;main.c: 264: printBuffer[4] = 'C';
  1055  0646  3043               	movlw	67
  1056  0647  00D4               	movwf	_printBuffer+4
  1057                           
  1058                           ;main.c: 265: printBuffer[5] = '\0';
  1059  0648  01D5               	clrf	_printBuffer+5
  1060  0649                     l9025:	
  1061                           
  1062                           ;main.c: 266: }
  1063                           ;main.c: 267: if(currentTemperature < 0)
  1064  0649  1283               	bcf	3,5	;RP0=0, select bank0
  1065  064A  1303               	bcf	3,6	;RP1=0, select bank0
  1066  064B  1FD7               	btfss	_currentTemperature+1,7	;volatile
  1067  064C  2E58               	goto	l9031
  1068                           
  1069                           ;main.c: 268: {
  1070                           ;main.c: 269: printBuffer[0] = currentTemperatureBuffer[0];
  1071  064D  0864               	movf	_currentTemperatureBuffer,w	;volatile
  1072  064E  00D0               	movwf	_printBuffer
  1073                           
  1074                           ;main.c: 270: printBuffer[1] = '0';
  1075  064F  3030               	movlw	48
  1076  0650  00D1               	movwf	_printBuffer+1
  1077                           
  1078                           ;main.c: 271: printBuffer[2] = currentTemperatureBuffer[1];
  1079  0651  0865               	movf	_currentTemperatureBuffer+1,w	;volatile
  1080  0652  00D2               	movwf	_printBuffer+2
  1081                           
  1082                           ;main.c: 272: printBuffer[3] = currentTemperatureBuffer[2];
  1083  0653  0866               	movf	_currentTemperatureBuffer+2,w	;volatile
  1084  0654  00D3               	movwf	_printBuffer+3
  1085                           
  1086                           ;main.c: 273: printBuffer[4] = 'C';
  1087  0655  3043               	movlw	67
  1088  0656  00D4               	movwf	_printBuffer+4
  1089                           
  1090                           ;main.c: 274: printBuffer[5] = '\0';
  1091  0657  01D5               	clrf	_printBuffer+5
  1092  0658                     l9031:	
  1093                           
  1094                           ;main.c: 275: }
  1095                           ;main.c: 276: if( (currentTemperature > -10) && (currentTemperature < 0) )
  1096  0658  0857               	movf	_currentTemperature+1,w	;volatile
  1097  0659  3A80               	xorlw	128
  1098  065A  00FF               	movwf	127
  1099  065B  307F               	movlw	127
  1100  065C  027F               	subwf	127,w
  1101  065D  1D03               	skipz
  1102  065E  2E61               	goto	u1875
  1103  065F  30F7               	movlw	247
  1104  0660  0256               	subwf	_currentTemperature,w	;volatile
  1105  0661                     u1875:	
  1106  0661  1C03               	skipc
  1107  0662  2E71               	goto	l9039
  1108  0663  1283               	bcf	3,5	;RP0=0, select bank0
  1109  0664  1303               	bcf	3,6	;RP1=0, select bank0
  1110  0665  1FD7               	btfss	_currentTemperature+1,7	;volatile
  1111  0666  2E71               	goto	l9039
  1112                           
  1113                           ;main.c: 277: {
  1114                           ;main.c: 278: printBuffer[0] = currentTemperatureBuffer[0];
  1115  0667  0864               	movf	_currentTemperatureBuffer,w	;volatile
  1116  0668  00D0               	movwf	_printBuffer
  1117                           
  1118                           ;main.c: 279: printBuffer[1] = '0';
  1119  0669  3030               	movlw	48
  1120  066A  00D1               	movwf	_printBuffer+1
  1121                           
  1122                           ;main.c: 280: printBuffer[2] = '0';
  1123  066B  00D2               	movwf	_printBuffer+2
  1124                           
  1125                           ;main.c: 281: printBuffer[3] = currentTemperatureBuffer[1];
  1126  066C  0865               	movf	_currentTemperatureBuffer+1,w	;volatile
  1127  066D  00D3               	movwf	_printBuffer+3
  1128                           
  1129                           ;main.c: 282: printBuffer[4] = 'C';
  1130  066E  3043               	movlw	67
  1131  066F  00D4               	movwf	_printBuffer+4
  1132                           
  1133                           ;main.c: 283: printBuffer[5] = '\0';
  1134  0670  01D5               	clrf	_printBuffer+5
  1135  0671                     l9039:	
  1136                           
  1137                           ;main.c: 284: }
  1138                           ;main.c: 286: for(i = 0; i<sizeof(printBuffer); i++)
  1139  0671  1283               	bcf	3,5	;RP0=0, select bank0
  1140  0672  1303               	bcf	3,6	;RP1=0, select bank0
  1141  0673  01CF               	clrf	main@i
  1142  0674                     l9043:	
  1143                           
  1144                           ;main.c: 287: {
  1145                           ;main.c: 288: if(printBuffer[i]=='\0') break;
  1146  0674  084F               	movf	main@i,w
  1147  0675  3E50               	addlw	_printBuffer& (0+255)
  1148  0676  0084               	movwf	4
  1149  0677  1383               	bcf	3,7	;select IRP bank0
  1150  0678  0880               	movf	0,f
  1151  0679  1903               	btfsc	3,2
  1152  067A  2E89               	goto	l9053
  1153                           
  1154                           ;main.c: 289: putch(printBuffer[i]);
  1155  067B  084F               	movf	main@i,w
  1156  067C  3E50               	addlw	_printBuffer& (0+255)
  1157  067D  0084               	movwf	4
  1158  067E  0800               	movf	0,w
  1159  067F  120A  118A  21B6   	fcall	_putch
      +       120A  118A         
  1160  0684  3006               	movlw	6
  1161  0685  0ACF               	incf	main@i,f
  1162  0686  024F               	subwf	main@i,w
  1163  0687  1C03               	skipc
  1164  0688  2E74               	goto	l9043
  1165  0689                     l9053:	
  1166                           
  1167                           ;main.c: 290: }
  1168                           ;main.c: 296: _delay((unsigned long)((50)*(20000000/4000.0)));
  1169  0689  3002               	movlw	2
  1170  068A  00CE               	movwf	??_main+2
  1171  068B  3045               	movlw	69
  1172  068C  00CD               	movwf	??_main+1
  1173  068D  30A9               	movlw	169
  1174  068E  00CC               	movwf	??_main
  1175  068F                     u2007:	
  1176  068F  0BCC               	decfsz	??_main,f
  1177  0690  2E8F               	goto	u2007
  1178  0691  0BCD               	decfsz	??_main+1,f
  1179  0692  2E8F               	goto	u2007
  1180  0693  0BCE               	decfsz	??_main+2,f
  1181  0694  2E8F               	goto	u2007
  1182  0695  2E96               	nop2
  1183                           
  1184                           ;main.c: 297: _delay((unsigned long)((50)*(20000000/4000.0)));
  1185  0696  3002               	movlw	2
  1186  0697  1283               	bcf	3,5	;RP0=0, select bank0
  1187  0698  1303               	bcf	3,6	;RP1=0, select bank0
  1188  0699  00CE               	movwf	??_main+2
  1189  069A  3045               	movlw	69
  1190  069B  00CD               	movwf	??_main+1
  1191  069C  30A9               	movlw	169
  1192  069D  00CC               	movwf	??_main
  1193  069E                     u2017:	
  1194  069E  0BCC               	decfsz	??_main,f
  1195  069F  2E9E               	goto	u2017
  1196  06A0  0BCD               	decfsz	??_main+1,f
  1197  06A1  2E9E               	goto	u2017
  1198  06A2  0BCE               	decfsz	??_main+2,f
  1199  06A3  2E9E               	goto	u2017
  1200  06A4  2EA5               	nop2
  1201                           
  1202                           ;main.c: 298: _delay((unsigned long)((50)*(20000000/4000.0)));
  1203  06A5  3002               	movlw	2
  1204  06A6  1283               	bcf	3,5	;RP0=0, select bank0
  1205  06A7  1303               	bcf	3,6	;RP1=0, select bank0
  1206  06A8  00CE               	movwf	??_main+2
  1207  06A9  3045               	movlw	69
  1208  06AA  00CD               	movwf	??_main+1
  1209  06AB  30A9               	movlw	169
  1210  06AC  00CC               	movwf	??_main
  1211  06AD                     u2027:	
  1212  06AD  0BCC               	decfsz	??_main,f
  1213  06AE  2EAD               	goto	u2027
  1214  06AF  0BCD               	decfsz	??_main+1,f
  1215  06B0  2EAD               	goto	u2027
  1216  06B1  0BCE               	decfsz	??_main+2,f
  1217  06B2  2EAD               	goto	u2027
  1218  06B3  2EB4               	nop2
  1219                           
  1220                           ;main.c: 299: _delay((unsigned long)((50)*(20000000/4000.0)));
  1221  06B4  3002               	movlw	2
  1222  06B5  1283               	bcf	3,5	;RP0=0, select bank0
  1223  06B6  1303               	bcf	3,6	;RP1=0, select bank0
  1224  06B7  00CE               	movwf	??_main+2
  1225  06B8  3045               	movlw	69
  1226  06B9  00CD               	movwf	??_main+1
  1227  06BA  30A9               	movlw	169
  1228  06BB  00CC               	movwf	??_main
  1229  06BC                     u2037:	
  1230  06BC  0BCC               	decfsz	??_main,f
  1231  06BD  2EBC               	goto	u2037
  1232  06BE  0BCD               	decfsz	??_main+1,f
  1233  06BF  2EBC               	goto	u2037
  1234  06C0  0BCE               	decfsz	??_main+2,f
  1235  06C1  2EBC               	goto	u2037
  1236  06C2  2EC3               	nop2
  1237                           
  1238                           ;main.c: 300: _delay((unsigned long)((50)*(20000000/4000.0)));
  1239  06C3  3002               	movlw	2
  1240  06C4  1283               	bcf	3,5	;RP0=0, select bank0
  1241  06C5  1303               	bcf	3,6	;RP1=0, select bank0
  1242  06C6  00CE               	movwf	??_main+2
  1243  06C7  3045               	movlw	69
  1244  06C8  00CD               	movwf	??_main+1
  1245  06C9  30A9               	movlw	169
  1246  06CA  00CC               	movwf	??_main
  1247  06CB                     u2047:	
  1248  06CB  0BCC               	decfsz	??_main,f
  1249  06CC  2ECB               	goto	u2047
  1250  06CD  0BCD               	decfsz	??_main+1,f
  1251  06CE  2ECB               	goto	u2047
  1252  06CF  0BCE               	decfsz	??_main+2,f
  1253  06D0  2ECB               	goto	u2047
  1254  06D1  2ED2               	nop2
  1255                           
  1256                           ;main.c: 301: _delay((unsigned long)((50)*(20000000/4000.0)));
  1257  06D2  3002               	movlw	2
  1258  06D3  1283               	bcf	3,5	;RP0=0, select bank0
  1259  06D4  1303               	bcf	3,6	;RP1=0, select bank0
  1260  06D5  00CE               	movwf	??_main+2
  1261  06D6  3045               	movlw	69
  1262  06D7  00CD               	movwf	??_main+1
  1263  06D8  30A9               	movlw	169
  1264  06D9  00CC               	movwf	??_main
  1265  06DA                     u2057:	
  1266  06DA  0BCC               	decfsz	??_main,f
  1267  06DB  2EDA               	goto	u2057
  1268  06DC  0BCD               	decfsz	??_main+1,f
  1269  06DD  2EDA               	goto	u2057
  1270  06DE  0BCE               	decfsz	??_main+2,f
  1271  06DF  2EDA               	goto	u2057
  1272  06E0  2EE1               	nop2
  1273                           
  1274                           ;main.c: 302: _delay((unsigned long)((50)*(20000000/4000.0)));
  1275  06E1  3002               	movlw	2
  1276  06E2  1283               	bcf	3,5	;RP0=0, select bank0
  1277  06E3  1303               	bcf	3,6	;RP1=0, select bank0
  1278  06E4  00CE               	movwf	??_main+2
  1279  06E5  3045               	movlw	69
  1280  06E6  00CD               	movwf	??_main+1
  1281  06E7  30A9               	movlw	169
  1282  06E8  00CC               	movwf	??_main
  1283  06E9                     u2067:	
  1284  06E9  0BCC               	decfsz	??_main,f
  1285  06EA  2EE9               	goto	u2067
  1286  06EB  0BCD               	decfsz	??_main+1,f
  1287  06EC  2EE9               	goto	u2067
  1288  06ED  0BCE               	decfsz	??_main+2,f
  1289  06EE  2EE9               	goto	u2067
  1290  06EF  2EF0               	nop2
  1291                           
  1292                           ;main.c: 303: _delay((unsigned long)((50)*(20000000/4000.0)));
  1293  06F0  3002               	movlw	2
  1294  06F1  1283               	bcf	3,5	;RP0=0, select bank0
  1295  06F2  1303               	bcf	3,6	;RP1=0, select bank0
  1296  06F3  00CE               	movwf	??_main+2
  1297  06F4  3045               	movlw	69
  1298  06F5  00CD               	movwf	??_main+1
  1299  06F6  30A9               	movlw	169
  1300  06F7  00CC               	movwf	??_main
  1301  06F8                     u2077:	
  1302  06F8  0BCC               	decfsz	??_main,f
  1303  06F9  2EF8               	goto	u2077
  1304  06FA  0BCD               	decfsz	??_main+1,f
  1305  06FB  2EF8               	goto	u2077
  1306  06FC  0BCE               	decfsz	??_main+2,f
  1307  06FD  2EF8               	goto	u2077
  1308  06FE  2EFF               	nop2
  1309  06FF  0064               	clrwdt	;#
  1310                           
  1311                           ;main.c: 306: _delay((unsigned long)((50)*(20000000/4000.0)));
  1312  0700  3002               	movlw	2
  1313  0701  1283               	bcf	3,5	;RP0=0, select bank0
  1314  0702  1303               	bcf	3,6	;RP1=0, select bank0
  1315  0703  00CE               	movwf	??_main+2
  1316  0704  3045               	movlw	69
  1317  0705  00CD               	movwf	??_main+1
  1318  0706  30A9               	movlw	169
  1319  0707  00CC               	movwf	??_main
  1320  0708                     u2087:	
  1321  0708  0BCC               	decfsz	??_main,f
  1322  0709  2F08               	goto	u2087
  1323  070A  0BCD               	decfsz	??_main+1,f
  1324  070B  2F08               	goto	u2087
  1325  070C  0BCE               	decfsz	??_main+2,f
  1326  070D  2F08               	goto	u2087
  1327  070E  2F0F               	nop2
  1328                           
  1329                           ;main.c: 307: _delay((unsigned long)((50)*(20000000/4000.0)));
  1330  070F  3002               	movlw	2
  1331  0710  1283               	bcf	3,5	;RP0=0, select bank0
  1332  0711  1303               	bcf	3,6	;RP1=0, select bank0
  1333  0712  00CE               	movwf	??_main+2
  1334  0713  3045               	movlw	69
  1335  0714  00CD               	movwf	??_main+1
  1336  0715  30A9               	movlw	169
  1337  0716  00CC               	movwf	??_main
  1338  0717                     u2097:	
  1339  0717  0BCC               	decfsz	??_main,f
  1340  0718  2F17               	goto	u2097
  1341  0719  0BCD               	decfsz	??_main+1,f
  1342  071A  2F17               	goto	u2097
  1343  071B  0BCE               	decfsz	??_main+2,f
  1344  071C  2F17               	goto	u2097
  1345  071D  2F1E               	nop2
  1346                           
  1347                           ;main.c: 308: _delay((unsigned long)((50)*(20000000/4000.0)));
  1348  071E  3002               	movlw	2
  1349  071F  1283               	bcf	3,5	;RP0=0, select bank0
  1350  0720  1303               	bcf	3,6	;RP1=0, select bank0
  1351  0721  00CE               	movwf	??_main+2
  1352  0722  3045               	movlw	69
  1353  0723  00CD               	movwf	??_main+1
  1354  0724  30A9               	movlw	169
  1355  0725  00CC               	movwf	??_main
  1356  0726                     u2107:	
  1357  0726  0BCC               	decfsz	??_main,f
  1358  0727  2F26               	goto	u2107
  1359  0728  0BCD               	decfsz	??_main+1,f
  1360  0729  2F26               	goto	u2107
  1361  072A  0BCE               	decfsz	??_main+2,f
  1362  072B  2F26               	goto	u2107
  1363  072C  2F2D               	nop2
  1364                           
  1365                           ;main.c: 309: _delay((unsigned long)((50)*(20000000/4000.0)));
  1366  072D  3002               	movlw	2
  1367  072E  1283               	bcf	3,5	;RP0=0, select bank0
  1368  072F  1303               	bcf	3,6	;RP1=0, select bank0
  1369  0730  00CE               	movwf	??_main+2
  1370  0731  3045               	movlw	69
  1371  0732  00CD               	movwf	??_main+1
  1372  0733  30A9               	movlw	169
  1373  0734  00CC               	movwf	??_main
  1374  0735                     u2117:	
  1375  0735  0BCC               	decfsz	??_main,f
  1376  0736  2F35               	goto	u2117
  1377  0737  0BCD               	decfsz	??_main+1,f
  1378  0738  2F35               	goto	u2117
  1379  0739  0BCE               	decfsz	??_main+2,f
  1380  073A  2F35               	goto	u2117
  1381  073B  2F3C               	nop2
  1382                           
  1383                           ;main.c: 310: _delay((unsigned long)((50)*(20000000/4000.0)));
  1384  073C  3002               	movlw	2
  1385  073D  1283               	bcf	3,5	;RP0=0, select bank0
  1386  073E  1303               	bcf	3,6	;RP1=0, select bank0
  1387  073F  00CE               	movwf	??_main+2
  1388  0740  3045               	movlw	69
  1389  0741  00CD               	movwf	??_main+1
  1390  0742  30A9               	movlw	169
  1391  0743  00CC               	movwf	??_main
  1392  0744                     u2127:	
  1393  0744  0BCC               	decfsz	??_main,f
  1394  0745  2F44               	goto	u2127
  1395  0746  0BCD               	decfsz	??_main+1,f
  1396  0747  2F44               	goto	u2127
  1397  0748  0BCE               	decfsz	??_main+2,f
  1398  0749  2F44               	goto	u2127
  1399  074A  2F4B               	nop2
  1400                           
  1401                           ;main.c: 311: _delay((unsigned long)((50)*(20000000/4000.0)));
  1402  074B  3002               	movlw	2
  1403  074C  1283               	bcf	3,5	;RP0=0, select bank0
  1404  074D  1303               	bcf	3,6	;RP1=0, select bank0
  1405  074E  00CE               	movwf	??_main+2
  1406  074F  3045               	movlw	69
  1407  0750  00CD               	movwf	??_main+1
  1408  0751  30A9               	movlw	169
  1409  0752  00CC               	movwf	??_main
  1410  0753                     u2137:	
  1411  0753  0BCC               	decfsz	??_main,f
  1412  0754  2F53               	goto	u2137
  1413  0755  0BCD               	decfsz	??_main+1,f
  1414  0756  2F53               	goto	u2137
  1415  0757  0BCE               	decfsz	??_main+2,f
  1416  0758  2F53               	goto	u2137
  1417  0759  2F5A               	nop2
  1418                           
  1419                           ;main.c: 312: _delay((unsigned long)((50)*(20000000/4000.0)));
  1420  075A  3002               	movlw	2
  1421  075B  1283               	bcf	3,5	;RP0=0, select bank0
  1422  075C  1303               	bcf	3,6	;RP1=0, select bank0
  1423  075D  00CE               	movwf	??_main+2
  1424  075E  3045               	movlw	69
  1425  075F  00CD               	movwf	??_main+1
  1426  0760  30A9               	movlw	169
  1427  0761  00CC               	movwf	??_main
  1428  0762                     u2147:	
  1429  0762  0BCC               	decfsz	??_main,f
  1430  0763  2F62               	goto	u2147
  1431  0764  0BCD               	decfsz	??_main+1,f
  1432  0765  2F62               	goto	u2147
  1433  0766  0BCE               	decfsz	??_main+2,f
  1434  0767  2F62               	goto	u2147
  1435  0768  2F69               	nop2
  1436                           
  1437                           ;main.c: 313: _delay((unsigned long)((50)*(20000000/4000.0)));
  1438  0769  3002               	movlw	2
  1439  076A  1283               	bcf	3,5	;RP0=0, select bank0
  1440  076B  1303               	bcf	3,6	;RP1=0, select bank0
  1441  076C  00CE               	movwf	??_main+2
  1442  076D  3045               	movlw	69
  1443  076E  00CD               	movwf	??_main+1
  1444  076F  30A9               	movlw	169
  1445  0770  00CC               	movwf	??_main
  1446  0771                     u2157:	
  1447  0771  0BCC               	decfsz	??_main,f
  1448  0772  2F71               	goto	u2157
  1449  0773  0BCD               	decfsz	??_main+1,f
  1450  0774  2F71               	goto	u2157
  1451  0775  0BCE               	decfsz	??_main+2,f
  1452  0776  2F71               	goto	u2157
  1453  0777  2F78               	nop2
  1454                           
  1455                           ;main.c: 336: if(uartReceiveBufferW != uartReceiveBufferR)
  1456  0778  1283               	bcf	3,5	;RP0=0, select bank0
  1457  0779  1303               	bcf	3,6	;RP1=0, select bank0
  1458  077A  0863               	movf	_uartReceiveBufferW,w	;volatile
  1459  077B  0662               	xorwf	_uartReceiveBufferR,w	;volatile
  1460  077C  1903               	skipnz
  1461  077D  2DF8               	goto	l8995
  1462                           
  1463                           ;main.c: 337: {
  1464                           ;main.c: 338: bufferValue = cGetFromReceiveBuffer();
  1465  077E  120A  118A  21C5   	fcall	_cGetFromReceiveBuffer
      +       120A  118A         
  1466  0783  00D8               	movwf	_bufferValue
  1467                           
  1468                           ;main.c: 340: if(bufferValue == 0x02)
  1469  0784  3A02               	xorlw	2
  1470  0785  1D03               	skipz
  1471  0786  2F8B               	goto	l9065
  1472                           
  1473                           ;main.c: 341: {
  1474                           ;main.c: 342: buffer_SM = 2;
  1475  0787  3002               	movlw	2
  1476  0788                     L1:	
  1477  0788  00EF               	movwf	_buffer_SM	;volatile
  1478                           
  1479                           ;main.c: 343: dataCounter = 0;
  1480  0789  01DA               	clrf	_dataCounter
  1481                           
  1482                           ;main.c: 344: }
  1483  078A  2FB5               	goto	l9089
  1484  078B                     l9065:	
  1485                           
  1486                           ;main.c: 345: else if(buffer_SM == 2)
  1487  078B  086F               	movf	_buffer_SM,w	;volatile
  1488  078C  3A02               	xorlw	2
  1489  078D  1D03               	skipz
  1490  078E  2F9C               	goto	l9077
  1491                           
  1492                           ;main.c: 346: {
  1493                           ;main.c: 347: commandBuffer[dataCounter] = bufferValue;
  1494  078F  085A               	movf	_dataCounter,w
  1495  0790  3E6A               	addlw	_commandBuffer& (0+255)
  1496  0791  0084               	movwf	4
  1497  0792  0858               	movf	_bufferValue,w
  1498  0793  1383               	bcf	3,7	;select IRP bank0
  1499  0794  0080               	movwf	0
  1500                           
  1501                           ;main.c: 348: dataCounter++;
  1502  0795  0ADA               	incf	_dataCounter,f
  1503                           
  1504                           ;main.c: 350: if(dataCounter == 3)
  1505  0796  085A               	movf	_dataCounter,w
  1506  0797  3A03               	xorlw	3
  1507  0798  1D03               	skipz
  1508  0799  2FB5               	goto	l9089
  1509                           
  1510                           ;main.c: 351: {
  1511                           ;main.c: 352: buffer_SM = 3;
  1512  079A  3003               	movlw	3
  1513  079B  2F88               	goto	L1
  1514  079C                     l9077:	
  1515                           
  1516                           ;main.c: 357: else if(buffer_SM == 3)
  1517  079C  086F               	movf	_buffer_SM,w	;volatile
  1518  079D  3A03               	xorlw	3
  1519  079E  1D03               	skipz
  1520  079F  2FB5               	goto	l9089
  1521                           
  1522                           ;main.c: 358: {
  1523                           ;main.c: 359: if(dataCounter < 16)
  1524  07A0  3010               	movlw	16
  1525  07A1  025A               	subwf	_dataCounter,w
  1526  07A2  1803               	skipnc
  1527  07A3  2FB3               	goto	l2289
  1528                           
  1529                           ;main.c: 360: {
  1530                           ;main.c: 361: if(bufferValue == 0x03)
  1531  07A4  0858               	movf	_bufferValue,w
  1532  07A5  3A03               	xorlw	3
  1533  07A6  1D03               	skipz
  1534  07A7  2FAB               	goto	l9085
  1535                           
  1536                           ;main.c: 362: {
  1537                           ;main.c: 363: buffer_SM = 5;
  1538  07A8  3005               	movlw	5
  1539  07A9  00EF               	movwf	_buffer_SM	;volatile
  1540                           
  1541                           ;main.c: 364: }
  1542  07AA  2FB1               	goto	l9087
  1543  07AB                     l9085:	
  1544                           
  1545                           ;main.c: 365: else
  1546                           ;main.c: 366: {
  1547                           ;main.c: 367: dataBuffer[dataCounter] = bufferValue;
  1548  07AB  085A               	movf	_dataCounter,w
  1549  07AC  3EBE               	addlw	_dataBuffer& (0+255)
  1550  07AD  0084               	movwf	4
  1551  07AE  0858               	movf	_bufferValue,w
  1552  07AF  1383               	bcf	3,7	;select IRP bank1
  1553  07B0  0080               	movwf	0
  1554  07B1                     l9087:	
  1555                           
  1556                           ;main.c: 368: }
  1557                           ;main.c: 369: dataCounter++;
  1558  07B1  0ADA               	incf	_dataCounter,f
  1559                           
  1560                           ;main.c: 370: }
  1561  07B2  2FB5               	goto	l9089
  1562  07B3                     l2289:	
  1563                           
  1564                           ;main.c: 371: else
  1565                           ;main.c: 372: {
  1566                           ;main.c: 373: buffer_SM = 1;
  1567  07B3  01EF               	clrf	_buffer_SM	;volatile
  1568  07B4  0AEF               	incf	_buffer_SM,f	;volatile
  1569  07B5                     l9089:	
  1570                           
  1571                           ;main.c: 374: }
  1572                           ;main.c: 375: }
  1573                           ;main.c: 376: if(buffer_SM == 5)
  1574  07B5  086F               	movf	_buffer_SM,w	;volatile
  1575  07B6  3A05               	xorlw	5
  1576  07B7  1D03               	skipz
  1577  07B8  2DF8               	goto	l8995
  1578                           
  1579                           ;main.c: 377: {
  1580                           ;main.c: 378: if(commandBuffer[0] == 'C')
  1581  07B9  086A               	movf	_commandBuffer,w
  1582  07BA  3A43               	xorlw	67
  1583  07BB  1D03               	skipz
  1584  07BC  2FFD               	goto	l2297
  1585                           
  1586                           ;main.c: 379: {
  1587                           ;main.c: 380: currentCommand = (commandBuffer[1]-48) * 10;
  1588  07BD  300A               	movlw	10
  1589  07BE  00A0               	movwf	?___bmul
  1590  07BF  086B               	movf	_commandBuffer+1,w
  1591  07C0  3ED0               	addlw	208
  1592  07C1  120A  118A  21D2   	fcall	___bmul
      +       120A  118A         
  1593  07C6  00D9               	movwf	_currentCommand
  1594                           
  1595                           ;main.c: 381: currentCommand += (commandBuffer[2]-48);
  1596  07C7  086C               	movf	_commandBuffer+2,w
  1597  07C8  3ED0               	addlw	208
  1598  07C9  07D9               	addwf	_currentCommand,f
  1599                           
  1600                           ;main.c: 382: switch(currentCommand)
  1601  07CA  2FF2               	goto	l9103
  1602  07CB                     l2296:	
  1603                           ;main.c: 383: {
  1604                           ;main.c: 384: case 1:
  1605                           
  1606                           
  1607                           ;main.c: 385: (PORTAbits.RA4) = 1;
  1608  07CB  1605               	bsf	5,4	;volatile
  1609                           
  1610                           ;main.c: 386: putch(tempH);
  1611  07CC  085F               	movf	_tempH,w	;volatile
  1612  07CD  120A  118A  21B6   	fcall	_putch
      +       120A  118A         
  1613                           
  1614                           ;main.c: 388: break;
  1615  07D2  2FFD               	goto	l2297
  1616  07D3                     l2298:	
  1617                           ;main.c: 389: case 2:
  1618                           
  1619                           
  1620                           ;main.c: 390: (PORTAbits.RA4) = 0;
  1621  07D3  1205               	bcf	5,4	;volatile
  1622                           
  1623                           ;main.c: 392: break;
  1624  07D4  2FFD               	goto	l2297
  1625  07D5                     l9099:	
  1626                           
  1627                           ;main.c: 394: putch(dataBuffer[0]);
  1628  07D5  1683               	bsf	3,5	;RP0=1, select bank1
  1629  07D6  083E               	movf	_dataBuffer^(0+128),w
  1630  07D7  120A  118A  21B6   	fcall	_putch
      +       120A  118A         
  1631                           
  1632                           ;main.c: 395: putch(dataBuffer[1]);
  1633  07DC  1683               	bsf	3,5	;RP0=1, select bank1
  1634  07DD  083F               	movf	(_dataBuffer^(0+128)+1),w
  1635  07DE  120A  118A  21B6   	fcall	_putch
      +       120A  118A         
  1636                           
  1637                           ;main.c: 396: putch(dataBuffer[2]);
  1638  07E3  1683               	bsf	3,5	;RP0=1, select bank1
  1639  07E4  0840               	movf	(_dataBuffer^(0+128)+2),w
  1640  07E5  120A  118A  21B6   	fcall	_putch
      +       120A  118A         
  1641                           
  1642                           ;main.c: 397: putch(dataBuffer[3]);
  1643  07EA  1683               	bsf	3,5	;RP0=1, select bank1
  1644  07EB  0841               	movf	(_dataBuffer^(0+128)+3),w
  1645  07EC  120A  118A  21B6   	fcall	_putch
      +       120A  118A         
  1646                           
  1647                           ;main.c: 398: break;
  1648  07F1  2FFD               	goto	l2297
  1649  07F2                     l9103:	
  1650  07F2  0859               	movf	_currentCommand,w
  1651                           
  1652                           ; Switch size 1, requested type "space"
  1653                           ; Number of cases is 3, Range of values is 1 to 3
  1654                           ; switch strategies available:
  1655                           ; Name         Instructions Cycles
  1656                           ; simple_byte           10     6 (average)
  1657                           ; direct_byte           20    11 (fixed)
  1658                           ; jumptable            263     9 (fixed)
  1659                           ;	Chosen strategy is simple_byte
  1660  07F3  3A01               	xorlw	1	; case 1
  1661  07F4  1903               	skipnz
  1662  07F5  2FCB               	goto	l2296
  1663  07F6  3A03               	xorlw	3	; case 2
  1664  07F7  1903               	skipnz
  1665  07F8  2FD3               	goto	l2298
  1666  07F9  3A01               	xorlw	1	; case 3
  1667  07FA  1903               	skipnz
  1668  07FB  2FD5               	goto	l9099
  1669  07FC  2FFD               	goto	l2297
  1670  07FD                     l2297:	
  1671                           
  1672                           ;main.c: 401: buffer_SM = 1;
  1673  07FD  01EF               	clrf	_buffer_SM	;volatile
  1674  07FE  0AEF               	incf	_buffer_SM,f	;volatile
  1675                           
  1676                           ;main.c: 402: }
  1677  07FF  2DF8               	goto	l8995
  1678  0800                     __end_of_main:	
  1679                           
  1680                           	psect	text654
  1681  030B                     __ptext654:	
  1682 ;; =============== function _main ends ============
  1683                           
  1684                           
  1685 ;; *************** function _itoa *****************
  1686 ;; Defined at:
  1687 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\itoa.c"
  1688 ;; Parameters:    Size  Location     Type
  1689 ;;  buf             1    wreg     PTR unsigned char 
  1690 ;;		 -> currentTemperatureBuffer(6), 
  1691 ;;  val             2   15[BANK0 ] int 
  1692 ;;  base            2   17[BANK0 ] int 
  1693 ;; Auto vars:     Size  Location     Type
  1694 ;;  buf             1   20[BANK0 ] PTR unsigned char 
  1695 ;;		 -> currentTemperatureBuffer(6), 
  1696 ;;  cp              1    0        PTR unsigned char 
  1697 ;;		 -> currentTemperatureBuffer(6), 
  1698 ;; Return value:  Size  Location     Type
  1699 ;;                  1    wreg      PTR unsigned char 
  1700 ;; Registers used:
  1701 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1702 ;; Tracked objects:
  1703 ;;		On entry : 60/0
  1704 ;;		On exit  : 160/0
  1705 ;;		Unchanged: FFE9F/0
  1706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1707 ;;      Params:         0       4       0       0       0
  1708 ;;      Locals:         0       2       0       0       0
  1709 ;;      Temps:          0       0       0       0       0
  1710 ;;      Totals:         0       6       0       0       0
  1711 ;;Total ram usage:        6 bytes
  1712 ;; Hardware stack levels used:    1
  1713 ;; Hardware stack levels required when called:    4
  1714 ;; This function calls:
  1715 ;;		_utoa
  1716 ;; This function is called by:
  1717 ;;		_main
  1718 ;; This function uses a non-reentrant model
  1719 ;;
  1720  030B                     _itoa:	
  1721                           
  1722                           ; Regs used in _itoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1723                           ;itoa@buf stored from wreg
  1724  030B  00B4               	movwf	itoa@buf
  1725  030C  1FB0               	btfss	itoa@val+1,7
  1726  030D  2B19               	goto	l8971
  1727  030E  0834               	movf	itoa@buf,w
  1728  030F  0084               	movwf	4
  1729  0310  302D               	movlw	45
  1730  0311  1383               	bcf	3,7	;select IRP bank0
  1731  0312  0080               	movwf	0
  1732  0313  0AB4               	incf	itoa@buf,f
  1733  0314  09AF               	comf	itoa@val,f
  1734  0315  09B0               	comf	itoa@val+1,f
  1735  0316  0AAF               	incf	itoa@val,f
  1736  0317  1903               	skipnz
  1737  0318  0AB0               	incf	itoa@val+1,f
  1738  0319                     l8971:	
  1739  0319  0830               	movf	itoa@val+1,w
  1740  031A  00A8               	movwf	?_utoa+1
  1741  031B  082F               	movf	itoa@val,w
  1742  031C  00A7               	movwf	?_utoa
  1743  031D  0832               	movf	itoa@base+1,w
  1744  031E  00AA               	movwf	?_utoa+3
  1745  031F  0831               	movf	itoa@base,w
  1746  0320  00A9               	movwf	?_utoa+2
  1747  0321  0834               	movf	itoa@buf,w
  1748  0322  2B23               	ljmp	_utoa
  1749  0323                     __end_of_itoa:	
  1750  0323                     __ptext659:	
  1751 ;; =============== function ___ftdiv ends ============
  1752                           
  1753                           
  1754 ;; *************** function _utoa *****************
  1755 ;; Defined at:
  1756 ;;		line 18 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\itoa.c"
  1757 ;; Parameters:    Size  Location     Type
  1758 ;;  buf             1    wreg     PTR unsigned char 
  1759 ;;		 -> currentTemperatureBuffer(6), 
  1760 ;;  val             2    7[BANK0 ] unsigned int 
  1761 ;;  base            2    9[BANK0 ] int 
  1762 ;; Auto vars:     Size  Location     Type
  1763 ;;  buf             1   14[BANK0 ] PTR unsigned char 
  1764 ;;		 -> currentTemperatureBuffer(6), 
  1765 ;;  v               2   11[BANK0 ] unsigned int 
  1766 ;;  c               1   13[BANK0 ] unsigned char 
  1767 ;; Return value:  Size  Location     Type
  1768 ;;                  1    wreg      PTR unsigned char 
  1769 ;; Registers used:
  1770 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1771 ;; Tracked objects:
  1772 ;;		On entry : 60/0
  1773 ;;		On exit  : 160/0
  1774 ;;		Unchanged: FFE9F/0
  1775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1776 ;;      Params:         0       4       0       0       0
  1777 ;;      Locals:         0       4       0       0       0
  1778 ;;      Temps:          0       0       0       0       0
  1779 ;;      Totals:         0       8       0       0       0
  1780 ;;Total ram usage:        8 bytes
  1781 ;; Hardware stack levels used:    1
  1782 ;; Hardware stack levels required when called:    3
  1783 ;; This function calls:
  1784 ;;		___lwdiv
  1785 ;;		___lwmod
  1786 ;; This function is called by:
  1787 ;;		_itoa
  1788 ;; This function uses a non-reentrant model
  1789 ;;
  1790  0323                     _utoa:	
  1791                           
  1792                           ; Regs used in _utoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1793                           ;utoa@buf stored from wreg
  1794  0323  00AE               	movwf	utoa@buf
  1795  0324  0828               	movf	utoa@val+1,w
  1796  0325  00AC               	movwf	utoa@v+1
  1797  0326  0827               	movf	utoa@val,w
  1798  0327  00AB               	movwf	utoa@v
  1799  0328                     l8899:	
  1800  0328  082A               	movf	utoa@base+1,w
  1801  0329  00A1               	movwf	?___lwdiv+1
  1802  032A  0829               	movf	utoa@base,w
  1803  032B  00A0               	movwf	?___lwdiv
  1804  032C  082C               	movf	utoa@v+1,w
  1805  032D  00A3               	movwf	?___lwdiv+3
  1806  032E  082B               	movf	utoa@v,w
  1807  032F  00A2               	movwf	?___lwdiv+2
  1808  0330  236E  120A  118A   	fcall	___lwdiv
  1809  0333  0821               	movf	?___lwdiv+1,w
  1810  0334  00AC               	movwf	utoa@v+1
  1811  0335  0820               	movf	?___lwdiv,w
  1812  0336  00AB               	movwf	utoa@v
  1813  0337  0AAE               	incf	utoa@buf,f
  1814  0338  042C               	iorwf	utoa@v+1,w
  1815  0339  1D03               	skipz
  1816  033A  2B28               	goto	l8899
  1817  033B  082E               	movf	utoa@buf,w
  1818  033C  0084               	movwf	4
  1819  033D  1383               	bcf	3,7	;select IRP bank0
  1820  033E  0180               	clrf	0
  1821  033F  03AE               	decf	utoa@buf,f
  1822  0340                     l8909:	
  1823  0340  082A               	movf	utoa@base+1,w
  1824  0341  00A1               	movwf	?___lwmod+1
  1825  0342  0829               	movf	utoa@base,w
  1826  0343  00A0               	movwf	?___lwmod
  1827  0344  0828               	movf	utoa@val+1,w
  1828  0345  00A3               	movwf	?___lwmod+3
  1829  0346  0827               	movf	utoa@val,w
  1830  0347  00A2               	movwf	?___lwmod+2
  1831  0348  2398  120A  118A   	fcall	___lwmod
  1832  034B  0820               	movf	?___lwmod,w
  1833  034C  00AD               	movwf	utoa@c
  1834  034D  082A               	movf	utoa@base+1,w
  1835  034E  00A1               	movwf	?___lwdiv+1
  1836  034F  0829               	movf	utoa@base,w
  1837  0350  00A0               	movwf	?___lwdiv
  1838  0351  0828               	movf	utoa@val+1,w
  1839  0352  00A3               	movwf	?___lwdiv+3
  1840  0353  0827               	movf	utoa@val,w
  1841  0354  00A2               	movwf	?___lwdiv+2
  1842  0355  236E  120A  118A   	fcall	___lwdiv
  1843  0358  0821               	movf	?___lwdiv+1,w
  1844  0359  00A8               	movwf	utoa@val+1
  1845  035A  0820               	movf	?___lwdiv,w
  1846  035B  00A7               	movwf	utoa@val
  1847  035C  300A               	movlw	10
  1848  035D  022D               	subwf	utoa@c,w
  1849  035E  1C03               	skipc
  1850  035F  2B62               	goto	l6896
  1851  0360  3007               	movlw	7
  1852  0361  07AD               	addwf	utoa@c,f
  1853  0362                     l6896:	
  1854  0362  3030               	movlw	48
  1855  0363  07AD               	addwf	utoa@c,f
  1856  0364  082E               	movf	utoa@buf,w
  1857  0365  0084               	movwf	4
  1858  0366  082D               	movf	utoa@c,w
  1859  0367  0080               	movwf	0
  1860  0368  03AE               	decf	utoa@buf,f
  1861  0369  0828               	movf	utoa@val+1,w
  1862  036A  0427               	iorwf	utoa@val,w
  1863  036B  1903               	btfsc	3,2
  1864  036C  0008               	return
  1865  036D  2B40               	goto	l8909
  1866  036E                     __end_of_utoa:	
  1867  036E                     __ptext664:	
  1868 ;; =============== function ___lwmod ends ============
  1869                           
  1870                           
  1871 ;; *************** function ___lwdiv *****************
  1872 ;; Defined at:
  1873 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
  1874 ;; Parameters:    Size  Location     Type
  1875 ;;  divisor         2    0[BANK0 ] unsigned int 
  1876 ;;  dividend        2    2[BANK0 ] unsigned int 
  1877 ;; Auto vars:     Size  Location     Type
  1878 ;;  quotient        2    5[BANK0 ] unsigned int 
  1879 ;;  counter         1    4[BANK0 ] unsigned char 
  1880 ;; Return value:  Size  Location     Type
  1881 ;;                  2    0[BANK0 ] unsigned int 
  1882 ;; Registers used:
  1883 ;;		wreg, status,2, status,0
  1884 ;; Tracked objects:
  1885 ;;		On entry : 60/0
  1886 ;;		On exit  : 60/0
  1887 ;;		Unchanged: FFF9F/0
  1888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1889 ;;      Params:         0       4       0       0       0
  1890 ;;      Locals:         0       3       0       0       0
  1891 ;;      Temps:          0       0       0       0       0
  1892 ;;      Totals:         0       7       0       0       0
  1893 ;;Total ram usage:        7 bytes
  1894 ;; Hardware stack levels used:    1
  1895 ;; Hardware stack levels required when called:    2
  1896 ;; This function calls:
  1897 ;;		Nothing
  1898 ;; This function is called by:
  1899 ;;		_utoa
  1900 ;; This function uses a non-reentrant model
  1901 ;;
  1902  036E                     ___lwdiv:	
  1903                           
  1904                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1905  036E  01A5               	clrf	___lwdiv@quotient
  1906  036F  01A6               	clrf	___lwdiv@quotient+1
  1907  0370  0821               	movf	___lwdiv@divisor+1,w
  1908  0371  0420               	iorwf	___lwdiv@divisor,w
  1909  0372  1903               	skipnz
  1910  0373  2B93               	goto	l8873
  1911  0374  01A4               	clrf	___lwdiv@counter
  1912  0375                     L5:	
  1913  0375  0AA4               	incf	___lwdiv@counter,f
  1914  0376  1BA1               	btfsc	___lwdiv@divisor+1,7
  1915  0377  2B7C               	goto	l8861
  1916  0378  1003               	clrc
  1917  0379  0DA0               	rlf	___lwdiv@divisor,f
  1918  037A  0DA1               	rlf	___lwdiv@divisor+1,f
  1919  037B  2B75               	goto	L5
  1920  037C                     l8861:	
  1921  037C  1003               	clrc
  1922  037D  0DA5               	rlf	___lwdiv@quotient,f
  1923  037E  0DA6               	rlf	___lwdiv@quotient+1,f
  1924  037F  0821               	movf	___lwdiv@divisor+1,w
  1925  0380  0223               	subwf	___lwdiv@dividend+1,w
  1926  0381  1D03               	skipz
  1927  0382  2B85               	goto	u1725
  1928  0383  0820               	movf	___lwdiv@divisor,w
  1929  0384  0222               	subwf	___lwdiv@dividend,w
  1930  0385                     u1725:	
  1931  0385  1C03               	skipc
  1932  0386  2B8F               	goto	L6
  1933  0387  0820               	movf	___lwdiv@divisor,w
  1934  0388  02A2               	subwf	___lwdiv@dividend,f
  1935  0389  0821               	movf	___lwdiv@divisor+1,w
  1936  038A  1C03               	skipc
  1937  038B  03A3               	decf	___lwdiv@dividend+1,f
  1938  038C  02A3               	subwf	___lwdiv@dividend+1,f
  1939  038D  1425               	bsf	___lwdiv@quotient,0
  1940  038E  1003               	clrc
  1941  038F                     L6:	
  1942  038F  0CA1               	rrf	___lwdiv@divisor+1,f
  1943  0390  0CA0               	rrf	___lwdiv@divisor,f
  1944  0391  0BA4               	decfsz	___lwdiv@counter,f
  1945  0392  2B7C               	goto	l8861
  1946  0393                     l8873:	
  1947  0393  0826               	movf	___lwdiv@quotient+1,w
  1948  0394  00A1               	movwf	?___lwdiv+1
  1949  0395  0825               	movf	___lwdiv@quotient,w
  1950  0396  00A0               	movwf	?___lwdiv
  1951  0397  0008               	return
  1952  0398                     __end_of___lwdiv:	
  1953  0398                     __ptext663:	
  1954 ;; =============== function ___ftpack ends ============
  1955                           
  1956                           
  1957 ;; *************** function ___lwmod *****************
  1958 ;; Defined at:
  1959 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  1960 ;; Parameters:    Size  Location     Type
  1961 ;;  divisor         2    0[BANK0 ] unsigned int 
  1962 ;;  dividend        2    2[BANK0 ] unsigned int 
  1963 ;; Auto vars:     Size  Location     Type
  1964 ;;  counter         1    4[BANK0 ] unsigned char 
  1965 ;; Return value:  Size  Location     Type
  1966 ;;                  2    0[BANK0 ] unsigned int 
  1967 ;; Registers used:
  1968 ;;		wreg, status,2, status,0
  1969 ;; Tracked objects:
  1970 ;;		On entry : 60/0
  1971 ;;		On exit  : 160/0
  1972 ;;		Unchanged: FFE9F/0
  1973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1974 ;;      Params:         0       4       0       0       0
  1975 ;;      Locals:         0       1       0       0       0
  1976 ;;      Temps:          0       0       0       0       0
  1977 ;;      Totals:         0       5       0       0       0
  1978 ;;Total ram usage:        5 bytes
  1979 ;; Hardware stack levels used:    1
  1980 ;; Hardware stack levels required when called:    2
  1981 ;; This function calls:
  1982 ;;		Nothing
  1983 ;; This function is called by:
  1984 ;;		_utoa
  1985 ;; This function uses a non-reentrant model
  1986 ;;
  1987  0398                     ___lwmod:	
  1988                           
  1989                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1990  0398  0821               	movf	___lwmod@divisor+1,w
  1991  0399  0420               	iorwf	___lwmod@divisor,w
  1992  039A  1903               	skipnz
  1993  039B  2BB7               	goto	l8893
  1994  039C  01A4               	clrf	___lwmod@counter
  1995  039D                     L3:	
  1996  039D  0AA4               	incf	___lwmod@counter,f
  1997  039E  1BA1               	btfsc	___lwmod@divisor+1,7
  1998  039F  2BA4               	goto	l8885
  1999  03A0  1003               	clrc
  2000  03A1  0DA0               	rlf	___lwmod@divisor,f
  2001  03A2  0DA1               	rlf	___lwmod@divisor+1,f
  2002  03A3  2B9D               	goto	L3
  2003  03A4                     l8885:	
  2004  03A4  0821               	movf	___lwmod@divisor+1,w
  2005  03A5  0223               	subwf	___lwmod@dividend+1,w
  2006  03A6  1D03               	skipz
  2007  03A7  2BAA               	goto	u1765
  2008  03A8  0820               	movf	___lwmod@divisor,w
  2009  03A9  0222               	subwf	___lwmod@dividend,w
  2010  03AA                     u1765:	
  2011  03AA  1C03               	skipc
  2012  03AB  2BB3               	goto	L4
  2013  03AC  0820               	movf	___lwmod@divisor,w
  2014  03AD  02A2               	subwf	___lwmod@dividend,f
  2015  03AE  0821               	movf	___lwmod@divisor+1,w
  2016  03AF  1C03               	skipc
  2017  03B0  03A3               	decf	___lwmod@dividend+1,f
  2018  03B1  02A3               	subwf	___lwmod@dividend+1,f
  2019  03B2  1003               	clrc
  2020  03B3                     L4:	
  2021  03B3  0CA1               	rrf	___lwmod@divisor+1,f
  2022  03B4  0CA0               	rrf	___lwmod@divisor,f
  2023  03B5  0BA4               	decfsz	___lwmod@counter,f
  2024  03B6  2BA4               	goto	l8885
  2025  03B7                     l8893:	
  2026  03B7  0823               	movf	___lwmod@dividend+1,w
  2027  03B8  00A1               	movwf	?___lwmod+1
  2028  03B9  0822               	movf	___lwmod@dividend,w
  2029  03BA  00A0               	movwf	?___lwmod
  2030  03BB  0008               	return
  2031  03BC                     __end_of___lwmod:	
  2032                           
  2033                           	psect	text655
  2034  03BC                     __ptext655:	
  2035 ;; =============== function _itoa ends ============
  2036                           
  2037                           
  2038 ;; *************** function _getTemperature *****************
  2039 ;; Defined at:
  2040 ;;		line 670 in file "../src/main.c"
  2041 ;; Parameters:    Size  Location     Type
  2042 ;;		None
  2043 ;; Auto vars:     Size  Location     Type
  2044 ;;  milliVolt       3   36[BANK0 ] float 
  2045 ;;  iTempN          2   41[BANK0 ] unsigned int 
  2046 ;;  iTempP          2   39[BANK0 ] unsigned int 
  2047 ;;  m               1   43[BANK0 ] unsigned char 
  2048 ;; Return value:  Size  Location     Type
  2049 ;;                  1    wreg      unsigned char 
  2050 ;; Registers used:
  2051 ;;		wreg, status,2, status,0, pclath, cstack
  2052 ;; Tracked objects:
  2053 ;;		On entry : 0/0
  2054 ;;		On exit  : 60/0
  2055 ;;		Unchanged: FFF9F/0
  2056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2057 ;;      Params:         0       0       0       0       0
  2058 ;;      Locals:         0       8       0       0       0
  2059 ;;      Temps:          0       0       0       0       0
  2060 ;;      Totals:         0       8       0       0       0
  2061 ;;Total ram usage:        8 bytes
  2062 ;; Hardware stack levels used:    1
  2063 ;; Hardware stack levels required when called:    4
  2064 ;; This function calls:
  2065 ;;		_read_ADC
  2066 ;;		___lwtoft
  2067 ;;		___ftmul
  2068 ;;		___ftdiv
  2069 ;;		___fttol
  2070 ;; This function is called by:
  2071 ;;		_main
  2072 ;; This function uses a non-reentrant model
  2073 ;;
  2074  03BC                     _getTemperature:	
  2075                           
  2076                           ;main.c: 671: unsigned int iTempP, iTempN;
  2077                           ;main.c: 672: float milliVolt;
  2078                           ;main.c: 673: unsigned char m;
  2079                           ;main.c: 675: iTempP = 0;
  2080                           
  2081                           ; Regs used in _getTemperature: [wreg+status,2+status,0+pclath+cstack]
  2082  03BC  1283               	bcf	3,5	;RP0=0, select bank0
  2083  03BD  1303               	bcf	3,6	;RP1=0, select bank0
  2084  03BE  01C7               	clrf	getTemperature@iTempP
  2085  03BF  01C8               	clrf	getTemperature@iTempP+1
  2086                           
  2087                           ;main.c: 676: for(m=0; m<16; m++)
  2088  03C0  01CB               	clrf	getTemperature@m
  2089  03C1                     l8933:	
  2090                           
  2091                           ;main.c: 677: {
  2092                           ;main.c: 678: iTempP += read_ADC((0));
  2093  03C1  3000               	movlw	0
  2094  03C2  242E  120A  118A   	fcall	_read_ADC
  2095  03C5  0820               	movf	?_read_ADC,w
  2096  03C6  07C7               	addwf	getTemperature@iTempP,f
  2097  03C7  1803               	skipnc
  2098  03C8  0AC8               	incf	getTemperature@iTempP+1,f
  2099  03C9  0821               	movf	?_read_ADC+1,w
  2100  03CA  07C8               	addwf	getTemperature@iTempP+1,f
  2101  03CB  3010               	movlw	16
  2102  03CC  0ACB               	incf	getTemperature@m,f
  2103  03CD  024B               	subwf	getTemperature@m,w
  2104  03CE  1C03               	skipc
  2105  03CF  2BC1               	goto	l8933
  2106  03D0  300F               	movlw	15
  2107                           
  2108                           ;main.c: 679: }
  2109                           ;main.c: 680: iTempP /= 16;
  2110  03D1  0EC7               	swapf	getTemperature@iTempP,f
  2111  03D2  0EC8               	swapf	getTemperature@iTempP+1,f
  2112  03D3  05C7               	andwf	getTemperature@iTempP,f
  2113  03D4  0848               	movf	getTemperature@iTempP+1,w
  2114  03D5  39F0               	andlw	240
  2115  03D6  04C7               	iorwf	getTemperature@iTempP,f
  2116  03D7  300F               	movlw	15
  2117  03D8  05C8               	andwf	getTemperature@iTempP+1,f
  2118                           
  2119                           ;main.c: 682: iTempN = 0;
  2120  03D9  01C9               	clrf	getTemperature@iTempN
  2121  03DA  01CA               	clrf	getTemperature@iTempN+1
  2122                           
  2123                           ;main.c: 683: for(m=0; m<16; m++)
  2124  03DB  01CB               	clrf	getTemperature@m
  2125  03DC                     l8947:	
  2126                           
  2127                           ;main.c: 684: {
  2128                           ;main.c: 685: iTempN += read_ADC((1));
  2129  03DC  3001               	movlw	1
  2130  03DD  242E  120A  118A   	fcall	_read_ADC
  2131  03E0  0820               	movf	?_read_ADC,w
  2132  03E1  07C9               	addwf	getTemperature@iTempN,f
  2133  03E2  1803               	skipnc
  2134  03E3  0ACA               	incf	getTemperature@iTempN+1,f
  2135  03E4  0821               	movf	?_read_ADC+1,w
  2136  03E5  07CA               	addwf	getTemperature@iTempN+1,f
  2137  03E6  3010               	movlw	16
  2138  03E7  0ACB               	incf	getTemperature@m,f
  2139  03E8  024B               	subwf	getTemperature@m,w
  2140  03E9  1C03               	skipc
  2141  03EA  2BDC               	goto	l8947
  2142  03EB  300F               	movlw	15
  2143                           
  2144                           ;main.c: 686: }
  2145                           ;main.c: 687: iTempN /= 16;
  2146  03EC  0EC9               	swapf	getTemperature@iTempN,f
  2147  03ED  0ECA               	swapf	getTemperature@iTempN+1,f
  2148  03EE  05C9               	andwf	getTemperature@iTempN,f
  2149  03EF  084A               	movf	getTemperature@iTempN+1,w
  2150  03F0  39F0               	andlw	240
  2151  03F1  04C9               	iorwf	getTemperature@iTempN,f
  2152  03F2  300F               	movlw	15
  2153  03F3  05CA               	andwf	getTemperature@iTempN+1,f
  2154                           
  2155                           ;main.c: 689: milliVolt = (iTempP - iTempN) * a;
  2156  03F4  3040               	movlw	64
  2157  03F5  00AB               	movwf	?___ftmul
  2158  03F6  309C               	movlw	156
  2159  03F7  00AC               	movwf	?___ftmul+1
  2160  03F8  3040               	movlw	64
  2161  03F9  00AD               	movwf	?___ftmul+2
  2162  03FA  0848               	movf	getTemperature@iTempP+1,w
  2163  03FB  00A9               	movwf	?___lwtoft+1
  2164  03FC  0847               	movf	getTemperature@iTempP,w
  2165  03FD  00A8               	movwf	?___lwtoft
  2166  03FE  0849               	movf	getTemperature@iTempN,w
  2167  03FF  02A8               	subwf	?___lwtoft,f
  2168  0400  084A               	movf	getTemperature@iTempN+1,w
  2169  0401  1C03               	skipc
  2170  0402  03A9               	decf	?___lwtoft+1,f
  2171  0403  02A9               	subwf	?___lwtoft+1,f
  2172  0404  255F  120A  118A   	fcall	___lwtoft
  2173  0407  0828               	movf	?___lwtoft,w
  2174  0408  00AE               	movwf	?___ftmul+3
  2175  0409  0829               	movf	?___lwtoft+1,w
  2176  040A  00AF               	movwf	?___ftmul+4
  2177  040B  082A               	movf	?___lwtoft+2,w
  2178  040C  00B0               	movwf	?___ftmul+5
  2179  040D  24B2  120A  118A   	fcall	___ftmul
  2180  0410  082B               	movf	?___ftmul,w
  2181  0411  00C4               	movwf	getTemperature@milliVolt
  2182  0412  082C               	movf	?___ftmul+1,w
  2183  0413  00C5               	movwf	getTemperature@milliVolt+1
  2184  0414  082D               	movf	?___ftmul+2,w
  2185  0415  00C6               	movwf	getTemperature@milliVolt+2
  2186                           
  2187                           ;main.c: 690: m = milliVolt / 10.0;
  2188  0416  0844               	movf	getTemperature@milliVolt,w
  2189  0417  00B8               	movwf	?___ftdiv+3
  2190  0418  0845               	movf	getTemperature@milliVolt+1,w
  2191  0419  00B9               	movwf	?___ftdiv+4
  2192  041A  0846               	movf	getTemperature@milliVolt+2,w
  2193  041B  00BA               	movwf	?___ftdiv+5
  2194  041C  3020               	movlw	32
  2195  041D  01B5               	clrf	?___ftdiv
  2196  041E  00B6               	movwf	?___ftdiv+1
  2197  041F  3041               	movlw	65
  2198  0420  00B7               	movwf	?___ftdiv+2
  2199  0421  244A  120A  118A   	fcall	___ftdiv
  2200  0424  0835               	movf	?___ftdiv,w
  2201  0425  00A8               	movwf	?___fttol
  2202  0426  0836               	movf	?___ftdiv+1,w
  2203  0427  00A9               	movwf	?___fttol+1
  2204  0428  0837               	movf	?___ftdiv+2,w
  2205  0429  00AA               	movwf	?___fttol+2
  2206  042A  256F               	fcall	___fttol
  2207  042B  0828               	movf	?___fttol,w
  2208  042C  00CB               	movwf	getTemperature@m
  2209                           
  2210                           ;main.c: 691: return m;
  2211  042D  0008               	return
  2212  042E                     __end_of_getTemperature:	
  2213  042E                     __ptext670:	
  2214 ;; =============== function _vInitializeBoard ends ============
  2215                           
  2216                           
  2217 ;; *************** function _read_ADC *****************
  2218 ;; Defined at:
  2219 ;;		line 69 in file "../src/adc.c"
  2220 ;; Parameters:    Size  Location     Type
  2221 ;;  analogChanne    1    wreg     unsigned char 
  2222 ;; Auto vars:     Size  Location     Type
  2223 ;;  analogChanne    1    3[BANK0 ] unsigned char 
  2224 ;;  adcResult       2    4[BANK0 ] unsigned int 
  2225 ;; Return value:  Size  Location     Type
  2226 ;;                  2    0[BANK0 ] unsigned int 
  2227 ;; Registers used:
  2228 ;;		wreg, status,2, status,0
  2229 ;; Tracked objects:
  2230 ;;		On entry : 0/0
  2231 ;;		On exit  : 60/0
  2232 ;;		Unchanged: FFF9F/0
  2233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2234 ;;      Params:         0       2       0       0       0
  2235 ;;      Locals:         0       3       0       0       0
  2236 ;;      Temps:          0       1       0       0       0
  2237 ;;      Totals:         0       6       0       0       0
  2238 ;;Total ram usage:        6 bytes
  2239 ;; Hardware stack levels used:    1
  2240 ;; Hardware stack levels required when called:    2
  2241 ;; This function calls:
  2242 ;;		Nothing
  2243 ;; This function is called by:
  2244 ;;		_getTemperature
  2245 ;; This function uses a non-reentrant model
  2246 ;;
  2247  042E                     _read_ADC:	
  2248                           
  2249                           ; Regs used in _read_ADC: [wreg+status,2+status,0]
  2250                           ;read_ADC@analogChannel stored from wreg
  2251  042E  1283               	bcf	3,5	;RP0=0, select bank0
  2252  042F  1303               	bcf	3,6	;RP1=0, select bank0
  2253  0430  00A3               	movwf	read_ADC@analogChannel
  2254                           
  2255                           ;adc.c: 72: ADCON0bits.CHS = analogChannel;
  2256  0431  00A2               	movwf	??_read_ADC
  2257  0432  0DA2               	rlf	??_read_ADC,f
  2258  0433  0DA2               	rlf	??_read_ADC,f
  2259  0434  081F               	movf	31,w	;volatile
  2260  0435  0622               	xorwf	??_read_ADC,w
  2261  0436  39C3               	andlw	-61
  2262  0437  0622               	xorwf	??_read_ADC,w
  2263  0438  009F               	movwf	31	;volatile
  2264                           
  2265                           ;adc.c: 73: ADCON0bits.GO_DONE = 1;
  2266  0439  149F               	bsf	31,1	;volatile
  2267  043A                     l1088:	
  2268                           ;adc.c: 74: while(ADCON0bits.GO_DONE) continue;
  2269                           
  2270  043A  189F               	btfsc	31,1	;volatile
  2271  043B  2C3A               	goto	l1088
  2272                           
  2273                           ;adc.c: 75: adcResult = ADRESH;
  2274  043C  081E               	movf	30,w	;volatile
  2275  043D  00A4               	movwf	read_ADC@adcResult
  2276  043E  01A5               	clrf	read_ADC@adcResult+1
  2277                           
  2278                           ;adc.c: 76: adcResult <<= 8;
  2279  043F  00A5               	movwf	read_ADC@adcResult+1
  2280  0440  01A4               	clrf	read_ADC@adcResult
  2281                           
  2282                           ;adc.c: 77: adcResult |= ADRESL;
  2283  0441  1683               	bsf	3,5	;RP0=1, select bank1
  2284  0442  081E               	movf	30,w	;volatile
  2285  0443  1283               	bcf	3,5	;RP0=0, select bank0
  2286  0444  04A4               	iorwf	read_ADC@adcResult,f
  2287                           
  2288                           ;adc.c: 79: return adcResult;
  2289  0445  0825               	movf	read_ADC@adcResult+1,w
  2290  0446  00A1               	movwf	?_read_ADC+1
  2291  0447  0824               	movf	read_ADC@adcResult,w
  2292  0448  00A0               	movwf	?_read_ADC
  2293  0449  0008               	return
  2294  044A                     __end_of_read_ADC:	
  2295  044A                     __ptext658:	
  2296 ;; =============== function ___ftmul ends ============
  2297                           
  2298                           
  2299 ;; *************** function ___ftdiv *****************
  2300 ;; Defined at:
  2301 ;;		line 50 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftdiv.c"
  2302 ;; Parameters:    Size  Location     Type
  2303 ;;  f2              3   21[BANK0 ] float 
  2304 ;;  f1              3   24[BANK0 ] float 
  2305 ;; Auto vars:     Size  Location     Type
  2306 ;;  f3              3   31[BANK0 ] float 
  2307 ;;  sign            1   35[BANK0 ] unsigned char 
  2308 ;;  exp             1   34[BANK0 ] unsigned char 
  2309 ;;  cntr            1   30[BANK0 ] unsigned char 
  2310 ;; Return value:  Size  Location     Type
  2311 ;;                  3   21[BANK0 ] float 
  2312 ;; Registers used:
  2313 ;;		wreg, status,2, status,0, pclath, cstack
  2314 ;; Tracked objects:
  2315 ;;		On entry : 60/0
  2316 ;;		On exit  : 60/0
  2317 ;;		Unchanged: FFF9F/0
  2318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2319 ;;      Params:         0       6       0       0       0
  2320 ;;      Locals:         0       6       0       0       0
  2321 ;;      Temps:          0       3       0       0       0
  2322 ;;      Totals:         0      15       0       0       0
  2323 ;;Total ram usage:       15 bytes
  2324 ;; Hardware stack levels used:    1
  2325 ;; Hardware stack levels required when called:    3
  2326 ;; This function calls:
  2327 ;;		___ftpack
  2328 ;; This function is called by:
  2329 ;;		_getTemperature
  2330 ;; This function uses a non-reentrant model
  2331 ;;
  2332  044A                     ___ftdiv:	
  2333                           
  2334                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  2335  044A  0838               	movf	___ftdiv@f1,w
  2336  044B  00BB               	movwf	??___ftdiv
  2337  044C  0839               	movf	___ftdiv@f1+1,w
  2338  044D  00BC               	movwf	??___ftdiv+1
  2339  044E  083A               	movf	___ftdiv@f1+2,w
  2340  044F  00BD               	movwf	??___ftdiv+2
  2341  0450  1003               	clrc
  2342  0451  0D3C               	rlf	??___ftdiv+1,w
  2343  0452  0D3D               	rlf	??___ftdiv+2,w
  2344  0453  00C2               	movwf	___ftdiv@exp
  2345  0454  08C2               	movf	___ftdiv@exp,f
  2346  0455  1D03               	skipz
  2347  0456  2C5B               	goto	l8437
  2348  0457  01B5               	clrf	?___ftdiv
  2349  0458  01B6               	clrf	?___ftdiv+1
  2350  0459  01B7               	clrf	?___ftdiv+2
  2351  045A  0008               	return
  2352  045B                     l8437:	
  2353  045B  0835               	movf	___ftdiv@f2,w
  2354  045C  00BB               	movwf	??___ftdiv
  2355  045D  0836               	movf	___ftdiv@f2+1,w
  2356  045E  00BC               	movwf	??___ftdiv+1
  2357  045F  0837               	movf	___ftdiv@f2+2,w
  2358  0460  00BD               	movwf	??___ftdiv+2
  2359  0461  1003               	clrc
  2360  0462  0D3C               	rlf	??___ftdiv+1,w
  2361  0463  0D3D               	rlf	??___ftdiv+2,w
  2362  0464  00C3               	movwf	___ftdiv@sign
  2363  0465  08C3               	movf	___ftdiv@sign,f
  2364  0466  1D03               	skipz
  2365  0467  2C6C               	goto	l6997
  2366  0468  01B5               	clrf	?___ftdiv
  2367  0469  01B6               	clrf	?___ftdiv+1
  2368  046A  01B7               	clrf	?___ftdiv+2
  2369  046B  0008               	return
  2370  046C                     l6997:	
  2371  046C  3089               	movlw	137
  2372  046D  01BF               	clrf	___ftdiv@f3
  2373  046E  01C0               	clrf	___ftdiv@f3+1
  2374  046F  01C1               	clrf	___ftdiv@f3+2
  2375  0470  0743               	addwf	___ftdiv@sign,w
  2376  0471  00BB               	movwf	??___ftdiv
  2377  0472  02C2               	subwf	___ftdiv@exp,f
  2378  0473  083A               	movf	___ftdiv@f1+2,w
  2379  0474  00C3               	movwf	___ftdiv@sign
  2380  0475  0837               	movf	___ftdiv@f2+2,w
  2381  0476  06C3               	xorwf	___ftdiv@sign,f
  2382  0477  3080               	movlw	128
  2383  0478  05C3               	andwf	___ftdiv@sign,f
  2384  0479  3018               	movlw	24
  2385  047A  17B9               	bsf	___ftdiv@f1+1,7
  2386  047B  01BA               	clrf	___ftdiv@f1+2
  2387  047C  17B6               	bsf	___ftdiv@f2+1,7
  2388  047D  01B7               	clrf	___ftdiv@f2+2
  2389  047E  00BE               	movwf	___ftdiv@cntr
  2390  047F                     l8461:	
  2391  047F  1003               	clrc
  2392  0480  0DBF               	rlf	___ftdiv@f3,f
  2393  0481  0DC0               	rlf	___ftdiv@f3+1,f
  2394  0482  0DC1               	rlf	___ftdiv@f3+2,f
  2395  0483  0837               	movf	___ftdiv@f2+2,w
  2396  0484  023A               	subwf	___ftdiv@f1+2,w
  2397  0485  1D03               	skipz
  2398  0486  2C8D               	goto	u1365
  2399  0487  0836               	movf	___ftdiv@f2+1,w
  2400  0488  0239               	subwf	___ftdiv@f1+1,w
  2401  0489  1D03               	skipz
  2402  048A  2C8D               	goto	u1365
  2403  048B  0835               	movf	___ftdiv@f2,w
  2404  048C  0238               	subwf	___ftdiv@f1,w
  2405  048D                     u1365:	
  2406  048D  1C03               	skipc
  2407  048E  2C9B               	goto	L2
  2408  048F  0835               	movf	___ftdiv@f2,w
  2409  0490  02B8               	subwf	___ftdiv@f1,f
  2410  0491  0836               	movf	___ftdiv@f2+1,w
  2411  0492  1C03               	skipc
  2412  0493  0F36               	incfsz	___ftdiv@f2+1,w
  2413  0494  02B9               	subwf	___ftdiv@f1+1,f
  2414  0495  0837               	movf	___ftdiv@f2+2,w
  2415  0496  1C03               	skipc
  2416  0497  0A37               	incf	___ftdiv@f2+2,w
  2417  0498  02BA               	subwf	___ftdiv@f1+2,f
  2418  0499  143F               	bsf	___ftdiv@f3,0
  2419  049A  1003               	clrc
  2420  049B                     L2:	
  2421  049B  0DB8               	rlf	___ftdiv@f1,f
  2422  049C  0DB9               	rlf	___ftdiv@f1+1,f
  2423  049D  0DBA               	rlf	___ftdiv@f1+2,f
  2424  049E  0BBE               	decfsz	___ftdiv@cntr,f
  2425  049F  2C7F               	goto	l8461
  2426  04A0  083F               	movf	___ftdiv@f3,w
  2427  04A1  00A0               	movwf	?___ftpack
  2428  04A2  0840               	movf	___ftdiv@f3+1,w
  2429  04A3  00A1               	movwf	?___ftpack+1
  2430  04A4  0841               	movf	___ftdiv@f3+2,w
  2431  04A5  00A2               	movwf	?___ftpack+2
  2432  04A6  0842               	movf	___ftdiv@exp,w
  2433  04A7  00A3               	movwf	?___ftpack+3
  2434  04A8  0843               	movf	___ftdiv@sign,w
  2435  04A9  00A4               	movwf	?___ftpack+4
  2436  04AA  2521               	fcall	___ftpack
  2437  04AB  0820               	movf	?___ftpack,w
  2438  04AC  00B5               	movwf	?___ftdiv
  2439  04AD  0821               	movf	?___ftpack+1,w
  2440  04AE  00B6               	movwf	?___ftdiv+1
  2441  04AF  0822               	movf	?___ftpack+2,w
  2442  04B0  00B7               	movwf	?___ftdiv+2
  2443  04B1  0008               	return
  2444  04B2                     __end_of___ftdiv:	
  2445  04B2                     __ptext657:	
  2446 ;; =============== function ___lwtoft ends ============
  2447                           
  2448                           
  2449 ;; *************** function ___ftmul *****************
  2450 ;; Defined at:
  2451 ;;		line 52 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftmul.c"
  2452 ;; Parameters:    Size  Location     Type
  2453 ;;  f1              3   11[BANK0 ] float 
  2454 ;;  f2              3   14[BANK0 ] float 
  2455 ;; Auto vars:     Size  Location     Type
  2456 ;;  f3_as_produc    3   21[BANK0 ] unsigned um
  2457 ;;  sign            1   25[BANK0 ] unsigned char 
  2458 ;;  cntr            1   24[BANK0 ] unsigned char 
  2459 ;;  exp             1   20[BANK0 ] unsigned char 
  2460 ;; Return value:  Size  Location     Type
  2461 ;;                  3   11[BANK0 ] float 
  2462 ;; Registers used:
  2463 ;;		wreg, status,2, status,0, pclath, cstack
  2464 ;; Tracked objects:
  2465 ;;		On entry : 60/0
  2466 ;;		On exit  : 60/0
  2467 ;;		Unchanged: FFF9F/0
  2468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2469 ;;      Params:         0       6       0       0       0
  2470 ;;      Locals:         0       6       0       0       0
  2471 ;;      Temps:          0       3       0       0       0
  2472 ;;      Totals:         0      15       0       0       0
  2473 ;;Total ram usage:       15 bytes
  2474 ;; Hardware stack levels used:    1
  2475 ;; Hardware stack levels required when called:    3
  2476 ;; This function calls:
  2477 ;;		___ftpack
  2478 ;; This function is called by:
  2479 ;;		_getTemperature
  2480 ;; This function uses a non-reentrant model
  2481 ;;
  2482  04B2                     ___ftmul:	
  2483                           
  2484                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  2485  04B2  082B               	movf	___ftmul@f1,w
  2486  04B3  00B1               	movwf	??___ftmul
  2487  04B4  082C               	movf	___ftmul@f1+1,w
  2488  04B5  00B2               	movwf	??___ftmul+1
  2489  04B6  082D               	movf	___ftmul@f1+2,w
  2490  04B7  00B3               	movwf	??___ftmul+2
  2491  04B8  1003               	clrc
  2492  04B9  0D32               	rlf	??___ftmul+1,w
  2493  04BA  0D33               	rlf	??___ftmul+2,w
  2494  04BB  00B4               	movwf	___ftmul@exp
  2495  04BC  08B4               	movf	___ftmul@exp,f
  2496  04BD  1D03               	skipz
  2497  04BE  2CC3               	goto	l8481
  2498  04BF  01AB               	clrf	?___ftmul
  2499  04C0  01AC               	clrf	?___ftmul+1
  2500  04C1  01AD               	clrf	?___ftmul+2
  2501  04C2  0008               	return
  2502  04C3                     l8481:	
  2503  04C3  082E               	movf	___ftmul@f2,w
  2504  04C4  00B1               	movwf	??___ftmul
  2505  04C5  082F               	movf	___ftmul@f2+1,w
  2506  04C6  00B2               	movwf	??___ftmul+1
  2507  04C7  0830               	movf	___ftmul@f2+2,w
  2508  04C8  00B3               	movwf	??___ftmul+2
  2509  04C9  1003               	clrc
  2510  04CA  0D32               	rlf	??___ftmul+1,w
  2511  04CB  0D33               	rlf	??___ftmul+2,w
  2512  04CC  00B9               	movwf	___ftmul@sign
  2513  04CD  08B9               	movf	___ftmul@sign,f
  2514  04CE  1D03               	skipz
  2515  04CF  2CD4               	goto	l8487
  2516  04D0  01AB               	clrf	?___ftmul
  2517  04D1  01AC               	clrf	?___ftmul+1
  2518  04D2  01AD               	clrf	?___ftmul+2
  2519  04D3  0008               	return
  2520  04D4                     l8487:	
  2521  04D4  0839               	movf	___ftmul@sign,w
  2522  04D5  3E7B               	addlw	123
  2523  04D6  07B4               	addwf	___ftmul@exp,f
  2524  04D7  082D               	movf	___ftmul@f1+2,w
  2525  04D8  00B9               	movwf	___ftmul@sign
  2526  04D9  0830               	movf	___ftmul@f2+2,w
  2527  04DA  06B9               	xorwf	___ftmul@sign,f
  2528  04DB  3080               	movlw	128
  2529  04DC  05B9               	andwf	___ftmul@sign,f
  2530  04DD  3007               	movlw	7
  2531  04DE  17AC               	bsf	___ftmul@f1+1,7
  2532  04DF  17AF               	bsf	___ftmul@f2+1,7
  2533  04E0  01B0               	clrf	___ftmul@f2+2
  2534  04E1  01B5               	clrf	___ftmul@f3_as_product
  2535  04E2  01B6               	clrf	___ftmul@f3_as_product+1
  2536  04E3  01B7               	clrf	___ftmul@f3_as_product+2
  2537  04E4  00B8               	movwf	___ftmul@cntr
  2538  04E5                     l8505:	
  2539  04E5  1C2B               	btfss	___ftmul@f1,0
  2540  04E6  2CEF               	goto	l8509
  2541  04E7  082E               	movf	___ftmul@f2,w
  2542  04E8  25CA  120A  118A   	fcall	PL2	;call to abstracted procedure
  2543  04EB  1803               	skipnc
  2544  04EC  0A30               	incf	___ftmul@f2+2,w
  2545  04ED  1D03               	btfss	3,2
  2546  04EE  07B7               	addwf	___ftmul@f3_as_product+2,f
  2547  04EF                     l8509:	
  2548  04EF  1003               	clrc
  2549  04F0  0CAD               	rrf	___ftmul@f1+2,f
  2550  04F1  0CAC               	rrf	___ftmul@f1+1,f
  2551  04F2  0CAB               	rrf	___ftmul@f1,f
  2552  04F3  1003               	clrc
  2553  04F4  0DAE               	rlf	___ftmul@f2,f
  2554  04F5  0DAF               	rlf	___ftmul@f2+1,f
  2555  04F6  0DB0               	rlf	___ftmul@f2+2,f
  2556  04F7  0BB8               	decfsz	___ftmul@cntr,f
  2557  04F8  2CE5               	goto	l8505
  2558  04F9  3009               	movlw	9
  2559  04FA  00B8               	movwf	___ftmul@cntr
  2560  04FB                     l8517:	
  2561  04FB  1C2B               	btfss	___ftmul@f1,0
  2562  04FC  2D05               	goto	l8521
  2563  04FD  082E               	movf	___ftmul@f2,w
  2564  04FE  25CA  120A  118A   	fcall	PL2	;call to abstracted procedure
  2565  0501  1803               	skipnc
  2566  0502  0A30               	incf	___ftmul@f2+2,w
  2567  0503  1D03               	btfss	3,2
  2568  0504  07B7               	addwf	___ftmul@f3_as_product+2,f
  2569  0505                     l8521:	
  2570  0505  1003               	clrc
  2571  0506  0CAD               	rrf	___ftmul@f1+2,f
  2572  0507  0CAC               	rrf	___ftmul@f1+1,f
  2573  0508  0CAB               	rrf	___ftmul@f1,f
  2574  0509  1003               	clrc
  2575  050A  0CB7               	rrf	___ftmul@f3_as_product+2,f
  2576  050B  0CB6               	rrf	___ftmul@f3_as_product+1,f
  2577  050C  0CB5               	rrf	___ftmul@f3_as_product,f
  2578  050D  0BB8               	decfsz	___ftmul@cntr,f
  2579  050E  2CFB               	goto	l8517
  2580  050F  0835               	movf	___ftmul@f3_as_product,w
  2581  0510  00A0               	movwf	?___ftpack
  2582  0511  0836               	movf	___ftmul@f3_as_product+1,w
  2583  0512  00A1               	movwf	?___ftpack+1
  2584  0513  0837               	movf	___ftmul@f3_as_product+2,w
  2585  0514  00A2               	movwf	?___ftpack+2
  2586  0515  0834               	movf	___ftmul@exp,w
  2587  0516  00A3               	movwf	?___ftpack+3
  2588  0517  0839               	movf	___ftmul@sign,w
  2589  0518  00A4               	movwf	?___ftpack+4
  2590  0519  2521               	fcall	___ftpack
  2591  051A  0820               	movf	?___ftpack,w
  2592  051B  00AB               	movwf	?___ftmul
  2593  051C  0821               	movf	?___ftpack+1,w
  2594  051D  00AC               	movwf	?___ftmul+1
  2595  051E  0822               	movf	?___ftpack+2,w
  2596  051F  00AD               	movwf	?___ftmul+2
  2597  0520  0008               	return
  2598  0521                     __end_of___ftmul:	
  2599  0521                     __ptext662:	
  2600 ;; =============== function ___fttol ends ============
  2601                           
  2602                           
  2603 ;; *************** function ___ftpack *****************
  2604 ;; Defined at:
  2605 ;;		line 63 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\float.c"
  2606 ;; Parameters:    Size  Location     Type
  2607 ;;  arg             3    0[BANK0 ] unsigned um
  2608 ;;  exp             1    3[BANK0 ] unsigned char 
  2609 ;;  sign            1    4[BANK0 ] unsigned char 
  2610 ;; Auto vars:     Size  Location     Type
  2611 ;;		None
  2612 ;; Return value:  Size  Location     Type
  2613 ;;                  3    0[BANK0 ] float 
  2614 ;; Registers used:
  2615 ;;		wreg, status,2, status,0
  2616 ;; Tracked objects:
  2617 ;;		On entry : 60/0
  2618 ;;		On exit  : 60/0
  2619 ;;		Unchanged: FFF9F/0
  2620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2621 ;;      Params:         0       5       0       0       0
  2622 ;;      Locals:         0       0       0       0       0
  2623 ;;      Temps:          0       3       0       0       0
  2624 ;;      Totals:         0       8       0       0       0
  2625 ;;Total ram usage:        8 bytes
  2626 ;; Hardware stack levels used:    1
  2627 ;; Hardware stack levels required when called:    2
  2628 ;; This function calls:
  2629 ;;		Nothing
  2630 ;; This function is called by:
  2631 ;;		___ftdiv
  2632 ;;		___ftmul
  2633 ;;		___lwtoft
  2634 ;; This function uses a non-reentrant model
  2635 ;;
  2636  0521                     ___ftpack:	
  2637                           
  2638                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  2639  0521  0823               	movf	___ftpack@exp,w
  2640  0522  1903               	btfsc	3,2
  2641  0523  2D29               	goto	l8331
  2642  0524  0822               	movf	___ftpack@arg+2,w
  2643  0525  0421               	iorwf	___ftpack@arg+1,w
  2644  0526  0420               	iorwf	___ftpack@arg,w
  2645  0527  1D03               	skipz
  2646  0528  2D32               	goto	l8337
  2647  0529                     l8331:	
  2648  0529  01A0               	clrf	?___ftpack
  2649  052A  01A1               	clrf	?___ftpack+1
  2650  052B  01A2               	clrf	?___ftpack+2
  2651  052C  0008               	return
  2652  052D                     l8335:	
  2653  052D  0AA3               	incf	___ftpack@exp,f
  2654  052E  1003               	clrc
  2655  052F  0CA2               	rrf	___ftpack@arg+2,f
  2656  0530  0CA1               	rrf	___ftpack@arg+1,f
  2657  0531  0CA0               	rrf	___ftpack@arg,f
  2658  0532                     l8337:	
  2659  0532  30FE               	movlw	254
  2660  0533  0522               	andwf	___ftpack@arg+2,w
  2661  0534  1903               	btfsc	3,2
  2662  0535  2D41               	goto	l8341
  2663  0536  2D2D               	goto	l8335
  2664  0537                     l8339:	
  2665  0537  0AA3               	incf	___ftpack@exp,f
  2666  0538  0AA0               	incf	___ftpack@arg,f
  2667  0539  1903               	skipnz
  2668  053A  0AA1               	incf	___ftpack@arg+1,f
  2669  053B  1903               	skipnz
  2670  053C  0AA2               	incf	___ftpack@arg+2,f
  2671  053D  1003               	clrc
  2672  053E  0CA2               	rrf	___ftpack@arg+2,f
  2673  053F  0CA1               	rrf	___ftpack@arg+1,f
  2674  0540  0CA0               	rrf	___ftpack@arg,f
  2675  0541                     l8341:	
  2676  0541  30FF               	movlw	255
  2677  0542  0522               	andwf	___ftpack@arg+2,w
  2678  0543  1903               	btfsc	3,2
  2679  0544  2D4B               	goto	l8345
  2680  0545  2D37               	goto	l8339
  2681  0546                     l8343:	
  2682  0546  03A3               	decf	___ftpack@exp,f
  2683  0547  1003               	clrc
  2684  0548  0DA0               	rlf	___ftpack@arg,f
  2685  0549  0DA1               	rlf	___ftpack@arg+1,f
  2686  054A  0DA2               	rlf	___ftpack@arg+2,f
  2687  054B                     l8345:	
  2688  054B  1FA1               	btfss	___ftpack@arg+1,7
  2689  054C  2D46               	goto	l8343
  2690  054D  1C23               	btfss	___ftpack@exp,0
  2691  054E  13A1               	bcf	___ftpack@arg+1,7
  2692  054F  1003               	clrc
  2693  0550  0CA3               	rrf	___ftpack@exp,f
  2694  0551  0823               	movf	___ftpack@exp,w
  2695  0552  00A7               	movwf	??___ftpack+2
  2696  0553  01A6               	clrf	??___ftpack+1
  2697  0554  01A5               	clrf	??___ftpack
  2698  0555  0825               	movf	??___ftpack,w
  2699  0556  04A0               	iorwf	___ftpack@arg,f
  2700  0557  0826               	movf	??___ftpack+1,w
  2701  0558  04A1               	iorwf	___ftpack@arg+1,f
  2702  0559  0827               	movf	??___ftpack+2,w
  2703  055A  04A2               	iorwf	___ftpack@arg+2,f
  2704  055B  0824               	movf	___ftpack@sign,w
  2705  055C  1D03               	skipz
  2706  055D  17A2               	bsf	___ftpack@arg+2,7
  2707  055E  0008               	return
  2708  055F                     __end_of___ftpack:	
  2709  055F                     __ptext656:	
  2710 ;; =============== function _getTemperature ends ============
  2711                           
  2712                           
  2713 ;; *************** function ___lwtoft *****************
  2714 ;; Defined at:
  2715 ;;		line 29 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwtoft.c"
  2716 ;; Parameters:    Size  Location     Type
  2717 ;;  c               2    8[BANK0 ] unsigned int 
  2718 ;; Auto vars:     Size  Location     Type
  2719 ;;		None
  2720 ;; Return value:  Size  Location     Type
  2721 ;;                  3    8[BANK0 ] float 
  2722 ;; Registers used:
  2723 ;;		wreg, status,2, status,0, pclath, cstack
  2724 ;; Tracked objects:
  2725 ;;		On entry : 60/0
  2726 ;;		On exit  : 60/0
  2727 ;;		Unchanged: FFF9F/0
  2728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2729 ;;      Params:         0       3       0       0       0
  2730 ;;      Locals:         0       0       0       0       0
  2731 ;;      Temps:          0       0       0       0       0
  2732 ;;      Totals:         0       3       0       0       0
  2733 ;;Total ram usage:        3 bytes
  2734 ;; Hardware stack levels used:    1
  2735 ;; Hardware stack levels required when called:    3
  2736 ;; This function calls:
  2737 ;;		___ftpack
  2738 ;; This function is called by:
  2739 ;;		_getTemperature
  2740 ;; This function uses a non-reentrant model
  2741 ;;
  2742  055F                     ___lwtoft:	
  2743                           
  2744                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  2745  055F  0828               	movf	___lwtoft@c,w
  2746  0560  00A0               	movwf	?___ftpack
  2747  0561  0829               	movf	___lwtoft@c+1,w
  2748  0562  00A1               	movwf	?___ftpack+1
  2749  0563  308E               	movlw	142
  2750  0564  01A2               	clrf	?___ftpack+2
  2751  0565  00A3               	movwf	?___ftpack+3
  2752  0566  01A4               	clrf	?___ftpack+4
  2753  0567  2521               	fcall	___ftpack
  2754  0568  0820               	movf	?___ftpack,w
  2755  0569  00A8               	movwf	?___lwtoft
  2756  056A  0821               	movf	?___ftpack+1,w
  2757  056B  00A9               	movwf	?___lwtoft+1
  2758  056C  0822               	movf	?___ftpack+2,w
  2759  056D  00AA               	movwf	?___lwtoft+2
  2760  056E  0008               	return
  2761  056F                     __end_of___lwtoft:	
  2762  056F                     __ptext661:	
  2763 ;; =============== function _vInitializeVHN5019 ends ============
  2764                           
  2765                           
  2766 ;; *************** function ___fttol *****************
  2767 ;; Defined at:
  2768 ;;		line 45 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\fttol.c"
  2769 ;; Parameters:    Size  Location     Type
  2770 ;;  f1              3    8[BANK0 ] float 
  2771 ;; Auto vars:     Size  Location     Type
  2772 ;;  lval            4   16[BANK0 ] unsigned long 
  2773 ;;  exp1            1   20[BANK0 ] unsigned char 
  2774 ;;  sign1           1   15[BANK0 ] unsigned char 
  2775 ;; Return value:  Size  Location     Type
  2776 ;;                  4    8[BANK0 ] long 
  2777 ;; Registers used:
  2778 ;;		wreg, status,2, status,0
  2779 ;; Tracked objects:
  2780 ;;		On entry : 60/0
  2781 ;;		On exit  : 60/0
  2782 ;;		Unchanged: FFF9F/0
  2783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2784 ;;      Params:         0       4       0       0       0
  2785 ;;      Locals:         0       6       0       0       0
  2786 ;;      Temps:          0       3       0       0       0
  2787 ;;      Totals:         0      13       0       0       0
  2788 ;;Total ram usage:       13 bytes
  2789 ;; Hardware stack levels used:    1
  2790 ;; Hardware stack levels required when called:    2
  2791 ;; This function calls:
  2792 ;;		Nothing
  2793 ;; This function is called by:
  2794 ;;		_getTemperature
  2795 ;; This function uses a non-reentrant model
  2796 ;;
  2797  056F                     ___fttol:	
  2798                           
  2799                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  2800  056F  25D4  120A  118A   	fcall	PL3	;call to abstracted procedure
  2801  0572  1003               	clrc
  2802  0573  0D2D               	rlf	??___fttol+1,w
  2803  0574  0D2E               	rlf	??___fttol+2,w
  2804  0575  00B4               	movwf	___fttol@exp1
  2805  0576  08B4               	movf	___fttol@exp1,f
  2806  0577  1D03               	skipz
  2807  0578  2D7E               	goto	l8359
  2808  0579                     l8357:	
  2809  0579  01A8               	clrf	?___fttol
  2810  057A  01A9               	clrf	?___fttol+1
  2811  057B  01AA               	clrf	?___fttol+2
  2812  057C  01AB               	clrf	?___fttol+3
  2813  057D  0008               	return
  2814  057E                     l8359:	
  2815  057E  25D4  120A  118A   	fcall	PL3	;call to abstracted procedure
  2816  0581  3017               	movlw	23
  2817  0582                     u1245:	
  2818  0582  1003               	clrc
  2819  0583  0CAE               	rrf	??___fttol+2,f
  2820  0584  0CAD               	rrf	??___fttol+1,f
  2821  0585  0CAC               	rrf	??___fttol,f
  2822  0586  3EFF               	addlw	-1
  2823  0587  1D03               	skipz
  2824  0588  2D82               	goto	u1245
  2825  0589  082C               	movf	??___fttol,w
  2826  058A  00AF               	movwf	___fttol@sign1
  2827  058B  17A9               	bsf	___fttol@f1+1,7
  2828  058C  01AA               	clrf	___fttol@f1+2
  2829  058D  0828               	movf	___fttol@f1,w
  2830  058E  00B0               	movwf	___fttol@lval
  2831  058F  0829               	movf	___fttol@f1+1,w
  2832  0590  00B1               	movwf	___fttol@lval+1
  2833  0591  082A               	movf	___fttol@f1+2,w
  2834  0592  00B2               	movwf	___fttol@lval+2
  2835  0593  308E               	movlw	142
  2836  0594  01B3               	clrf	___fttol@lval+3
  2837  0595  02B4               	subwf	___fttol@exp1,f
  2838  0596  1FB4               	btfss	___fttol@exp1,7
  2839  0597  2DA5               	goto	l8379
  2840  0598  0834               	movf	___fttol@exp1,w
  2841  0599  3A80               	xorlw	128
  2842  059A  3E8F               	addlw	143
  2843  059B  1C03               	btfss	3,0
  2844  059C  2D79               	goto	l8357
  2845  059D                     l8375:	
  2846  059D  1003               	clrc
  2847  059E  0CB3               	rrf	___fttol@lval+3,f
  2848  059F  0CB2               	rrf	___fttol@lval+2,f
  2849  05A0  0CB1               	rrf	___fttol@lval+1,f
  2850  05A1  0CB0               	rrf	___fttol@lval,f
  2851  05A2  0FB4               	incfsz	___fttol@exp1,f
  2852  05A3  2D9D               	goto	l8375
  2853  05A4  2DB3               	goto	l8385
  2854  05A5                     l8379:	
  2855  05A5  3018               	movlw	24
  2856  05A6  0234               	subwf	___fttol@exp1,w
  2857  05A7  1803               	btfsc	3,0
  2858  05A8  2D79               	goto	l8357
  2859  05A9                     l7024:	
  2860  05A9  08B4               	movf	___fttol@exp1,f
  2861  05AA  1903               	btfsc	3,2
  2862  05AB  2DB3               	goto	l8385
  2863  05AC  1003               	clrc
  2864  05AD  0DB0               	rlf	___fttol@lval,f
  2865  05AE  0DB1               	rlf	___fttol@lval+1,f
  2866  05AF  0DB2               	rlf	___fttol@lval+2,f
  2867  05B0  0DB3               	rlf	___fttol@lval+3,f
  2868  05B1  03B4               	decf	___fttol@exp1,f
  2869  05B2  2DA9               	goto	l7024
  2870  05B3                     l8385:	
  2871  05B3  082F               	movf	___fttol@sign1,w
  2872  05B4  1903               	btfsc	3,2
  2873  05B5  2DC1               	goto	l8389
  2874  05B6  09B0               	comf	___fttol@lval,f
  2875  05B7  09B1               	comf	___fttol@lval+1,f
  2876  05B8  09B2               	comf	___fttol@lval+2,f
  2877  05B9  09B3               	comf	___fttol@lval+3,f
  2878  05BA  0AB0               	incf	___fttol@lval,f
  2879  05BB  1903               	skipnz
  2880  05BC  0AB1               	incf	___fttol@lval+1,f
  2881  05BD  1903               	skipnz
  2882  05BE  0AB2               	incf	___fttol@lval+2,f
  2883  05BF  1903               	skipnz
  2884  05C0  0AB3               	incf	___fttol@lval+3,f
  2885  05C1                     l8389:	
  2886  05C1  0833               	movf	___fttol@lval+3,w
  2887  05C2  00AB               	movwf	?___fttol+3
  2888  05C3  0832               	movf	___fttol@lval+2,w
  2889  05C4  00AA               	movwf	?___fttol+2
  2890  05C5  0831               	movf	___fttol@lval+1,w
  2891  05C6  00A9               	movwf	?___fttol+1
  2892  05C7  0830               	movf	___fttol@lval,w
  2893  05C8  00A8               	movwf	?___fttol
  2894  05C9  0008               	return
  2895  05CA                     __end_of___fttol:	
  2896  05CA                     PL2:	
  2897  05CA  07B5               	addwf	___ftmul@f3_as_product,f
  2898  05CB  082F               	movf	___ftmul@f2+1,w
  2899  05CC  1103               	clrz
  2900  05CD  1803               	skipnc
  2901  05CE  0A2F               	incf	___ftmul@f2+1,w
  2902  05CF  1D03               	btfss	3,2
  2903  05D0  07B6               	addwf	___ftmul@f3_as_product+1,f
  2904  05D1  0830               	movf	___ftmul@f2+2,w
  2905  05D2  1103               	clrz
  2906  05D3  0008               	return
  2907  05D4                     PL3:	
  2908  05D4  0828               	movf	___fttol@f1,w
  2909  05D5  00AC               	movwf	??___fttol
  2910  05D6  0829               	movf	___fttol@f1+1,w
  2911  05D7  00AD               	movwf	??___fttol+1
  2912  05D8  082A               	movf	___fttol@f1+2,w
  2913  05D9  00AE               	movwf	??___fttol+2
  2914  05DA  0008               	return
  2915                           
  2916                           	psect	text660
  2917  025A                     __ptext660:	
  2918 ;; =============== function _utoa ends ============
  2919                           
  2920                           
  2921 ;; *************** function _vInitializeVHN5019 *****************
  2922 ;; Defined at:
  2923 ;;		line 41 in file "../src/vhn5019.c"
  2924 ;; Parameters:    Size  Location     Type
  2925 ;;		None
  2926 ;; Auto vars:     Size  Location     Type
  2927 ;;		None
  2928 ;; Return value:  Size  Location     Type
  2929 ;;		None               void
  2930 ;; Registers used:
  2931 ;;		wreg, status,2
  2932 ;; Tracked objects:
  2933 ;;		On entry : 17F/20
  2934 ;;		On exit  : 60/0
  2935 ;;		Unchanged: 0/0
  2936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2937 ;;      Params:         0       0       0       0       0
  2938 ;;      Locals:         0       0       0       0       0
  2939 ;;      Temps:          0       2       0       0       0
  2940 ;;      Totals:         0       2       0       0       0
  2941 ;;Total ram usage:        2 bytes
  2942 ;; Hardware stack levels used:    1
  2943 ;; Hardware stack levels required when called:    2
  2944 ;; This function calls:
  2945 ;;		Nothing
  2946 ;; This function is called by:
  2947 ;;		_main
  2948 ;; This function uses a non-reentrant model
  2949 ;;
  2950  025A                     _vInitializeVHN5019:	
  2951                           
  2952                           ;vhn5019.c: 42: (TRISCbits.TRISC2) = 0;
  2953                           
  2954                           ; Regs used in _vInitializeVHN5019: [wreg+status,2]
  2955  025A  1107               	bcf	7,2	;volatile
  2956                           
  2957                           ;vhn5019.c: 43: (PORTCbits.RC2) = 0;
  2958  025B  1283               	bcf	3,5	;RP0=0, select bank0
  2959  025C  1107               	bcf	7,2	;volatile
  2960                           
  2961                           ;vhn5019.c: 44: (TRISCbits.TRISC1) = 0;
  2962  025D  1683               	bsf	3,5	;RP0=1, select bank1
  2963  025E  1087               	bcf	7,1	;volatile
  2964                           
  2965                           ;vhn5019.c: 45: (PORTCbits.RC1) = 0;
  2966  025F  1283               	bcf	3,5	;RP0=0, select bank0
  2967  0260  1087               	bcf	7,1	;volatile
  2968                           
  2969                           ;vhn5019.c: 47: (TRISBbits.TRISB1) = 0;
  2970  0261  1683               	bsf	3,5	;RP0=1, select bank1
  2971  0262  1086               	bcf	6,1	;volatile
  2972                           
  2973                           ;vhn5019.c: 48: (PORTBbits.RB1) = 1;
  2974  0263  1283               	bcf	3,5	;RP0=0, select bank0
  2975  0264  1486               	bsf	6,1	;volatile
  2976                           
  2977                           ;vhn5019.c: 49: (TRISDbits.TRISD5) = 0;
  2978  0265  1683               	bsf	3,5	;RP0=1, select bank1
  2979  0266  1288               	bcf	8,5	;volatile
  2980                           
  2981                           ;vhn5019.c: 50: (PORTDbits.RD5) = 1;
  2982  0267  1283               	bcf	3,5	;RP0=0, select bank0
  2983  0268  1688               	bsf	8,5	;volatile
  2984                           
  2985                           ;vhn5019.c: 52: (TRISBbits.TRISB3) = 0;
  2986  0269  1683               	bsf	3,5	;RP0=1, select bank1
  2987  026A  1186               	bcf	6,3	;volatile
  2988                           
  2989                           ;vhn5019.c: 53: (PORTBbits.RB3) = 1;
  2990  026B  1283               	bcf	3,5	;RP0=0, select bank0
  2991  026C  1586               	bsf	6,3	;volatile
  2992                           
  2993                           ;vhn5019.c: 54: (TRISDbits.TRISD7) = 0;
  2994  026D  1683               	bsf	3,5	;RP0=1, select bank1
  2995  026E  1388               	bcf	8,7	;volatile
  2996                           
  2997                           ;vhn5019.c: 55: (PORTDbits.RD7) = 1;
  2998  026F  1283               	bcf	3,5	;RP0=0, select bank0
  2999  0270  1788               	bsf	8,7	;volatile
  3000                           
  3001                           ;vhn5019.c: 57: (TRISBbits.TRISB0) = 0 ;
  3002  0271  1683               	bsf	3,5	;RP0=1, select bank1
  3003  0272  1006               	bcf	6,0	;volatile
  3004                           
  3005                           ;vhn5019.c: 58: (PORTBbits.RB0) = 0;
  3006  0273  1283               	bcf	3,5	;RP0=0, select bank0
  3007  0274  1006               	bcf	6,0	;volatile
  3008                           
  3009                           ;vhn5019.c: 59: (TRISDbits.TRISD4) = 0 ;
  3010  0275  1683               	bsf	3,5	;RP0=1, select bank1
  3011  0276  1208               	bcf	8,4	;volatile
  3012                           
  3013                           ;vhn5019.c: 60: (PORTDbits.RD4) = 0;
  3014  0277  1283               	bcf	3,5	;RP0=0, select bank0
  3015  0278  1208               	bcf	8,4	;volatile
  3016                           
  3017                           ;vhn5019.c: 65: T2CON = 0b00000011;
  3018  0279  3003               	movlw	3
  3019  027A  0092               	movwf	18	;volatile
  3020                           
  3021                           ;vhn5019.c: 66: PIE1bits.TMR2IE = 0;
  3022  027B  1683               	bsf	3,5	;RP0=1, select bank1
  3023  027C  108C               	bcf	12,1	;volatile
  3024                           
  3025                           ;vhn5019.c: 67: CCP1CON = 0b00001100;
  3026  027D  300C               	movlw	12
  3027  027E  1283               	bcf	3,5	;RP0=0, select bank0
  3028  027F  0097               	movwf	23	;volatile
  3029                           
  3030                           ;vhn5019.c: 68: CCP2CON = 0b00001100;
  3031  0280  009D               	movwf	29	;volatile
  3032                           
  3033                           ;vhn5019.c: 69: CCPR1L = 0;
  3034  0281  0195               	clrf	21	;volatile
  3035                           
  3036                           ;vhn5019.c: 70: CCPR2L = 0;
  3037  0282  019B               	clrf	27	;volatile
  3038                           
  3039                           ;vhn5019.c: 71: PR2 = 255;
  3040  0283  30FF               	movlw	255
  3041  0284  1683               	bsf	3,5	;RP0=1, select bank1
  3042  0285  0092               	movwf	18	;volatile
  3043                           
  3044                           ;vhn5019.c: 72: _delay((unsigned long)((1)*(20000000/4000.0)));
  3045  0286  3007               	movlw	7
  3046  0287  1283               	bcf	3,5	;RP0=0, select bank0
  3047  0288  00A1               	movwf	??_vInitializeVHN5019+1
  3048  0289  307D               	movlw	125
  3049  028A  00A0               	movwf	??_vInitializeVHN5019
  3050  028B                     u2167:	
  3051  028B  0BA0               	decfsz	??_vInitializeVHN5019,f
  3052  028C  2A8B               	goto	u2167
  3053  028D  0BA1               	decfsz	??_vInitializeVHN5019+1,f
  3054  028E  2A8B               	goto	u2167
  3055                           
  3056                           ;vhn5019.c: 73: T2CONbits.TMR2ON = 1;
  3057  028F  1283               	bcf	3,5	;RP0=0, select bank0
  3058  0290  1303               	bcf	3,6	;RP1=0, select bank0
  3059  0291  1512               	bsf	18,2	;volatile
  3060  0292  0008               	return
  3061  0293                     __end_of_vInitializeVHN5019:	
  3062                           
  3063                           	psect	text665
  3064  01D2                     __ptext665:	
  3065 ;; =============== function ___lwdiv ends ============
  3066                           
  3067                           
  3068 ;; *************** function ___bmul *****************
  3069 ;; Defined at:
  3070 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\bmul.c"
  3071 ;; Parameters:    Size  Location     Type
  3072 ;;  multiplier      1    wreg     unsigned char 
  3073 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  3074 ;; Auto vars:     Size  Location     Type
  3075 ;;  multiplier      1    2[BANK0 ] unsigned char 
  3076 ;;  product         1    1[BANK0 ] unsigned char 
  3077 ;; Return value:  Size  Location     Type
  3078 ;;                  1    wreg      unsigned char 
  3079 ;; Registers used:
  3080 ;;		wreg, status,2, status,0
  3081 ;; Tracked objects:
  3082 ;;		On entry : 60/100
  3083 ;;		On exit  : 60/100
  3084 ;;		Unchanged: FFF9F/0
  3085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3086 ;;      Params:         0       1       0       0       0
  3087 ;;      Locals:         0       2       0       0       0
  3088 ;;      Temps:          0       0       0       0       0
  3089 ;;      Totals:         0       3       0       0       0
  3090 ;;Total ram usage:        3 bytes
  3091 ;; Hardware stack levels used:    1
  3092 ;; Hardware stack levels required when called:    2
  3093 ;; This function calls:
  3094 ;;		Nothing
  3095 ;; This function is called by:
  3096 ;;		_main
  3097 ;; This function uses a non-reentrant model
  3098 ;;
  3099  01D2                     ___bmul:	
  3100                           
  3101                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3102                           ;___bmul@multiplier stored from wreg
  3103  01D2  00A2               	movwf	___bmul@multiplier
  3104  01D3  01A1               	clrf	___bmul@product
  3105  01D4                     l8837:	
  3106  01D4  0820               	movf	___bmul@multiplicand,w
  3107  01D5  1822               	btfsc	___bmul@multiplier,0
  3108  01D6  07A1               	addwf	___bmul@product,f
  3109  01D7  1003               	clrc
  3110  01D8  0DA0               	rlf	___bmul@multiplicand,f
  3111  01D9  1003               	clrc
  3112  01DA  0CA2               	rrf	___bmul@multiplier,f
  3113  01DB  08A2               	movf	___bmul@multiplier,f
  3114  01DC  1D03               	skipz
  3115  01DD  29D4               	goto	l8837
  3116  01DE  0821               	movf	___bmul@product,w
  3117  01DF  0008               	return
  3118  01E0                     __end_of___bmul:	
  3119                           
  3120                           	psect	text666
  3121  01C5                     __ptext666:	
  3122 ;; =============== function ___bmul ends ============
  3123                           
  3124                           
  3125 ;; *************** function _cGetFromReceiveBuffer *****************
  3126 ;; Defined at:
  3127 ;;		line 577 in file "../src/main.c"
  3128 ;; Parameters:    Size  Location     Type
  3129 ;;		None
  3130 ;; Auto vars:     Size  Location     Type
  3131 ;;  value           1    0[BANK0 ] unsigned char 
  3132 ;; Return value:  Size  Location     Type
  3133 ;;                  1    wreg      unsigned char 
  3134 ;; Registers used:
  3135 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3136 ;; Tracked objects:
  3137 ;;		On entry : 60/0
  3138 ;;		On exit  : 160/100
  3139 ;;		Unchanged: FFE9F/0
  3140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3141 ;;      Params:         0       0       0       0       0
  3142 ;;      Locals:         0       1       0       0       0
  3143 ;;      Temps:          0       0       0       0       0
  3144 ;;      Totals:         0       1       0       0       0
  3145 ;;Total ram usage:        1 bytes
  3146 ;; Hardware stack levels used:    1
  3147 ;; Hardware stack levels required when called:    2
  3148 ;; This function calls:
  3149 ;;		Nothing
  3150 ;; This function is called by:
  3151 ;;		_main
  3152 ;; This function uses a non-reentrant model
  3153 ;;
  3154  01C5                     _cGetFromReceiveBuffer:	
  3155                           
  3156                           ;main.c: 578: unsigned char value;
  3157                           ;main.c: 580: value = uartReceiveBuffer[uartReceiveBufferR];
  3158                           
  3159                           ; Regs used in _cGetFromReceiveBuffer: [wreg-fsr0h+status,2+status,0]
  3160  01C5  0862               	movf	_uartReceiveBufferR,w
  3161  01C6  3E90               	addlw	_uartReceiveBuffer& (0+255)
  3162  01C7  0084               	movwf	4
  3163  01C8  1783               	bsf	3,7	;select IRP bank3
  3164  01C9  0800               	movf	0,w
  3165  01CA  00A0               	movwf	cGetFromReceiveBuffer@value
  3166                           
  3167                           ;main.c: 581: uartReceiveBufferR++;
  3168  01CB  0AE2               	incf	_uartReceiveBufferR,f	;volatile
  3169                           
  3170                           ;main.c: 582: if(uartReceiveBufferR == ( 60 ))
  3171  01CC  0862               	movf	_uartReceiveBufferR,w	;volatile
  3172  01CD  3A3C               	xorlw	60
  3173  01CE  1903               	btfsc	3,2
  3174                           
  3175                           ;main.c: 583: {
  3176                           ;main.c: 584: uartReceiveBufferR = 0;
  3177  01CF  01E2               	clrf	_uartReceiveBufferR	;volatile
  3178                           
  3179                           ;main.c: 585: }
  3180                           ;main.c: 586: return value;
  3181  01D0  0820               	movf	cGetFromReceiveBuffer@value,w
  3182  01D1  0008               	return
  3183  01D2                     __end_of_cGetFromReceiveBuffer:	
  3184                           
  3185                           	psect	text667
  3186  01B6                     __ptext667:	
  3187 ;; =============== function _cGetFromReceiveBuffer ends ============
  3188                           
  3189                           
  3190 ;; *************** function _putch *****************
  3191 ;; Defined at:
  3192 ;;		line 122 in file "../src/uart.c"
  3193 ;; Parameters:    Size  Location     Type
  3194 ;;  c               1    wreg     unsigned char 
  3195 ;; Auto vars:     Size  Location     Type
  3196 ;;  c               1    0[BANK0 ] unsigned char 
  3197 ;; Return value:  Size  Location     Type
  3198 ;;		None               void
  3199 ;; Registers used:
  3200 ;;		wreg
  3201 ;; Tracked objects:
  3202 ;;		On entry : 40/0
  3203 ;;		On exit  : 60/0
  3204 ;;		Unchanged: FFF9F/0
  3205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3206 ;;      Params:         0       0       0       0       0
  3207 ;;      Locals:         0       1       0       0       0
  3208 ;;      Temps:          0       0       0       0       0
  3209 ;;      Totals:         0       1       0       0       0
  3210 ;;Total ram usage:        1 bytes
  3211 ;; Hardware stack levels used:    1
  3212 ;; Hardware stack levels required when called:    2
  3213 ;; This function calls:
  3214 ;;		Nothing
  3215 ;; This function is called by:
  3216 ;;		_main
  3217 ;; This function uses a non-reentrant model
  3218 ;;
  3219  01B6                     _putch:	
  3220                           
  3221                           ; Regs used in _putch: [wreg]
  3222                           ;putch@c stored from wreg
  3223  01B6  1283               	bcf	3,5	;RP0=0, select bank0
  3224  01B7  00A0               	movwf	putch@c
  3225  01B8                     l3460:	
  3226                           ;uart.c: 123: while( !TXIF )
  3227                           
  3228  01B8  1E0C               	btfss	12,4
  3229  01B9  29B8               	goto	l3460
  3230                           
  3231                           ;uart.c: 125: TXREG = c;
  3232  01BA  0820               	movf	putch@c,w
  3233  01BB  0099               	movwf	25	;volatile
  3234  01BC  0008               	return
  3235  01BD                     __end_of_putch:	
  3236                           
  3237                           	psect	text668
  3238  01F0                     __ptext668:	
  3239 ;; =============== function _putch ends ============
  3240                           
  3241                           
  3242 ;; *************** function _vInitializeUart *****************
  3243 ;; Defined at:
  3244 ;;		line 41 in file "../src/uart.c"
  3245 ;; Parameters:    Size  Location     Type
  3246 ;;		None
  3247 ;; Auto vars:     Size  Location     Type
  3248 ;;  cBaudTemp       1    0        unsigned char 
  3249 ;; Return value:  Size  Location     Type
  3250 ;;		None               void
  3251 ;; Registers used:
  3252 ;;		wreg
  3253 ;; Tracked objects:
  3254 ;;		On entry : 60/0
  3255 ;;		On exit  : 60/20
  3256 ;;		Unchanged: FFF9F/0
  3257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3258 ;;      Params:         0       0       0       0       0
  3259 ;;      Locals:         0       1       0       0       0
  3260 ;;      Temps:          0       0       0       0       0
  3261 ;;      Totals:         0       1       0       0       0
  3262 ;;Total ram usage:        1 bytes
  3263 ;; Hardware stack levels used:    1
  3264 ;; Hardware stack levels required when called:    2
  3265 ;; This function calls:
  3266 ;;		Nothing
  3267 ;; This function is called by:
  3268 ;;		_main
  3269 ;; This function uses a non-reentrant model
  3270 ;;
  3271  01F0                     _vInitializeUart:	
  3272                           
  3273                           ;uart.c: 46: (TRISCbits.TRISC6) = 1;
  3274                           
  3275                           ; Regs used in _vInitializeUart: [wreg]
  3276  01F0  1683               	bsf	3,5	;RP0=1, select bank1
  3277  01F1  1707               	bsf	7,6	;volatile
  3278                           
  3279                           ;uart.c: 47: (TRISCbits.TRISC7) = 1;
  3280  01F2  1787               	bsf	7,7	;volatile
  3281                           
  3282                           ;uart.c: 56: {
  3283                           ;uart.c: 57: BRGH = 0;
  3284                           
  3285                           ;uart.c: 55: else if( cBaudTemp == ( 2 ) )
  3286  01F3  1118               	bcf	24,2
  3287                           
  3288                           ;uart.c: 58: BRG16 = 1;
  3289  01F4  1703               	bsf	3,6	;RP1=1, select bank3
  3290  01F5  3033               	movlw	51
  3291  01F6  1587               	bsf	7,3
  3292                           
  3293                           ;uart.c: 59: SPBRG = 51;
  3294  01F7  1303               	bcf	3,6	;RP1=0, select bank1
  3295  01F8  0099               	movwf	25	;volatile
  3296                           
  3297                           ;uart.c: 72: }
  3298                           ;uart.c: 74: SYNC = 0;
  3299                           
  3300                           ;uart.c: 60: }
  3301  01F9  1218               	bcf	24,4
  3302                           
  3303                           ;uart.c: 75: SPEN = 1;
  3304  01FA  1283               	bcf	3,5	;RP0=0, select bank0
  3305  01FB  1798               	bsf	24,7
  3306                           
  3307                           ;uart.c: 76: CREN = 1;
  3308  01FC  1618               	bsf	24,4
  3309                           
  3310                           ;uart.c: 77: TXEN = 1;
  3311  01FD  1683               	bsf	3,5	;RP0=1, select bank1
  3312  01FE  1698               	bsf	24,5
  3313                           
  3314                           ;uart.c: 78: TX9 = 0;
  3315  01FF  1318               	bcf	24,6
  3316                           
  3317                           ;uart.c: 79: RX9 = 0;
  3318  0200  1283               	bcf	3,5	;RP0=0, select bank0
  3319  0201  1318               	bcf	24,6
  3320                           
  3321                           ;uart.c: 80: ADDEN = 0;
  3322  0202  1198               	bcf	24,3
  3323                           
  3324                           ;uart.c: 81: RCIE = 1;
  3325  0203  1683               	bsf	3,5	;RP0=1, select bank1
  3326  0204  168C               	bsf	12,5
  3327                           
  3328                           ;uart.c: 82: TXIE = 0;
  3329  0205  120C               	bcf	12,4
  3330  0206  0008               	return
  3331  0207                     __end_of_vInitializeUart:	
  3332                           
  3333                           	psect	text669
  3334  022C                     __ptext669:	
  3335 ;; =============== function _vInitializeUart ends ============
  3336                           
  3337                           
  3338 ;; *************** function _vInitializeBoard *****************
  3339 ;; Defined at:
  3340 ;;		line 505 in file "../src/main.c"
  3341 ;; Parameters:    Size  Location     Type
  3342 ;;		None
  3343 ;; Auto vars:     Size  Location     Type
  3344 ;;		None
  3345 ;; Return value:  Size  Location     Type
  3346 ;;		None               void
  3347 ;; Registers used:
  3348 ;;		wreg, status,2
  3349 ;; Tracked objects:
  3350 ;;		On entry : 17F/0
  3351 ;;		On exit  : 17F/20
  3352 ;;		Unchanged: FFE80/0
  3353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3354 ;;      Params:         0       0       0       0       0
  3355 ;;      Locals:         0       0       0       0       0
  3356 ;;      Temps:          0       0       0       0       0
  3357 ;;      Totals:         0       0       0       0       0
  3358 ;;Total ram usage:        0 bytes
  3359 ;; Hardware stack levels used:    1
  3360 ;; Hardware stack levels required when called:    2
  3361 ;; This function calls:
  3362 ;;		Nothing
  3363 ;; This function is called by:
  3364 ;;		_main
  3365 ;; This function uses a non-reentrant model
  3366 ;;
  3367  022C                     _vInitializeBoard:	
  3368                           
  3369                           ;main.c: 506: PORTA = 0;
  3370                           
  3371                           ; Regs used in _vInitializeBoard: [wreg+status,2]
  3372  022C  0185               	clrf	5	;volatile
  3373                           
  3374                           ;main.c: 507: PORTB = 0;
  3375  022D  0186               	clrf	6	;volatile
  3376                           
  3377                           ;main.c: 508: PORTC = 0;
  3378  022E  0187               	clrf	7	;volatile
  3379                           
  3380                           ;main.c: 509: PORTD = 0;
  3381  022F  0188               	clrf	8	;volatile
  3382                           
  3383                           ;main.c: 510: PORTE = 0;
  3384  0230  0189               	clrf	9	;volatile
  3385                           
  3386                           ;main.c: 512: CM1CON0 = 0;
  3387  0231  1703               	bsf	3,6	;RP1=1, select bank2
  3388  0232  0187               	clrf	7	;volatile
  3389                           
  3390                           ;main.c: 513: CM2CON0 = 0;
  3391  0233  0188               	clrf	8	;volatile
  3392                           
  3393                           ;main.c: 514: OSCCON = 0b01110101;
  3394  0234  3075               	movlw	117
  3395  0235  1683               	bsf	3,5	;RP0=1, select bank1
  3396  0236  1303               	bcf	3,6	;RP1=0, select bank1
  3397  0237  008F               	movwf	15	;volatile
  3398                           
  3399                           ;main.c: 517: C1ON = 0;
  3400  0238  1283               	bcf	3,5	;RP0=0, select bank2
  3401  0239  1703               	bsf	3,6	;RP1=1, select bank2
  3402  023A  3017               	movlw	23
  3403  023B  1387               	bcf	7,7
  3404                           
  3405                           ;main.c: 518: C2ON = 0;
  3406  023C  1388               	bcf	8,7
  3407                           
  3408                           ;main.c: 521: WDTCON = 0b00010111;
  3409  023D  0085               	movwf	5	;volatile
  3410                           
  3411                           ;main.c: 522: OPTION_REG = 0b10000111;
  3412  023E  3087               	movlw	135
  3413  023F  1683               	bsf	3,5	;RP0=1, select bank1
  3414  0240  1303               	bcf	3,6	;RP1=0, select bank1
  3415  0241  0081               	movwf	1	;volatile
  3416                           
  3417                           ;main.c: 524: ANSELH = 0;
  3418  0242  1703               	bsf	3,6	;RP1=1, select bank3
  3419  0243  0189               	clrf	9	;volatile
  3420                           
  3421                           ;main.c: 525: ANSEL = 0;
  3422  0244  0188               	clrf	8	;volatile
  3423  0245  3007               	movlw	7
  3424                           
  3425                           ;main.c: 527: T0IF = 0;
  3426  0246  110B               	bcf	11,2
  3427                           
  3428                           ;main.c: 528: T0IE = 1;
  3429  0247  168B               	bsf	11,5
  3430                           
  3431                           ;main.c: 530: TRISA = 0b00000111;
  3432  0248  1303               	bcf	3,6	;RP1=0, select bank1
  3433  0249  0085               	movwf	5	;volatile
  3434                           
  3435                           ;main.c: 531: TRISB = 0b00000000;
  3436  024A  0186               	clrf	6	;volatile
  3437                           
  3438                           ;main.c: 532: TRISC = 0b11000000;
  3439  024B  30C0               	movlw	192
  3440  024C  0087               	movwf	7	;volatile
  3441                           
  3442                           ;main.c: 533: TRISD = 0b00000000;
  3443  024D  0188               	clrf	8	;volatile
  3444                           
  3445                           ;main.c: 534: TRISE = 0b00000100;
  3446  024E  3004               	movlw	4
  3447  024F  0089               	movwf	9	;volatile
  3448                           
  3449                           ;main.c: 536: tim10Hz = 5;
  3450  0250  3005               	movlw	5
  3451  0251  1283               	bcf	3,5	;RP0=0, select bank0
  3452  0252  00ED               	movwf	_tim10Hz	;volatile
  3453                           
  3454                           ;main.c: 537: tim2Hz = 5;
  3455  0253  00EE               	movwf	_tim2Hz	;volatile
  3456                           
  3457                           ;main.c: 538: tim1sec = 2;
  3458  0254  3002               	movlw	2
  3459  0255  1683               	bsf	3,5	;RP0=1, select bank1
  3460  0256  00CE               	movwf	_tim1sec^(0+128)	;volatile
  3461                           
  3462                           ;main.c: 539: CONV = 0;
  3463  0257  107A               	bcf	_CONV/(0+8),_CONV& (0+7)
  3464                           
  3465                           ;main.c: 540: conversionFinished = 0;
  3466  0258  10FA               	bcf	_conversionFinished/(0+8),_conversionFinished& (0+7)
  3467  0259  0008               	return
  3468  025A                     __end_of_vInitializeBoard:	
  3469                           
  3470                           	psect	text671
  3471  01E0                     __ptext671:	
  3472 ;; =============== function _read_ADC ends ============
  3473                           
  3474                           
  3475 ;; *************** function _vInitializeADC *****************
  3476 ;; Defined at:
  3477 ;;		line 41 in file "../src/adc.c"
  3478 ;; Parameters:    Size  Location     Type
  3479 ;;		None
  3480 ;; Auto vars:     Size  Location     Type
  3481 ;;		None
  3482 ;; Return value:  Size  Location     Type
  3483 ;;		None               void
  3484 ;; Registers used:
  3485 ;;		None
  3486 ;; Tracked objects:
  3487 ;;		On entry : 60/20
  3488 ;;		On exit  : 60/0
  3489 ;;		Unchanged: FFF9F/0
  3490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3491 ;;      Params:         0       0       0       0       0
  3492 ;;      Locals:         0       0       0       0       0
  3493 ;;      Temps:          0       0       0       0       0
  3494 ;;      Totals:         0       0       0       0       0
  3495 ;;Total ram usage:        0 bytes
  3496 ;; Hardware stack levels used:    1
  3497 ;; Hardware stack levels required when called:    2
  3498 ;; This function calls:
  3499 ;;		Nothing
  3500 ;; This function is called by:
  3501 ;;		_main
  3502 ;; This function uses a non-reentrant model
  3503 ;;
  3504  01E0                     _vInitializeADC:	
  3505                           
  3506                           ;adc.c: 42: (TRISAbits.TRISA0) = 1;
  3507                           
  3508                           ; Regs used in _vInitializeADC: []
  3509  01E0  1405               	bsf	5,0	;volatile
  3510                           
  3511                           ;adc.c: 43: (TRISAbits.TRISA1) = 1;
  3512  01E1  1485               	bsf	5,1	;volatile
  3513                           
  3514                           ;adc.c: 45: ANSELbits.ANS0 = 1;
  3515  01E2  1703               	bsf	3,6	;RP1=1, select bank3
  3516  01E3  1408               	bsf	8,0	;volatile
  3517                           
  3518                           ;adc.c: 46: ANSELbits.ANS1 = 1;
  3519  01E4  1488               	bsf	8,1	;volatile
  3520                           
  3521                           ;adc.c: 48: ADCON0bits.ADCS1 = 1;
  3522  01E5  1283               	bcf	3,5	;RP0=0, select bank0
  3523  01E6  1303               	bcf	3,6	;RP1=0, select bank0
  3524  01E7  179F               	bsf	31,7	;volatile
  3525                           
  3526                           ;adc.c: 49: ADCON0bits.ADCS0 = 0;
  3527  01E8  131F               	bcf	31,6	;volatile
  3528                           
  3529                           ;adc.c: 51: ADCON1bits.ADFM = 1;
  3530  01E9  1683               	bsf	3,5	;RP0=1, select bank1
  3531  01EA  179F               	bsf	31,7	;volatile
  3532                           
  3533                           ;adc.c: 52: ADCON1bits.VCFG1 = 0;
  3534  01EB  129F               	bcf	31,5	;volatile
  3535                           
  3536                           ;adc.c: 53: ADCON1bits.VCFG0 = 0;
  3537  01EC  121F               	bcf	31,4	;volatile
  3538                           
  3539                           ;adc.c: 54: ADCON0bits.ADON = 1;
  3540  01ED  1283               	bcf	3,5	;RP0=0, select bank0
  3541  01EE  141F               	bsf	31,0	;volatile
  3542  01EF  0008               	return
  3543  01F0                     __end_of_vInitializeADC:	
  3544                           
  3545                           	psect	text672
  3546  0293                     __ptext672:	
  3547 ;; =============== function _vInitializeADC ends ============
  3548                           
  3549                           
  3550 ;; *************** function _erdem *****************
  3551 ;; Defined at:
  3552 ;;		line 416 in file "../src/main.c"
  3553 ;; Parameters:    Size  Location     Type
  3554 ;;		None
  3555 ;; Auto vars:     Size  Location     Type
  3556 ;;  i               2    0        unsigned int 
  3557 ;;  temp            1    4[COMMON] unsigned char 
  3558 ;; Return value:  Size  Location     Type
  3559 ;;		None               void
  3560 ;; Registers used:
  3561 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3562 ;; Tracked objects:
  3563 ;;		On entry : 0/0
  3564 ;;		On exit  : 40/0
  3565 ;;		Unchanged: FFE9F/0
  3566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3567 ;;      Params:         0       0       0       0       0
  3568 ;;      Locals:         1       0       0       0       0
  3569 ;;      Temps:          3       0       0       0       0
  3570 ;;      Totals:         4       0       0       0       0
  3571 ;;Total ram usage:        4 bytes
  3572 ;; Hardware stack levels used:    1
  3573 ;; Hardware stack levels required when called:    1
  3574 ;; This function calls:
  3575 ;;		_vCheckError
  3576 ;;		_vAddToUartReceiveBuffer
  3577 ;;		_cGetFromTxBuffer
  3578 ;; This function is called by:
  3579 ;;		Interrupt level 1
  3580 ;; This function uses a non-reentrant model
  3581 ;;
  3582  0293                     _erdem:	
  3583                           
  3584                           ;main.c: 417: unsigned char temp;
  3585                           ;main.c: 418: unsigned int i;
  3586                           ;main.c: 420: if(T0IE && T0IF)
  3587  0293  1A8B               	btfsc	11,5
  3588  0294  1D0B               	btfss	11,2
  3589  0295  2AB4               	goto	i1l2306
  3590                           
  3591                           ;main.c: 421: {
  3592                           ;main.c: 422: TMR0 = 93;
  3593  0296  305D               	movlw	93
  3594  0297  1283               	bcf	3,5	;RP0=0, select bank0
  3595  0298  1303               	bcf	3,6	;RP1=0, select bank0
  3596  0299  0081               	movwf	1	;volatile
  3597                           
  3598                           ;main.c: 424: if(--tim10Hz==0)
  3599  029A  0BED               	decfsz	_tim10Hz,f	;volatile
  3600  029B  2AB2               	goto	i1l8205
  3601                           
  3602                           ;main.c: 425: {
  3603                           ;main.c: 426: tim10Hz=12;
  3604  029C  300C               	movlw	12
  3605  029D  00ED               	movwf	_tim10Hz	;volatile
  3606                           
  3607                           ;main.c: 427: if(CONV==1)
  3608  029E  1C7A               	btfss	_CONV/(0+8),_CONV& (0+7)
  3609  029F  2AA9               	goto	i1l8197
  3610                           
  3611                           ;main.c: 428: {
  3612                           ;main.c: 429: if(convert--==0)
  3613  02A0  03F6               	decf	_convert,f	;volatile
  3614  02A1  0876               	movf	_convert,w	;volatile
  3615  02A2  3AFF               	xorlw	255
  3616  02A3  1D03               	skipz
  3617  02A4  2AA9               	goto	i1l8197
  3618                           
  3619                           ;main.c: 430: {
  3620                           ;main.c: 431: convert=9;
  3621  02A5  3009               	movlw	9
  3622  02A6  00F6               	movwf	_convert	;volatile
  3623                           
  3624                           ;main.c: 432: CONV=0;
  3625  02A7  107A               	bcf	_CONV/(0+8),_CONV& (0+7)
  3626                           
  3627                           ;main.c: 433: conversionFinished = 1;
  3628  02A8  14FA               	bsf	_conversionFinished/(0+8),_conversionFinished& (0+7)
  3629  02A9                     i1l8197:	
  3630                           
  3631                           ;main.c: 435: }
  3632                           ;main.c: 436: }
  3633                           ;main.c: 438: if(--tim2Hz==0)
  3634  02A9  0BEE               	decfsz	_tim2Hz,f	;volatile
  3635  02AA  2AB2               	goto	i1l8205
  3636                           
  3637                           ;main.c: 439: {
  3638                           ;main.c: 440: tim2Hz=5;
  3639  02AB  3005               	movlw	5
  3640  02AC  00EE               	movwf	_tim2Hz	;volatile
  3641                           
  3642                           ;main.c: 441: if(--tim1sec==0)
  3643  02AD  1683               	bsf	3,5	;RP0=1, select bank1
  3644  02AE  0BCE               	decfsz	_tim1sec^(0+128),f	;volatile
  3645  02AF  2AB2               	goto	i1l8205
  3646                           
  3647                           ;main.c: 442: {
  3648                           ;main.c: 443: tim1sec=2;
  3649  02B0  3002               	movlw	2
  3650  02B1  00CE               	movwf	_tim1sec^(0+128)	;volatile
  3651  02B2                     i1l8205:	
  3652                           
  3653                           ;main.c: 445: }
  3654                           ;main.c: 446: }
  3655                           ;main.c: 447: }
  3656                           ;main.c: 450: T0IF = 0;
  3657  02B2  110B               	bcf	11,2
  3658  02B3  2ADF               	goto	i1l2312
  3659  02B4                     i1l2306:	
  3660                           
  3661                           ;main.c: 452: }
  3662                           ;main.c: 454: if(RCIE && RCIF)
  3663  02B4  1683               	bsf	3,5	;RP0=1, select bank1
  3664  02B5  1303               	bcf	3,6	;RP1=0, select bank1
  3665  02B6  1E8C               	btfss	12,5
  3666  02B7  2ACD               	goto	i1l2313
  3667  02B8  1283               	bcf	3,5	;RP0=0, select bank0
  3668  02B9  1E8C               	btfss	12,5
  3669  02BA  2ACD               	goto	i1l2313
  3670                           
  3671                           ;main.c: 455: {
  3672                           ;main.c: 456: if (OERR)
  3673  02BB  1C98               	btfss	24,1
  3674  02BC  2ABF               	goto	i1l2314
  3675                           
  3676                           ;main.c: 457: {
  3677                           ;main.c: 458: CREN=0;
  3678  02BD  1218               	bcf	24,4
  3679                           
  3680                           ;main.c: 459: CREN=1;
  3681  02BE  1618               	bsf	24,4
  3682  02BF                     i1l2314:	
  3683                           
  3684                           ;main.c: 460: }
  3685                           ;main.c: 461: if(FERR)
  3686  02BF  1918               	btfsc	24,2
  3687  02C0  081A               	movf	26,w	;volatile
  3688  02C1                     i1l8219:	
  3689  02C1  1A8C               	btfsc	12,5
  3690  02C2  2AC7               	goto	i1l8221
  3691                           
  3692                           ;main.c: 466: {
  3693                           ;main.c: 467: vCheckError();
  3694  02C3  22E8  120A  118A   	fcall	_vCheckError
  3695  02C6  2AC1               	goto	i1l8219
  3696  02C7                     i1l8221:	
  3697                           
  3698                           ;main.c: 468: }
  3699                           ;main.c: 470: temp = RCREG;
  3700  02C7  081A               	movf	26,w	;volatile
  3701  02C8  00F5               	movwf	erdem@temp
  3702                           
  3703                           ;main.c: 471: vAddToUartReceiveBuffer(temp);
  3704  02C9  22F1  120A  118A   	fcall	_vAddToUartReceiveBuffer
  3705  02CC  2ADF               	goto	i1l2312
  3706  02CD                     i1l2313:	
  3707                           
  3708                           ;main.c: 473: }
  3709                           ;main.c: 475: if(TXIE && TXIF)
  3710  02CD  1683               	bsf	3,5	;RP0=1, select bank1
  3711  02CE  1E0C               	btfss	12,4
  3712  02CF  2ADF               	goto	i1l2312
  3713  02D0  1283               	bcf	3,5	;RP0=0, select bank0
  3714  02D1  1E0C               	btfss	12,4
  3715  02D2  2ADF               	goto	i1l2312
  3716                           
  3717                           ;main.c: 476: {
  3718                           ;main.c: 477: if(uartTransmitBufferR != uartTransmitBufferW)
  3719  02D3  0878               	movf	_uartTransmitBufferR,w	;volatile
  3720  02D4  0679               	xorwf	_uartTransmitBufferW,w	;volatile
  3721  02D5  1903               	skipnz
  3722  02D6  2ADF               	goto	i1l2312
  3723                           
  3724                           ;main.c: 478: {
  3725                           ;main.c: 479: temp = cGetFromTxBuffer();
  3726  02D7  22FE               	fcall	_cGetFromTxBuffer
  3727  02D8  00F5               	movwf	erdem@temp
  3728                           
  3729                           ;main.c: 480: TXREG = temp;
  3730  02D9  0099               	movwf	25	;volatile
  3731                           
  3732                           ;main.c: 481: if(temp == 0x03)
  3733  02DA  0875               	movf	erdem@temp,w
  3734  02DB  3A03               	xorlw	3
  3735                           
  3736                           ;main.c: 482: {
  3737                           ;main.c: 483: TXIE = 0;
  3738  02DC  1683               	bsf	3,5	;RP0=1, select bank1
  3739  02DD  1903               	btfsc	3,2
  3740  02DE  120C               	bcf	12,4
  3741  02DF                     i1l2312:	
  3742  02DF  0874               	movf	??_erdem+2,w
  3743  02E0  008A               	movwf	10
  3744  02E1  0873               	movf	??_erdem+1,w
  3745  02E2  0084               	movwf	4
  3746  02E3  0E72               	swapf	??_erdem^(0+-128),w
  3747  02E4  0083               	movwf	3
  3748  02E5  0EFE               	swapf	126,f
  3749  02E6  0E7E               	swapf	126,w
  3750  02E7  0009               	retfie
  3751  02E8                     __end_of_erdem:	
  3752  02E8                     __ptext675:	
  3753 ;; =============== function _vAddToUartReceiveBuffer ends ============
  3754                           
  3755                           
  3756 ;; *************** function _vCheckError *****************
  3757 ;; Defined at:
  3758 ;;		line 97 in file "../src/uart.c"
  3759 ;; Parameters:    Size  Location     Type
  3760 ;;		None
  3761 ;; Auto vars:     Size  Location     Type
  3762 ;;  a               1    0        unsigned char 
  3763 ;; Return value:  Size  Location     Type
  3764 ;;		None               void
  3765 ;; Registers used:
  3766 ;;		wreg
  3767 ;; Tracked objects:
  3768 ;;		On entry : 0/0
  3769 ;;		On exit  : 60/0
  3770 ;;		Unchanged: FFF9F/0
  3771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3772 ;;      Params:         0       0       0       0       0
  3773 ;;      Locals:         0       0       0       0       0
  3774 ;;      Temps:          0       0       0       0       0
  3775 ;;      Totals:         0       0       0       0       0
  3776 ;;Total ram usage:        0 bytes
  3777 ;; Hardware stack levels used:    1
  3778 ;; This function calls:
  3779 ;;		Nothing
  3780 ;; This function is called by:
  3781 ;;		_erdem
  3782 ;; This function uses a non-reentrant model
  3783 ;;
  3784  02E8                     _vCheckError:	
  3785                           
  3786                           ;uart.c: 99: if ( OERR )
  3787                           
  3788                           ; Regs used in _vCheckError: [wreg]
  3789  02E8  1283               	bcf	3,5	;RP0=0, select bank0
  3790  02E9  1303               	bcf	3,6	;RP1=0, select bank0
  3791  02EA  1C98               	btfss	24,1
  3792  02EB  2AEE               	goto	i1l3455
  3793                           
  3794                           ;uart.c: 100: {
  3795                           ;uart.c: 101: CREN =0;
  3796  02EC  1218               	bcf	24,4
  3797                           
  3798                           ;uart.c: 102: CREN = 1;
  3799  02ED  1618               	bsf	24,4
  3800  02EE                     i1l3455:	
  3801                           
  3802                           ;uart.c: 103: }
  3803                           ;uart.c: 104: if( FERR )
  3804  02EE  1918               	btfsc	24,2
  3805                           
  3806                           ;uart.c: 105: {
  3807                           ;uart.c: 106: a = RCREG;
  3808  02EF  081A               	movf	26,w	;volatile
  3809  02F0  0008               	return
  3810  02F1                     __end_of_vCheckError:	
  3811  02F1                     __ptext674:	
  3812 ;; =============== function _cGetFromTxBuffer ends ============
  3813                           
  3814                           
  3815 ;; *************** function _vAddToUartReceiveBuffer *****************
  3816 ;; Defined at:
  3817 ;;		line 556 in file "../src/main.c"
  3818 ;; Parameters:    Size  Location     Type
  3819 ;;  data            1    wreg     unsigned char 
  3820 ;; Auto vars:     Size  Location     Type
  3821 ;;  data            1    0[COMMON] unsigned char 
  3822 ;; Return value:  Size  Location     Type
  3823 ;;		None               void
  3824 ;; Registers used:
  3825 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3826 ;; Tracked objects:
  3827 ;;		On entry : 60/0
  3828 ;;		On exit  : 160/100
  3829 ;;		Unchanged: FFE9F/0
  3830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3831 ;;      Params:         0       0       0       0       0
  3832 ;;      Locals:         1       0       0       0       0
  3833 ;;      Temps:          0       0       0       0       0
  3834 ;;      Totals:         1       0       0       0       0
  3835 ;;Total ram usage:        1 bytes
  3836 ;; Hardware stack levels used:    1
  3837 ;; This function calls:
  3838 ;;		Nothing
  3839 ;; This function is called by:
  3840 ;;		_erdem
  3841 ;; This function uses a non-reentrant model
  3842 ;;
  3843  02F1                     _vAddToUartReceiveBuffer:	
  3844                           
  3845                           ; Regs used in _vAddToUartReceiveBuffer: [wreg-fsr0h+status,2+status,0]
  3846                           ;vAddToUartReceiveBuffer@data stored from wreg
  3847  02F1  00F1               	movwf	vAddToUartReceiveBuffer@data
  3848                           
  3849                           ;main.c: 557: uartReceiveBuffer[ uartReceiveBufferW ] = data;
  3850  02F2  0863               	movf	_uartReceiveBufferW,w
  3851  02F3  3E90               	addlw	_uartReceiveBuffer& (0+255)
  3852  02F4  0084               	movwf	4
  3853  02F5  0871               	movf	vAddToUartReceiveBuffer@data,w
  3854  02F6  1783               	bsf	3,7	;select IRP bank3
  3855  02F7  0080               	movwf	0
  3856                           
  3857                           ;main.c: 558: uartReceiveBufferW++;
  3858  02F8  0AE3               	incf	_uartReceiveBufferW,f	;volatile
  3859                           
  3860                           ;main.c: 559: if(uartReceiveBufferW == ( 60 ))
  3861  02F9  0863               	movf	_uartReceiveBufferW,w	;volatile
  3862  02FA  3A3C               	xorlw	60
  3863  02FB  1903               	btfsc	3,2
  3864                           
  3865                           ;main.c: 560: {
  3866                           ;main.c: 561: uartReceiveBufferW = 0;
  3867  02FC  01E3               	clrf	_uartReceiveBufferW	;volatile
  3868  02FD  0008               	return
  3869  02FE                     __end_of_vAddToUartReceiveBuffer:	
  3870  02FE                     __ptext673:	
  3871 ;; =============== function _erdem ends ============
  3872                           
  3873                           
  3874 ;; *************** function _cGetFromTxBuffer *****************
  3875 ;; Defined at:
  3876 ;;		line 646 in file "../src/main.c"
  3877 ;; Parameters:    Size  Location     Type
  3878 ;;		None
  3879 ;; Auto vars:     Size  Location     Type
  3880 ;;  value           1    0[COMMON] unsigned char 
  3881 ;; Return value:  Size  Location     Type
  3882 ;;                  1    wreg      unsigned char 
  3883 ;; Registers used:
  3884 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3885 ;; Tracked objects:
  3886 ;;		On entry : 60/0
  3887 ;;		On exit  : 160/0
  3888 ;;		Unchanged: FFE9F/0
  3889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3890 ;;      Params:         0       0       0       0       0
  3891 ;;      Locals:         1       0       0       0       0
  3892 ;;      Temps:          0       0       0       0       0
  3893 ;;      Totals:         1       0       0       0       0
  3894 ;;Total ram usage:        1 bytes
  3895 ;; Hardware stack levels used:    1
  3896 ;; This function calls:
  3897 ;;		Nothing
  3898 ;; This function is called by:
  3899 ;;		_erdem
  3900 ;; This function uses a non-reentrant model
  3901 ;;
  3902  02FE                     _cGetFromTxBuffer:	
  3903                           
  3904                           ;main.c: 647: unsigned char value;
  3905                           ;main.c: 649: value = uartTransmitBuffer[uartTransmitBufferR];
  3906                           
  3907                           ; Regs used in _cGetFromTxBuffer: [wreg-fsr0h+status,2+status,0]
  3908  02FE  0878               	movf	_uartTransmitBufferR,w
  3909  02FF  3EA0               	addlw	_uartTransmitBuffer& (0+255)
  3910  0300  0084               	movwf	4
  3911  0301  1383               	bcf	3,7	;select IRP bank1
  3912  0302  0800               	movf	0,w
  3913  0303  00F1               	movwf	cGetFromTxBuffer@value
  3914                           
  3915                           ;main.c: 650: uartTransmitBufferR++;
  3916  0304  0AF8               	incf	_uartTransmitBufferR,f	;volatile
  3917                           
  3918                           ;main.c: 651: if(uartTransmitBufferR == ( 30 ))
  3919  0305  0878               	movf	_uartTransmitBufferR,w	;volatile
  3920  0306  3A1E               	xorlw	30
  3921  0307  1903               	btfsc	3,2
  3922                           
  3923                           ;main.c: 652: {
  3924                           ;main.c: 653: uartTransmitBufferR = 0;
  3925  0308  01F8               	clrf	_uartTransmitBufferR	;volatile
  3926                           
  3927                           ;main.c: 654: }
  3928                           ;main.c: 655: return value;
  3929  0309  0871               	movf	cGetFromTxBuffer@value,w
  3930  030A  0008               	return
  3931  030B                     __end_of_cGetFromTxBuffer:	
  3932                           
  3933                           	psect	intentry
  3934  0004                     __pintentry:	
  3935                           ; Regs used in _erdem: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3936                           
  3937  0004                     interrupt_function:	
  3938  007E                     saved_w	set	btemp
  3939  0004  00FE               	movwf	btemp
  3940  0005  0E03               	swapf	3,w
  3941  0006  00F2               	movwf	??_erdem
  3942  0007  0804               	movf	4,w
  3943  0008  00F3               	movwf	??_erdem+1
  3944  0009  080A               	movf	10,w
  3945  000A  00F4               	movwf	??_erdem+2
  3946  000B  120A  118A  2A93   	ljmp	_erdem
  3947                           
  3948                           	psect	text676
  3949  0000                     __ptext676:	
  3950 ;; =============== function _vCheckError ends ============
  3951                           
  3952  007E                     btemp	set	126	;btemp
  3953  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Thu Jul 09 16:47:42 2015

                  ___bmul@product 0021                    _vInitializeADC 01E0                                fsr 0004  
       ??_vAddToUartReceiveBuffer 0071                  ??_getTemperature 0044                               _GIE 005F  
                             _PR2 0092                               _RX9 00C6                               _TX9 04C6  
                 _vInitializeUart 01F0                               _tam 005E                               fsr0 0004  
                             indf 0000                      ___ftdiv@cntr 003E                      ___ftdiv@sign 0043  
         ??_cGetFromReceiveBuffer 0020                              l1091 0000                              l1085 0000  
                            l1088 043A                              l2324 0000                              l2332 0000  
                            l2352 0000                              _C1ON 083F                              _C2ON 0847  
                            l2296 07CB                              l2297 07FD                              l2289 07B3  
                            l2298 07D3                              l3452 0000                              l3460 01B8  
                            l3463 0000                              l4550 0000                              l7024 05A9  
                            l7130 0000                              l9001 0000                              l9011 0000  
                            l9003 0000                              l9013 0000                              l9005 0000  
                            l9103 07F2                              l9031 0658                              l9023 0000  
                            l9007 0000                              l8401 0000                              l9025 0649  
                            l9017 0000                              l9009 0000                              l8331 0529  
                            l8403 0000                              l9051 0000                              l9043 0674  
                            l9019 0630                              l8341 0541                              l8501 0000  
                            l9053 0689                              l9037 0000                              l9029 0000  
                            l8351 0000                              l8343 0546                              l8335 052D  
                            l8327 0000                              l8431 0000                              l8511 0000  
                            l8503 0000                              l9071 0000                              l9055 0000  
                            l9039 0671                              l6904 0000                              l6920 0000  
                            l8353 0000                              l8345 054B                              l8337 0532  
                            l8329 0000                              l8361 0000                              l8521 0505  
                            l8513 0000                              l8505 04E5                              l9065 078B  
                            l9049 0000                              l6930 0000                              l8339 0537  
                            l8363 0000                              l8355 0000                              l8451 0000  
                            l8443 0000                              l8523 0000                              l8515 0000  
                            l9059 0000                              l8349 0000                              l8365 0000  
                            l8357 0579                              l8461 047F                              l8453 0000  
                            l8445 0000                              l8437 045B                              l8525 0000  
                            l8517 04FB                              l8509 04EF                              l9085 07AB  
                            l9069 0000                              l9077 079C                              l8375 059D  
                            l8367 0000                              l8359 057E                              l8471 0000  
                            l8455 0000                              l8447 0000                              l8527 0000  
                            l9095 0000                              l9087 07B1                              l8801 0000  
                            l8385 05B3                              l8377 0000                              l8369 0000  
                            l8393 0000                              l8465 0000                              l8457 0000  
                            l8449 0000                              l8481 04C3                              l9097 0000  
                            l9089 07B5                              l6890 0000                              l8731 0000  
                            l8811 0000                              l8803 0000                              l8387 0000  
                            l8379 05A5                              l8395 0000                              l8459 0000  
                            l8491 0000                              l8475 0000                              l9099 07D5  
                            l8733 0000                              l8741 0000                              l8813 0000  
                            l8805 0000                              l8389 05C1                              l8397 0000  
                            l8901 0000                              l8469 0000                              l8493 0000  
                            l8735 0000                              l8751 0000                              l8743 0000  
                            l8815 0000                              l8807 0000                              l8823 0000  
                            l8399 0000                              l8911 0000                              l8903 0000  
                            l8495 0000                              l8487 04D4                              l6896 0362  
                            l8729 0000                              l8761 0000                              l8753 0000  
                            l8745 0000                              l8817 0000                              l8809 0000  
                            l8825 0000                              l8921 0000                              l8913 0000  
                            l8497 0000                              l8489 0000                              l6898 0000  
                            l8763 0000                              l8755 0000                              l8747 0000  
                            l8771 0000                              l8819 0000                              l8827 0000  
                            l8843 0000                              l8835 0000                              l8851 0000  
                            l8907 0000                              l8499 0000                              l8923 0000  
                            l8765 0000                              l8757 0000                              l8749 0000  
                            l8781 0000                              l8773 0000                              l8845 0000  
                            l8837 01D4                              l8861 037C                              l8853 0000  
                            l8917 0000                              l8909 0340                              l6997 046C  
                            l8941 0000                              l8933 03C1                              l8767 0000  
                            l8759 0000                              l8783 0000                              l8775 0000  
                            l8871 0000                              l8863 0000                              l8919 0000  
                            l8951 0000                              l8943 0000                              l8935 0000  
                            l8927 0000                              l8769 0000                              l8785 0000  
                            l8873 0393                              l8937 0000                              l8961 0000  
                            l8867 0000                              l8891 0000                              l8955 0000  
                            l8947 03DC                              l8971 0319                              l8963 0000  
                            l8885 03A4                              l8893 03B7                              l8877 0000  
                            l8957 0000                              l8949 0000                              l8981 0000  
                            l8967 0000                              l8991 0000                              l8983 0000  
                            l8975 0000                              l8897 0000                              l8969 0000  
                            l8993 0000                              l8985 0000                              l8977 0000  
                            l8899 0328                              l8995 05F8                              l8987 0000  
                            l8979 0000                              l8997 0000                              l8989 0000  
                            l8999 0000                              _BRGH 04C2                              _T0IE 005D  
                            _T0IF 005A                              _CREN 00C4                              _FERR 00C2  
                            _CONV 03D0                              u2007 068F                              u1240 0000  
                            u2017 069E                              u2107 0726                              u2027 06AD  
                            u1245 0582                              u2117 0735                              u2037 06BC  
                            u2127 0744                              u2047 06CB                              u2137 0753  
                            u2057 06DA                              u2147 0762                              u2067 06E9  
                            u1365 048D                              u2157 0771                              u2077 06F8  
                            u2167 028B                              u2087 0708                              u2097 0717  
                            u1725 0385                              u1765 03AA                              u1845 0621  
                            u1855 063B                              u1875 0661                              _PEIE 005E  
                            _RCIE 0465                              _RCIF 0065                              _OERR 00C1  
                            _TMR0 0001                              _SPEN 00C7                              _TXIE 0464  
                            _TXEN 04C5                              _TXIF 0064                              _SYNC 04C4  
                _vInitializeBoard 022C                              _main 05DB                      ___ftpack@arg 0020  
                            _itoa 030B                      ___ftpack@exp 0023                              btemp 007E  
                            _utoa 0323                              start 000E                 ___bmul@multiplier 0022  
                    ___ftmul@cntr 0038            __end_of_vInitializeADC 01F0                      ___ftmul@sign 0039  
                    ___fttol@exp1 0034                      ___fttol@lval 0030                             _ADDEN 00C3  
                           ?_main 0071                             ?_itoa 002F                             _BRG16 0C3B  
                 __end_of___ftdiv 04B2                             _ANSEL 0188                             ?_utoa 0027  
                 __end_of___ftmul 0521                   __end_of___fttol 05CA                             _T2CON 0012  
                 __end_of___lwdiv 0398                   __end_of___lwmod 03BC                             _RCREG 001A  
                           _SPBRG 0099                             _PORTA 0005                             _PORTB 0006  
                           _PORTC 0007                             _PORTD 0008                             _PORTE 0009  
                           _TRISA 0085                             _TRISB 0086                             _TRISC 0087  
                           _TRISD 0088                             _TRISE 0089                             _TXREG 0019  
           cGetFromTxBuffer@value 0071                   _debugModeStatus 007B                             _erdem 0293  
                           _tempH 005F                             _tempL 0060                     ___ftpack@sign 0024  
             _uartTransmitBufferR 0078               _uartTransmitBufferW 0079                             _putch 01B6  
                           main@i 004F                    __pbitbssCOMMON 03D0                             pclath 000A  
 __end_of_vAddToUartReceiveBuffer 02FE                 _uartReceiveBuffer 0190                             utoa@c 002D  
            __size_of_vCheckError 0009                             utoa@v 002B                             status 0003  
                           wtemp0 007E                 read_ADC@adcResult 0024                   ?_vInitializeADC 0071  
                    __end_of_main 0800                      __end_of_itoa 0323                      __end_of_utoa 036E  
         __end_of_vInitializeUart 0207       vAddToUartReceiveBuffer@data 0071                            ??_main 004C  
                   ___fttol@sign1 002F                            ??_itoa 0033                            ??_utoa 002B  
                          ?_erdem 0071                            _ADRESH 001E                            _ADRESL 009E  
                          _CCPR1L 0015                            _CCPR2L 001B                _vInitializeVHN5019 025A  
                          ?_putch 0071                  __end_of___ftpack 055F                            _ANSELH 0189  
                          i1l2312 02DF                            i1l2313 02CD                            i1l2314 02BF  
                          i1l2306 02B4                            i1l2345 0000                            i1l3455 02EE  
                          i1l8201 0000                            i1l8203 0000                            i1l8221 02C7  
                          i1l8205 02B2                            i1l8223 0000                            i1l8233 0000  
                          i1l8235 0000                            i1l8219 02C1                            i1l8245 0000  
                          i1l8253 0000                            i1l8239 0000                            i1l8247 0000  
                          i1l8255 0000                            i1l8183 0000                            i1l8249 0000  
                          i1l8257 0000                            i1l8193 0000                            i1l8185 0000  
                          i1l8177 0000                            i1l8195 0000                            i1l8187 0000  
                          i1l8197 02A9                            i1l8199 0000                  __end_of___lwtoft 056F  
                          _OSCCON 008F                            _WDTCON 0105               ?_vInitializeVHN5019 0071  
                          ___bmul 01D2         __size_of_cGetFromTxBuffer 000D                         ??___ftdiv 003B  
                       ??___ftmul 0031                         ??___fttol 002C                         ??___lwdiv 0024  
                __end_of_read_ADC 044A                         ??___lwmod 0024                            _tim2Hz 006E  
                          clrloop 01BE             ___ftmul@f3_as_product 0035              ??_vInitializeVHN5019 0020  
                    __pdataCOMMON 007B                            saved_w 007E                _uartReceiveBufferR 0062  
              _uartReceiveBufferW 0063                            putch@c 0020                        ___ftdiv@f1 0038  
                      ___ftdiv@f2 0035                        ___ftdiv@f3 003F               ___bmul@multiplicand 0020  
                      ___ftmul@f1 002B                        ___ftmul@f2 002E                        ___fttol@f1 0028  
                  __pcstackCOMMON 0071                      __pidataBANK0 0000                     __end_of_erdem 02E8  
                ?_vInitializeUart 0071                     __end_of_putch 01BD          __end_of_vInitializeBoard 025A  
                      ___lwtoft@c 0028          _currentTemperatureBuffer 0064                           ??_erdem 0072  
                      _dataBuffer 00BE                           ??_putch 0020                        __pbssBANK0 0050  
                      __pbssBANK1 00A0                        __pbssBANK3 0190    __size_of_cGetFromReceiveBuffer 000D  
   __end_of_cGetFromReceiveBuffer 01D2                        __pmaintext 05DB                           ?___bmul 0020  
                      __pintentry 0004                           _CM1CON0 0107                           _CM2CON0 0108  
                         _CCP1CON 0017                           _CCP2CON 001D                   _debounceCounter 005B  
                       ?___ftpack 0020                         ?___lwtoft 0028                         ?_read_ADC 0020  
                ??_vInitializeADC 0020          ?_vAddToUartReceiveBuffer 0071                   __size_of___bmul 000E  
                _cGetFromTxBuffer 02FE                           ___ftdiv 044A                           ___ftmul 04B2  
                         ___fttol 056F                           ___lwdiv 036E                           ___lwmod 0398  
                      ??___ftpack 0025                         _ANSELbits 0188                        ??___lwtoft 002B  
                         _convert 0076                           _tim10Hz 006D                         _T2CONbits 0012  
                         _tim1min 0077                           _tim1sec 00CE                           _ondalik 005D  
                   ??_vCheckError 0071              end_of_initialization 0228           __size_of_getTemperature 0072  
                      ??_read_ADC 0022                           itoa@buf 0034                           itoa@val 002F  
                         utoa@buf 002E                           utoa@val 0027                         _PORTAbits 0005  
                       _PORTBbits 0006                         _PORTCbits 0007                         _PORTDbits 0008  
           read_ADC@analogChannel 0023                         _TRISAbits 0085                         _TRISBbits 0086  
                       _TRISCbits 0087                         _TRISDbits 0088                       ___ftdiv@exp 0042  
             __end_of_vCheckError 02F1                       ___ftmul@exp 0034                    __end_of___bmul 01E0  
                   __pidataCOMMON 0000                 ?_vInitializeBoard 0071                _uartTransmitBuffer 00A0  
     __size_of_vInitializeVHN5019 0039                ??_vInitializeBoard 0020               start_initialization 0207  
                  _currentCommand 0059                          ??___bmul 0021                       __pdataBANK0 006F  
                     _dataCounter 005A                 __size_of___ftpack 003E                       __pbssCOMMON 0076  
               __size_of___lwtoft 0010          __size_of_vInitializeUart 0017                     __pcstackBANK0 0020  
        __end_of_cGetFromTxBuffer 030B                    _getTemperature 03BC                       _vCheckError 02E8  
                 getTemperature@m 004B                      _oldTempLevel 005C                         __pnvBANK0 006D  
                       __pnvBANK1 00CE             _cGetFromReceiveBuffer 01C5                 __size_of_read_ADC 001C  
                ___lwdiv@dividend 0022                         __ptext660 025A                         __ptext661 056F  
                       __ptext670 042E                         __ptext662 0521                         __ptext654 030B  
                       __ptext671 01E0                         __ptext663 0398                         __ptext655 03BC  
                       __ptext672 0293                         __ptext664 036E                         __ptext656 055F  
                       __ptext673 02FE                         __ptext665 01D2                         __ptext657 04B2  
                       __ptext674 02F1                         __ptext666 01C5                         __ptext658 044A  
                       __ptext675 02E8                         __ptext667 01B6                         __ptext659 0323  
                       __ptext676 0000                         __ptext668 01F0                         __ptext669 022C  
                        ?___ftdiv 0035                          ?___ftmul 002B                          ?___fttol 0028  
                        ?___lwdiv 0020                          ?___lwmod 0020                         _buffer_SM 006F  
__size_of_vAddToUartReceiveBuffer 000D            __end_of_getTemperature 042E                  ___lwdiv@quotient 0025  
                  __size_of_erdem 0055                    __size_of_putch 0007                 interrupt_function 0004  
                        _PIE1bits 008C                       _bufferValue 0058              getTemperature@iTempN 0049  
            getTemperature@iTempP 0047                        _ADCON0bits 001F                        _ADCON1bits 009F  
                       erdem@temp 0075                   ?_getTemperature 0071                 ??_vInitializeUart 0020  
          ?_cGetFromReceiveBuffer 0071                  __size_of___ftdiv 0068           __size_of_vInitializeADC 0010  
                __size_of___ftmul 006F                  __size_of___fttol 005B                  __size_of___lwdiv 002A  
                __size_of___lwmod 0024                          ___ftpack 0521                _currentTemperature 0056  
                        ___lwtoft 055F                _conversionFinished 03D1                   ___lwdiv@divisor 0020  
                 ___lwdiv@counter 0024        cGetFromReceiveBuffer@value 0020         __size_of_vInitializeBoard 002E  
                        _read_ADC 042E                     __size_of_main 0225                     __size_of_itoa 0018  
                   __size_of_utoa 004B                     _timerOverflow 0061                          clear_ram 01BD  
      __end_of_vInitializeVHN5019 0293           _vAddToUartReceiveBuffer 02F1                          itoa@base 0031  
                    ?_vCheckError 0071                 ?_cGetFromTxBuffer 0071                          intlevel1 0000  
              ??_cGetFromTxBuffer 0071                  ___lwmod@dividend 0022           getTemperature@milliVolt 0044  
                   _commandBuffer 006A                          utoa@base 0029                        _OPTION_REG 0081  
                 ___lwmod@divisor 0020                   ___lwmod@counter 0024                       _printBuffer 0050  
