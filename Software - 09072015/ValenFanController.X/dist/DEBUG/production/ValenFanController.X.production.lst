

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Fri Jul 03 17:56:33 2015

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	eeprom_data,global,class=EEDATA,space=2,delta=2
     6                           	psect	idataBANK0,global,class=CODE,delta=2
     7                           	psect	idataCOMMON,global,class=CODE,delta=2
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cinit,global,class=CODE,delta=2
    11                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
    12                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    18                           	psect	clrtext,global,class=CODE,delta=2
    19                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    21                           	psect	maintext,global,class=CODE,delta=2
    22                           	psect	text662,local,class=CODE,delta=2
    23                           	psect	text663,local,class=CODE,delta=2
    24                           	psect	text668,local,class=CODE,delta=2
    25                           	psect	text673,local,class=CODE,delta=2
    26                           	psect	text674,local,class=CODE,delta=2
    27                           	psect	text675,local,class=CODE,delta=2
    28                           	psect	text676,local,class=CODE,delta=2
    29                           	psect	text677,local,class=CODE,delta=2
    30                           	psect	text679,local,class=CODE,delta=2
    31                           	psect	text680,local,class=CODE,delta=2
    32                           	psect	intentry,global,class=CODE,delta=2
    33                           	psect	text684,local,class=CODE,delta=2
    34                           	psect	pa_nodes,global,class=CODE,delta=2
    35                           	dabs	1,0x7E,2
    36  000A                     	;#
    37                           
    38                           	psect	config
    39  2007  E32C               	dw	58156	;#
    40                           
    41                           	psect	eeprom_data
    42  0000  000A 0014 0019     	db	10,20,25,59,0,0,0,0	;#
      +       003B 0000 0000     
      +       0000 0000          
    43  0008  0001 0009 000A     	db	1,9,10,11,12,13,14,15	;#
      +       000B 000C 000D     
      +       000E 000F          
    44  0010  0000 003C 0021     	db	0,60,33,33,3,48,1,32	;#
      +       0021 0003 0030     
      +       0001 0020          
    45  0018  0031 0032 0033     	db	49,50,51,52,53,54,55,56	;#
      +       0034 0035 0036     
      +       0037 0038          
    46  0020  0031 0030 0000     	db	49,48,0,0,0,0,0,0	;#
      +       0000 0000 0000     
      +       0000 0000          
    47                           
    48                           	psect	idataBANK0
    49  0000                     __pidataBANK0:	
    50                           
    51                           	psect	idataCOMMON
    52  0000                     __pidataCOMMON:	
    53                           
    54                           	psect	nvBANK0
    55  006D                     __pnvBANK0:	
    56  006D                     _tim10Hz:	
    57  006D                     	ds	1
    58  006E                     _tim2Hz:	
    59  006E                     	ds	1
    60  001F                     _ADCON0bits	set	31
    61  001E                     _ADRESH	set	30
    62  0017                     _CCP1CON	set	23
    63  001D                     _CCP2CON	set	29
    64  0015                     _CCPR1L	set	21
    65  001B                     _CCPR2L	set	27
    66  0005                     _PORTA	set	5
    67  0005                     _PORTAbits	set	5
    68  0006                     _PORTB	set	6
    69  0006                     _PORTBbits	set	6
    70  0007                     _PORTC	set	7
    71  0007                     _PORTCbits	set	7
    72  0008                     _PORTD	set	8
    73  0008                     _PORTDbits	set	8
    74  0009                     _PORTE	set	9
    75  001A                     _RCREG	set	26
    76  0012                     _T2CON	set	18
    77  0012                     _T2CONbits	set	18
    78  0001                     _TMR0	set	1
    79  0019                     _TXREG	set	25
    80  00C3                     _ADDEN	set	195
    81  00C4                     _CREN	set	196
    82  00C2                     _FERR	set	194
    83  005F                     _GIE	set	95
    84  00C1                     _OERR	set	193
    85  005E                     _PEIE	set	94
    86  0065                     _RCIF	set	101
    87  00C6                     _RX9	set	198
    88  00C7                     _SPEN	set	199
    89  005D                     _T0IE	set	93
    90  005A                     _T0IF	set	90
    91  0064                     _TXIF	set	100
    92  009F                     _ADCON1bits	set	159
    93  009E                     _ADRESL	set	158
    94  0081                     _OPTION_REG	set	129
    95  008F                     _OSCCON	set	143
    96  008C                     _PIE1bits	set	140
    97  0092                     _PR2	set	146
    98  0099                     _SPBRG	set	153
    99  0085                     _TRISA	set	133
   100  0085                     _TRISAbits	set	133
   101  0086                     _TRISB	set	134
   102  0086                     _TRISBbits	set	134
   103  0087                     _TRISC	set	135
   104  0087                     _TRISCbits	set	135
   105  0088                     _TRISD	set	136
   106  0088                     _TRISDbits	set	136
   107  0089                     _TRISE	set	137
   108  04C2                     _BRGH	set	1218
   109  0465                     _RCIE	set	1125
   110  04C4                     _SYNC	set	1220
   111  04C6                     _TX9	set	1222
   112  04C5                     _TXEN	set	1221
   113  0464                     _TXIE	set	1124
   114  0107                     _CM1CON0	set	263
   115  0108                     _CM2CON0	set	264
   116  0105                     _WDTCON	set	261
   117  083F                     _C1ON	set	2111
   118  0847                     _C2ON	set	2119
   119  0188                     _ANSEL	set	392
   120  0189                     _ANSELH	set	393
   121  0188                     _ANSELbits	set	392
   122  0C3B                     _BRG16	set	3131
   123                           
   124                           	psect	nvBANK1
   125  00CE                     __pnvBANK1:	
   126  00CE                     _tim1sec:	
   127  00CE                     	ds	1
   128                           
   129                           	psect	cinit
   130  05E5                     start_initialization:	
   131  05E5  3050               	movlw	low __pbssBANK0
   132                           
   133                           ; Clear objects allocated to BITCOMMON
   134  05E6  01F9               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   135                           
   136                           ; Clear objects allocated to COMMON
   137  05E7  01F5               	clrf	__pbssCOMMON& (0+127)
   138  05E8  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   139  05E9  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   140  05EA  01F8               	clrf	(__pbssCOMMON+3)& (0+127)
   141                           
   142                           ; Clear objects allocated to BANK0
   143  05EB  1383               	bcf	3,7	;select IRP bank0
   144  05EC  0084               	movwf	4
   145  05ED  306D               	movlw	low (__pbssBANK0+29)
   146  05EE  120A  118A  264C   	fcall	clear_ram
      +       120A  118A         
   147                           
   148                           ; Clear objects allocated to BANK1
   149  05F3  30A0               	movlw	low __pbssBANK1
   150  05F4  0084               	movwf	4
   151  05F5  30CE               	movlw	low (__pbssBANK1+46)
   152  05F6  120A  118A  264C   	fcall	clear_ram
      +       120A  118A         
   153  05FB  3090               	movlw	low __pbssBANK3
   154                           
   155                           ; Clear objects allocated to BANK3
   156  05FC  1783               	bsf	3,7	;select IRP bank2
   157  05FD  0084               	movwf	4
   158  05FE  30CC               	movlw	low (__pbssBANK3+60)
   159  05FF  120A  118A  264C   	fcall	clear_ram
   160                           
   161                           ;initializer for _buffer_SM
   162  0602  3001               	movlw	1
   163  0603  00EF               	movwf	__pdataBANK0& (0+127)
   164                           
   165                           ;initializer for _debugModeStatus
   166  0604  3030               	movlw	48
   167  0605  00FA               	movwf	__pdataCOMMON& (0+127)
   168  0606                     end_of_initialization:	
   169                           ;End of C runtime variable initialization code
   170                           
   171  0606  0183               	clrf	3
   172  0607  120A  118A  2811   	ljmp	_main	;jump to C main() function
   173                           
   174                           	psect	bitbssCOMMON
   175  03C8                     __pbitbssCOMMON:	
   176  03C8                     _CONV:	
   177  03C8                     	ds	1
   178  03C9                     _conversionFinished:	
   179  03C9                     	ds	1
   180                           
   181                           	psect	bssCOMMON
   182  0075                     __pbssCOMMON:	
   183  0075                     _convert:	
   184  0075                     	ds	1
   185  0076                     _tim1min:	
   186  0076                     	ds	1
   187  0077                     _uartTransmitBufferR:	
   188  0077                     	ds	1
   189  0078                     _uartTransmitBufferW:	
   190  0078                     	ds	1
   191                           
   192                           	psect	dataCOMMON
   193  007A                     __pdataCOMMON:	
   194  007A                     _debugModeStatus:	
   195  007A                     	ds	1
   196                           
   197                           	psect	bssBANK0
   198  0050                     __pbssBANK0:	
   199  0050                     _printBuffer:	
   200  0050                     	ds	6
   201  0056                     _currentTemperature:	
   202  0056                     	ds	2
   203  0058                     _bufferValue:	
   204  0058                     	ds	1
   205  0059                     _currentCommand:	
   206  0059                     	ds	1
   207  005A                     _dataCounter:	
   208  005A                     	ds	1
   209  005B                     _debounceCounter:	
   210  005B                     	ds	1
   211  005C                     _oldTempLevel:	
   212  005C                     	ds	1
   213  005D                     _ondalik:	
   214  005D                     	ds	1
   215  005E                     _tam:	
   216  005E                     	ds	1
   217  005F                     _tempH:	
   218  005F                     	ds	1
   219  0060                     _tempL:	
   220  0060                     	ds	1
   221  0061                     _timerOverflow:	
   222  0061                     	ds	1
   223  0062                     _uartReceiveBufferR:	
   224  0062                     	ds	1
   225  0063                     _uartReceiveBufferW:	
   226  0063                     	ds	1
   227  0064                     _currentTemperatureBuffer:	
   228  0064                     	ds	6
   229  006A                     _commandBuffer:	
   230  006A                     	ds	3
   231                           
   232                           	psect	dataBANK0
   233  006F                     __pdataBANK0:	
   234  006F                     _buffer_SM:	
   235  006F                     	ds	1
   236                           
   237                           	psect	bssBANK1
   238  00A0                     __pbssBANK1:	
   239  00A0                     _uartTransmitBuffer:	
   240  00A0                     	ds	30
   241  00BE                     _dataBuffer:	
   242  00BE                     	ds	16
   243                           
   244                           	psect	bssBANK3
   245  0190                     __pbssBANK3:	
   246  0190                     _uartReceiveBuffer:	
   247  0190                     	ds	60
   248                           
   249                           	psect	clrtext
   250  064C                     clear_ram:	
   251                           ;	Called with FSR containing the base address, and
   252                           ;	W with the last address+1
   253                           
   254  064C  0064               	clrwdt	;clear the watchdog before getting into this loop
   255  064D                     clrloop:	
   256  064D  0180               	clrf	0	;clear RAM location pointed to by FSR
   257  064E  0A84               	incf	4,f	;increment pointer
   258  064F  0604               	xorwf	4,w	;XOR with final address
   259  0650  1903               	btfsc	3,2	;have we reached the end yet?
   260  0651  3400               	retlw	0	;all done for this memory range, return
   261  0652  0604               	xorwf	4,w	;XOR again to restore value
   262  0653  2E4D               	goto	clrloop	;do the next byte
   263                           
   264                           	psect	cstackCOMMON
   265  0070                     __pcstackCOMMON:	
   266  0070                     ?_vInitializeBoard:	
   267  0070                     ?_vInitializeVHN5019:	
   268                           ; 0 bytes @ 0x0
   269                           
   270  0070                     ?_vInitializeUart:	
   271                           ; 0 bytes @ 0x0
   272                           
   273  0070                     ?_putch:	
   274                           ; 0 bytes @ 0x0
   275                           
   276  0070                     ?_vCheckError:	
   277                           ; 0 bytes @ 0x0
   278                           
   279  0070                     ??_vCheckError:	
   280                           ; 0 bytes @ 0x0
   281                           
   282  0070                     ?_vAddToUartReceiveBuffer:	
   283                           ; 0 bytes @ 0x0
   284                           
   285  0070                     ??_vAddToUartReceiveBuffer:	
   286                           ; 0 bytes @ 0x0
   287                           
   288  0070                     ??_cGetFromTxBuffer:	
   289                           ; 0 bytes @ 0x0
   290                           
   291  0070                     ?_vInitializeADC:	
   292                           ; 0 bytes @ 0x0
   293                           
   294  0070                     ?_erdem:	
   295                           ; 0 bytes @ 0x0
   296                           
   297  0070                     ?_getTemperature:	
   298                           ; 0 bytes @ 0x0
   299                           
   300  0070                     ?_cGetFromReceiveBuffer:	
   301                           ; 1 bytes @ 0x0
   302                           
   303  0070                     ?_cGetFromTxBuffer:	
   304                           ; 1 bytes @ 0x0
   305                           
   306  0070                     ?_main:	
   307                           ; 1 bytes @ 0x0
   308                           
   309  0070                     vAddToUartReceiveBuffer@data:	
   310                           ; 2 bytes @ 0x0
   311                           
   312  0070                     cGetFromTxBuffer@value:	
   313                           ; 1 bytes @ 0x0
   314                           
   315                           
   316                           ; 1 bytes @ 0x0
   317  0070                     	ds	1
   318  0071                     ??_erdem:	
   319                           
   320                           ; 0 bytes @ 0x1
   321  0071                     	ds	3
   322  0074                     erdem@temp:	
   323                           
   324                           ; 1 bytes @ 0x4
   325  0074                     	ds	1
   326                           
   327                           	psect	cstackBANK0
   328  0020                     __pcstackBANK0:	
   329  0020                     ??_vInitializeBoard:	
   330  0020                     ??_vInitializeVHN5019:	
   331                           ; 0 bytes @ 0x0
   332                           
   333  0020                     ??_vInitializeUart:	
   334                           ; 0 bytes @ 0x0
   335                           
   336  0020                     ??_putch:	
   337                           ; 0 bytes @ 0x0
   338                           
   339  0020                     ??_cGetFromReceiveBuffer:	
   340                           ; 0 bytes @ 0x0
   341                           
   342  0020                     ??_vInitializeADC:	
   343                           ; 0 bytes @ 0x0
   344                           
   345  0020                     ?___bmul:	
   346                           ; 0 bytes @ 0x0
   347                           
   348  0020                     ?_read_ADC:	
   349                           ; 1 bytes @ 0x0
   350                           
   351  0020                     ?___lwdiv:	
   352                           ; 2 bytes @ 0x0
   353                           
   354  0020                     ?___lwmod:	
   355                           ; 2 bytes @ 0x0
   356                           
   357  0020                     ?___ftpack:	
   358                           ; 2 bytes @ 0x0
   359                           
   360  0020                     cGetFromReceiveBuffer@value:	
   361                           ; 3 bytes @ 0x0
   362                           
   363  0020                     putch@c:	
   364                           ; 1 bytes @ 0x0
   365                           
   366  0020                     ___bmul@multiplicand:	
   367                           ; 1 bytes @ 0x0
   368                           
   369  0020                     ___lwdiv@divisor:	
   370                           ; 1 bytes @ 0x0
   371                           
   372  0020                     ___lwmod@divisor:	
   373                           ; 2 bytes @ 0x0
   374                           
   375  0020                     ___ftpack@arg:	
   376                           ; 2 bytes @ 0x0
   377                           
   378                           
   379                           ; 3 bytes @ 0x0
   380  0020                     	ds	1
   381  0021                     ??___bmul:	
   382  0021                     ___bmul@product:	
   383                           ; 0 bytes @ 0x1
   384                           
   385                           
   386                           ; 1 bytes @ 0x1
   387  0021                     	ds	1
   388  0022                     ??_read_ADC:	
   389  0022                     ___bmul@multiplier:	
   390                           ; 0 bytes @ 0x2
   391                           
   392  0022                     ___lwdiv@dividend:	
   393                           ; 1 bytes @ 0x2
   394                           
   395  0022                     ___lwmod@dividend:	
   396                           ; 2 bytes @ 0x2
   397                           
   398                           
   399                           ; 2 bytes @ 0x2
   400  0022                     	ds	1
   401  0023                     read_ADC@analogChannel:	
   402  0023                     ___ftpack@exp:	
   403                           ; 1 bytes @ 0x3
   404                           
   405                           
   406                           ; 1 bytes @ 0x3
   407  0023                     	ds	1
   408  0024                     ??___lwdiv:	
   409  0024                     ??___lwmod:	
   410                           ; 0 bytes @ 0x4
   411                           
   412  0024                     ___lwdiv@counter:	
   413                           ; 0 bytes @ 0x4
   414                           
   415  0024                     ___lwmod@counter:	
   416                           ; 1 bytes @ 0x4
   417                           
   418  0024                     ___ftpack@sign:	
   419                           ; 1 bytes @ 0x4
   420                           
   421  0024                     read_ADC@adcResult:	
   422                           ; 1 bytes @ 0x4
   423                           
   424                           
   425                           ; 2 bytes @ 0x4
   426  0024                     	ds	1
   427  0025                     ??___ftpack:	
   428  0025                     ___lwdiv@quotient:	
   429                           ; 0 bytes @ 0x5
   430                           
   431                           
   432                           ; 2 bytes @ 0x5
   433  0025                     	ds	2
   434  0027                     ?_utoa:	
   435  0027                     utoa@val:	
   436                           ; 1 bytes @ 0x7
   437                           
   438                           
   439                           ; 2 bytes @ 0x7
   440  0027                     	ds	1
   441  0028                     ?___lwtoft:	
   442  0028                     ?___fttol:	
   443                           ; 3 bytes @ 0x8
   444                           
   445  0028                     ___lwtoft@c:	
   446                           ; 4 bytes @ 0x8
   447                           
   448  0028                     ___fttol@f1:	
   449                           ; 2 bytes @ 0x8
   450                           
   451                           
   452                           ; 3 bytes @ 0x8
   453  0028                     	ds	1
   454  0029                     utoa@base:	
   455                           
   456                           ; 2 bytes @ 0x9
   457  0029                     	ds	2
   458  002B                     ??_utoa:	
   459  002B                     ??___lwtoft:	
   460                           ; 0 bytes @ 0xB
   461                           
   462  002B                     ?___ftmul:	
   463                           ; 0 bytes @ 0xB
   464                           
   465  002B                     utoa@v:	
   466                           ; 3 bytes @ 0xB
   467                           
   468  002B                     ___ftmul@f1:	
   469                           ; 2 bytes @ 0xB
   470                           
   471                           
   472                           ; 3 bytes @ 0xB
   473  002B                     	ds	1
   474  002C                     ??___fttol:	
   475                           
   476                           ; 0 bytes @ 0xC
   477  002C                     	ds	1
   478  002D                     utoa@c:	
   479                           
   480                           ; 1 bytes @ 0xD
   481  002D                     	ds	1
   482  002E                     utoa@buf:	
   483  002E                     ___ftmul@f2:	
   484                           ; 1 bytes @ 0xE
   485                           
   486                           
   487                           ; 3 bytes @ 0xE
   488  002E                     	ds	1
   489  002F                     ?_itoa:	
   490  002F                     ___fttol@sign1:	
   491                           ; 1 bytes @ 0xF
   492                           
   493  002F                     itoa@val:	
   494                           ; 1 bytes @ 0xF
   495                           
   496                           
   497                           ; 2 bytes @ 0xF
   498  002F                     	ds	1
   499  0030                     ___fttol@lval:	
   500                           
   501                           ; 4 bytes @ 0x10
   502  0030                     	ds	1
   503  0031                     ??___ftmul:	
   504  0031                     itoa@base:	
   505                           ; 0 bytes @ 0x11
   506                           
   507                           
   508                           ; 2 bytes @ 0x11
   509  0031                     	ds	2
   510  0033                     ??_itoa:	
   511                           
   512                           ; 0 bytes @ 0x13
   513  0033                     	ds	1
   514  0034                     itoa@buf:	
   515  0034                     ___ftmul@exp:	
   516                           ; 1 bytes @ 0x14
   517                           
   518  0034                     ___fttol@exp1:	
   519                           ; 1 bytes @ 0x14
   520                           
   521                           
   522                           ; 1 bytes @ 0x14
   523  0034                     	ds	1
   524  0035                     ?___ftdiv:	
   525  0035                     ___ftdiv@f2:	
   526                           ; 3 bytes @ 0x15
   527                           
   528  0035                     ___ftmul@f3_as_product:	
   529                           ; 3 bytes @ 0x15
   530                           
   531                           
   532                           ; 3 bytes @ 0x15
   533  0035                     	ds	3
   534  0038                     ___ftmul@cntr:	
   535  0038                     ___ftdiv@f1:	
   536                           ; 1 bytes @ 0x18
   537                           
   538                           
   539                           ; 3 bytes @ 0x18
   540  0038                     	ds	1
   541  0039                     ___ftmul@sign:	
   542                           
   543                           ; 1 bytes @ 0x19
   544  0039                     	ds	2
   545  003B                     ??___ftdiv:	
   546                           
   547                           ; 0 bytes @ 0x1B
   548  003B                     	ds	3
   549  003E                     ___ftdiv@cntr:	
   550                           
   551                           ; 1 bytes @ 0x1E
   552  003E                     	ds	1
   553  003F                     ___ftdiv@f3:	
   554                           
   555                           ; 3 bytes @ 0x1F
   556  003F                     	ds	3
   557  0042                     ___ftdiv@exp:	
   558                           
   559                           ; 1 bytes @ 0x22
   560  0042                     	ds	1
   561  0043                     ___ftdiv@sign:	
   562                           
   563                           ; 1 bytes @ 0x23
   564  0043                     	ds	1
   565  0044                     ??_getTemperature:	
   566  0044                     getTemperature@milliVolt:	
   567                           ; 0 bytes @ 0x24
   568                           
   569                           
   570                           ; 3 bytes @ 0x24
   571  0044                     	ds	3
   572  0047                     getTemperature@iTempP:	
   573                           
   574                           ; 2 bytes @ 0x27
   575  0047                     	ds	2
   576  0049                     getTemperature@iTempN:	
   577                           
   578                           ; 2 bytes @ 0x29
   579  0049                     	ds	2
   580  004B                     getTemperature@m:	
   581                           
   582                           ; 1 bytes @ 0x2B
   583  004B                     	ds	1
   584  004C                     ??_main:	
   585                           
   586                           ; 0 bytes @ 0x2C
   587  004C                     	ds	3
   588  004F                     main@i:	
   589                           
   590                           ; 1 bytes @ 0x2F
   591  004F                     	ds	1
   592                           
   593                           	psect	maintext
   594  0011                     __pmaintext:	
   595 ;;Data sizes: Strings 0, constant 0, data 2, bss 139, persistent 3 stack 0
   596 ;;Auto spaces:   Size  Autos    Used
   597 ;; COMMON          14      5      11
   598 ;; BANK0           80     48      80
   599 ;; BANK1           80      0      47
   600 ;; BANK3           96      0      60
   601 ;; BANK2           96      0       0
   602 ;;
   603 ;; Pointer list with targets:
   604 ;; ?___ftpack	float  size(1) Largest target is 0
   605 ;;
   606 ;; ?___lwmod	unsigned int  size(1) Largest target is 0
   607 ;;
   608 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
   609 ;;
   610 ;; ?_utoa	PTR unsigned char  size(1) Largest target is 6
   611 ;;		 -> currentTemperatureBuffer(BANK0[6]), 
   612 ;;
   613 ;; ?___fttol	long  size(1) Largest target is 0
   614 ;;
   615 ;; ?___ftdiv	float  size(1) Largest target is 0
   616 ;;
   617 ;; ?___ftmul	float  size(1) Largest target is 0
   618 ;;
   619 ;; ?___lwtoft	float  size(1) Largest target is 0
   620 ;;
   621 ;; ?_itoa	PTR unsigned char  size(1) Largest target is 6
   622 ;;		 -> currentTemperatureBuffer(BANK0[6]), 
   623 ;;
   624 ;; ?_read_ADC	unsigned int  size(1) Largest target is 0
   625 ;;
   626 ;; utoa@buf	PTR unsigned char  size(1) Largest target is 6
   627 ;;		 -> currentTemperatureBuffer(BANK0[6]), 
   628 ;;
   629 ;; sp__utoa	PTR unsigned char  size(1) Largest target is 6
   630 ;;		 -> currentTemperatureBuffer(BANK0[6]), 
   631 ;;
   632 ;; itoa@buf	PTR unsigned char  size(1) Largest target is 6
   633 ;;		 -> currentTemperatureBuffer(BANK0[6]), 
   634 ;;
   635 ;; itoa@cp	PTR unsigned char  size(1) Largest target is 6
   636 ;;		 -> currentTemperatureBuffer(BANK0[6]), 
   637 ;;
   638 ;; sp__itoa	PTR unsigned char  size(1) Largest target is 6
   639 ;;		 -> currentTemperatureBuffer(BANK0[6]), 
   640 ;;
   641 ;;
   642 ;; Critical Paths under _main in COMMON
   643 ;;
   644 ;;   None.
   645 ;;
   646 ;; Critical Paths under _erdem in COMMON
   647 ;;
   648 ;;   _erdem->_vAddToUartReceiveBuffer
   649 ;;   _erdem->_cGetFromTxBuffer
   650 ;;
   651 ;; Critical Paths under _main in BANK0
   652 ;;
   653 ;;   _main->_getTemperature
   654 ;;   _itoa->_utoa
   655 ;;   _getTemperature->___ftdiv
   656 ;;   ___lwtoft->___ftpack
   657 ;;   ___ftmul->___lwtoft
   658 ;;   ___ftdiv->___fttol
   659 ;;   _utoa->___lwdiv
   660 ;;   ___fttol->___ftpack
   661 ;;
   662 ;; Critical Paths under _erdem in BANK0
   663 ;;
   664 ;;   None.
   665 ;;
   666 ;; Critical Paths under _main in BANK1
   667 ;;
   668 ;;   None.
   669 ;;
   670 ;; Critical Paths under _erdem in BANK1
   671 ;;
   672 ;;   None.
   673 ;;
   674 ;; Critical Paths under _main in BANK3
   675 ;;
   676 ;;   None.
   677 ;;
   678 ;; Critical Paths under _erdem in BANK3
   679 ;;
   680 ;;   None.
   681 ;;
   682 ;; Critical Paths under _main in BANK2
   683 ;;
   684 ;;   None.
   685 ;;
   686 ;; Critical Paths under _erdem in BANK2
   687 ;;
   688 ;;   None.
   689 ;;
   690 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   691 ;;
   692 ;;
   693 ;;Call Graph Tables:
   694 ;;
   695 ;; ---------------------------------------------------------------------------------
   696 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   697 ;; ---------------------------------------------------------------------------------
   698 ;; (0) _main                                                10    10      0    3475
   699 ;;                                             44 BANK0      4     4      0
   700 ;;                   _vInitializeBoard
   701 ;;                 _vInitializeVHN5019
   702 ;;                    _vInitializeUart
   703 ;;                     _vInitializeADC
   704 ;;                     _getTemperature
   705 ;;                               _itoa
   706 ;;                              _putch
   707 ;;              _cGetFromReceiveBuffer
   708 ;;                             ___bmul
   709 ;; ---------------------------------------------------------------------------------
   710 ;; (1) _itoa                                                 6     2      4    1143
   711 ;;                                             15 BANK0      6     2      4
   712 ;;                               _utoa
   713 ;; ---------------------------------------------------------------------------------
   714 ;; (1) _getTemperature                                       8     8      0    1874
   715 ;;                                             36 BANK0      8     8      0
   716 ;;                           _read_ADC
   717 ;;                           ___lwtoft
   718 ;;                            ___ftmul
   719 ;;                            ___ftdiv
   720 ;;                            ___fttol
   721 ;; ---------------------------------------------------------------------------------
   722 ;; (2) ___lwtoft                                             3     0      3     240
   723 ;;                                              8 BANK0      3     0      3
   724 ;;                           ___ftpack
   725 ;; ---------------------------------------------------------------------------------
   726 ;; (2) ___ftmul                                             15     9      6     535
   727 ;;                                             11 BANK0     15     9      6
   728 ;;                           ___ftpack
   729 ;;                           ___lwtoft (ARG)
   730 ;; ---------------------------------------------------------------------------------
   731 ;; (2) ___ftdiv                                             15     9      6     489
   732 ;;                                             21 BANK0     15     9      6
   733 ;;                           ___ftpack
   734 ;;                            ___fttol (ARG)
   735 ;; ---------------------------------------------------------------------------------
   736 ;; (2) _utoa                                                 8     4      4     910
   737 ;;                                              7 BANK0      8     4      4
   738 ;;                            ___lwdiv
   739 ;;                            ___lwmod
   740 ;; ---------------------------------------------------------------------------------
   741 ;; (1) _vInitializeVHN5019                                   2     2      0       0
   742 ;;                                              0 BANK0      2     2      0
   743 ;; ---------------------------------------------------------------------------------
   744 ;; (2) ___fttol                                             13     9      4     252
   745 ;;                                              8 BANK0     13     9      4
   746 ;;                           ___ftpack (ARG)
   747 ;; ---------------------------------------------------------------------------------
   748 ;; (3) ___ftpack                                             8     3      5     209
   749 ;;                                              0 BANK0      8     3      5
   750 ;; ---------------------------------------------------------------------------------
   751 ;; (3) ___lwmod                                              5     1      4     232
   752 ;;                                              0 BANK0      5     1      4
   753 ;; ---------------------------------------------------------------------------------
   754 ;; (3) ___lwdiv                                              7     3      4     241
   755 ;;                                              0 BANK0      7     3      4
   756 ;; ---------------------------------------------------------------------------------
   757 ;; (1) ___bmul                                               3     2      1     136
   758 ;;                                              0 BANK0      3     2      1
   759 ;; ---------------------------------------------------------------------------------
   760 ;; (1) _cGetFromReceiveBuffer                                1     1      0      34
   761 ;;                                              0 BANK0      1     1      0
   762 ;; ---------------------------------------------------------------------------------
   763 ;; (1) _putch                                                1     1      0      31
   764 ;;                                              0 BANK0      1     1      0
   765 ;; ---------------------------------------------------------------------------------
   766 ;; (1) _vInitializeUart                                      1     1      0     127
   767 ;;                                              0 BANK0      1     1      0
   768 ;; ---------------------------------------------------------------------------------
   769 ;; (1) _vInitializeBoard                                     0     0      0       0
   770 ;; ---------------------------------------------------------------------------------
   771 ;; (2) _read_ADC                                             6     4      2      74
   772 ;;                                              0 BANK0      6     4      2
   773 ;; ---------------------------------------------------------------------------------
   774 ;; (1) _vInitializeADC                                       0     0      0       0
   775 ;; ---------------------------------------------------------------------------------
   776 ;; Estimated maximum stack depth 3
   777 ;; ---------------------------------------------------------------------------------
   778 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   779 ;; ---------------------------------------------------------------------------------
   780 ;; (4) _erdem                                                6     6      0     114
   781 ;;                                              1 COMMON     4     4      0
   782 ;;                        _vCheckError
   783 ;;            _vAddToUartReceiveBuffer
   784 ;;                   _cGetFromTxBuffer
   785 ;; ---------------------------------------------------------------------------------
   786 ;; (5) _cGetFromTxBuffer                                     1     1      0      23
   787 ;;                                              0 COMMON     1     1      0
   788 ;; ---------------------------------------------------------------------------------
   789 ;; (5) _vAddToUartReceiveBuffer                              1     1      0      22
   790 ;;                                              0 COMMON     1     1      0
   791 ;; ---------------------------------------------------------------------------------
   792 ;; (5) _vCheckError                                          1     1      0       0
   793 ;; ---------------------------------------------------------------------------------
   794 ;; Estimated maximum stack depth 5
   795 ;; ---------------------------------------------------------------------------------
   796 ;; Call Graph Graphs:
   797 ;; _main (ROOT)
   798 ;;   _vInitializeBoard
   799 ;;   _vInitializeVHN5019
   800 ;;   _vInitializeUart
   801 ;;   _vInitializeADC
   802 ;;   _getTemperature
   803 ;;     _read_ADC
   804 ;;     ___lwtoft
   805 ;;       ___ftpack
   806 ;;     ___ftmul
   807 ;;       ___ftpack
   808 ;;       ___lwtoft (ARG)
   809 ;;         ___ftpack
   810 ;;     ___ftdiv
   811 ;;       ___ftpack
   812 ;;       ___fttol (ARG)
   813 ;;         ___ftpack (ARG)
   814 ;;     ___fttol
   815 ;;       ___ftpack (ARG)
   816 ;;   _itoa
   817 ;;     _utoa
   818 ;;       ___lwdiv
   819 ;;       ___lwmod
   820 ;;   _putch
   821 ;;   _cGetFromReceiveBuffer
   822 ;;   ___bmul
   823 ;;
   824 ;; _erdem (ROOT)
   825 ;;   _vCheckError
   826 ;;   _vAddToUartReceiveBuffer
   827 ;;   _cGetFromTxBuffer
   828 ;;
   829 ;; Address spaces:
   830 ;;Name               Size   Autos  Total    Cost      Usage
   831 ;;BANK3               60      0      3C       9       62.5%
   832 ;;BITBANK3            60      0       0       8        0.0%
   833 ;;SFR3                 0      0       0       4        0.0%
   834 ;;BITSFR3              0      0       0       4        0.0%
   835 ;;BANK2               60      0       0      11        0.0%
   836 ;;BITBANK2            60      0       0      10        0.0%
   837 ;;SFR2                 0      0       0       5        0.0%
   838 ;;BITSFR2              0      0       0       5        0.0%
   839 ;;SFR1                 0      0       0       2        0.0%
   840 ;;BITSFR1              0      0       0       2        0.0%
   841 ;;BANK1               50      0      2F       7       58.8%
   842 ;;BITBANK1            50      0       0       6        0.0%
   843 ;;CODE                 0      0       0       0        0.0%
   844 ;;DATA                 0      0      CD      12        0.0%
   845 ;;ABS                  0      0      C6       3        0.0%
   846 ;;NULL                 0      0       0       0        0.0%
   847 ;;STACK                0      0       7       2        0.0%
   848 ;;BANK0               50     30      50       5      100.0%
   849 ;;BITBANK0            50      0       0       4        0.0%
   850 ;;SFR0                 0      0       0       1        0.0%
   851 ;;BITSFR0              0      0       0       1        0.0%
   852 ;;COMMON               E      5       B       1       78.6%
   853 ;;BITCOMMON            E      0       1       0        7.1%
   854 ;;EEDATA             100      0       0       0        0.0%
   855                           
   856                           
   857 ;; *************** function _main *****************
   858 ;; Defined at:
   859 ;;		line 190 in file "../src/main.c"
   860 ;; Parameters:    Size  Location     Type
   861 ;;		None
   862 ;; Auto vars:     Size  Location     Type
   863 ;;  goster          6    0        unsigned char [6]
   864 ;;  i               1   47[BANK0 ] unsigned char 
   865 ;; Return value:  Size  Location     Type
   866 ;;                  2  2273[COMMON] int 
   867 ;; Registers used:
   868 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   869 ;; Tracked objects:
   870 ;;		On entry : 17F/0
   871 ;;		On exit  : 60/0
   872 ;;		Unchanged: 0/0
   873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   874 ;;      Params:         0       0       0       0       0
   875 ;;      Locals:         0       1       0       0       0
   876 ;;      Temps:          0       3       0       0       0
   877 ;;      Totals:         0       4       0       0       0
   878 ;;Total ram usage:        4 bytes
   879 ;; Hardware stack levels required when called:    5
   880 ;; This function calls:
   881 ;;		_vInitializeBoard
   882 ;;		_vInitializeVHN5019
   883 ;;		_vInitializeUart
   884 ;;		_vInitializeADC
   885 ;;		_getTemperature
   886 ;;		_itoa
   887 ;;		_putch
   888 ;;		_cGetFromReceiveBuffer
   889 ;;		___bmul
   890 ;; This function is called by:
   891 ;;		Startup code after reset
   892 ;; This function uses a non-reentrant model
   893 ;;
   894  0011                     _main:	
   895                           
   896                           ;main.c: 191: unsigned char i;
   897                           ;main.c: 192: unsigned char goster[6];
   898                           ;main.c: 193: vInitializeBoard();
   899                           
   900                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   901  0011  120A  118A  25B7   	fcall	_vInitializeBoard
      +       120A  118A         
   902                           
   903                           ;main.c: 194: vInitializeVHN5019();
   904  0016  120A  118A  257E   	fcall	_vInitializeVHN5019
      +       120A  118A         
   905                           
   906                           ;main.c: 195: vInitializeUart();
   907  001B  120A  118A  260A   	fcall	_vInitializeUart
      +       120A  118A         
   908                           
   909                           ;main.c: 196: vInitializeADC();
   910  0020  120A  118A  2621   	fcall	_vInitializeADC
      +       120A  118A         
   911                           
   912                           ;main.c: 198: PEIE = 1;
   913  0025  170B               	bsf	11,6
   914                           
   915                           ;main.c: 199: (GIE = 1);
   916  0026  178B               	bsf	11,7
   917                           
   918                           ;main.c: 200: uartTransmitBufferR = 0;
   919  0027  01F7               	clrf	_uartTransmitBufferR	;volatile
   920                           
   921                           ;main.c: 201: uartTransmitBufferW = 0;
   922  0028  01F8               	clrf	_uartTransmitBufferW	;volatile
   923                           
   924                           ;main.c: 202: uartReceiveBufferR = 0;
   925  0029  01E2               	clrf	_uartReceiveBufferR	;volatile
   926                           
   927                           ;main.c: 203: uartReceiveBufferW = 0;
   928  002A  01E3               	clrf	_uartReceiveBufferW	;volatile
   929                           
   930                           ;main.c: 204: currentTemperature = 0;
   931  002B  01D6               	clrf	_currentTemperature	;volatile
   932  002C  01D7               	clrf	_currentTemperature+1	;volatile
   933                           
   934                           ;main.c: 207: (PORTAbits.RA3) = 1;
   935  002D  1585               	bsf	5,3	;volatile
   936  002E                     l9029:	
   937  002E  0064               	clrwdt	;#
   938                           
   939                           ;main.c: 236: currentTemperature = getTemperature();
   940  002F  120A  118A  2236   	fcall	_getTemperature
      +       120A  118A         
   941  0034  00D6               	movwf	_currentTemperature	;volatile
   942  0035  01D7               	clrf	_currentTemperature+1	;volatile
   943                           
   944                           ;main.c: 240: itoa(currentTemperatureBuffer, currentTemperature, 10);
   945  0036  0857               	movf	_currentTemperature+1,w	;volatile
   946  0037  00B0               	movwf	?_itoa+1
   947  0038  0856               	movf	_currentTemperature,w	;volatile
   948  0039  00AF               	movwf	?_itoa
   949  003A  300A               	movlw	10
   950  003B  00B1               	movwf	?_itoa+2
   951  003C  3064               	movlw	_currentTemperatureBuffer& (0+255)
   952  003D  01B2               	clrf	?_itoa+3
   953  003E  120A  118A  2455   	fcall	_itoa
      +       120A  118A         
   954                           
   955                           ;main.c: 242: printBuffer[0] = '+';
   956  0043  302B               	movlw	43
   957  0044  00D0               	movwf	_printBuffer
   958                           
   959                           ;main.c: 243: printBuffer[1] = currentTemperatureBuffer[0];
   960  0045  0864               	movf	_currentTemperatureBuffer,w	;volatile
   961  0046  00D1               	movwf	_printBuffer+1
   962                           
   963                           ;main.c: 244: printBuffer[2] = currentTemperatureBuffer[1];
   964  0047  0865               	movf	_currentTemperatureBuffer+1,w	;volatile
   965  0048  00D2               	movwf	_printBuffer+2
   966                           
   967                           ;main.c: 245: printBuffer[3] = currentTemperatureBuffer[2];
   968  0049  0866               	movf	_currentTemperatureBuffer+2,w	;volatile
   969  004A  00D3               	movwf	_printBuffer+3
   970                           
   971                           ;main.c: 246: printBuffer[4] = 'C';
   972  004B  3043               	movlw	67
   973  004C  00D4               	movwf	_printBuffer+4
   974                           
   975                           ;main.c: 247: printBuffer[5] = '\0';
   976  004D  01D5               	clrf	_printBuffer+5
   977                           
   978                           ;main.c: 249: if(currentTemperature < 100)
   979  004E  0857               	movf	_currentTemperature+1,w	;volatile
   980  004F  3A80               	xorlw	128
   981  0050  00FF               	movwf	127
   982  0051  3080               	movlw	128
   983  0052  027F               	subwf	127,w
   984  0053  1D03               	skipz
   985  0054  2857               	goto	u1845
   986  0055  3064               	movlw	100
   987  0056  0256               	subwf	_currentTemperature,w	;volatile
   988  0057                     u1845:	
   989  0057  1803               	skipnc
   990  0058  2866               	goto	l9053
   991                           
   992                           ;main.c: 250: {
   993                           ;main.c: 251: printBuffer[0] = '+';
   994  0059  302B               	movlw	43
   995  005A  1283               	bcf	3,5	;RP0=0, select bank0
   996  005B  1303               	bcf	3,6	;RP1=0, select bank0
   997  005C  00D0               	movwf	_printBuffer
   998                           
   999                           ;main.c: 252: printBuffer[1] = '0';
  1000  005D  3030               	movlw	48
  1001  005E  00D1               	movwf	_printBuffer+1
  1002                           
  1003                           ;main.c: 253: printBuffer[2] = currentTemperatureBuffer[0];
  1004  005F  0864               	movf	_currentTemperatureBuffer,w	;volatile
  1005  0060  00D2               	movwf	_printBuffer+2
  1006                           
  1007                           ;main.c: 254: printBuffer[3] = currentTemperatureBuffer[1];
  1008  0061  0865               	movf	_currentTemperatureBuffer+1,w	;volatile
  1009  0062  00D3               	movwf	_printBuffer+3
  1010                           
  1011                           ;main.c: 255: printBuffer[4] = 'C';
  1012  0063  3043               	movlw	67
  1013  0064  00D4               	movwf	_printBuffer+4
  1014                           
  1015                           ;main.c: 256: printBuffer[5] = '\0';
  1016  0065  01D5               	clrf	_printBuffer+5
  1017  0066                     l9053:	
  1018                           
  1019                           ;main.c: 257: }
  1020                           ;main.c: 258: if(currentTemperature < 10)
  1021  0066  1283               	bcf	3,5	;RP0=0, select bank0
  1022  0067  1303               	bcf	3,6	;RP1=0, select bank0
  1023  0068  0857               	movf	_currentTemperature+1,w	;volatile
  1024  0069  3A80               	xorlw	128
  1025  006A  00FF               	movwf	127
  1026  006B  3080               	movlw	128
  1027  006C  027F               	subwf	127,w
  1028  006D  1D03               	skipz
  1029  006E  2871               	goto	u1855
  1030  006F  300A               	movlw	10
  1031  0070  0256               	subwf	_currentTemperature,w	;volatile
  1032  0071                     u1855:	
  1033  0071  1803               	skipnc
  1034  0072  287F               	goto	l9059
  1035                           
  1036                           ;main.c: 259: {
  1037                           ;main.c: 260: printBuffer[0] = '+';
  1038  0073  302B               	movlw	43
  1039  0074  1283               	bcf	3,5	;RP0=0, select bank0
  1040  0075  1303               	bcf	3,6	;RP1=0, select bank0
  1041  0076  00D0               	movwf	_printBuffer
  1042                           
  1043                           ;main.c: 261: printBuffer[1] = '0';
  1044  0077  3030               	movlw	48
  1045  0078  00D1               	movwf	_printBuffer+1
  1046                           
  1047                           ;main.c: 262: printBuffer[2] = '0';
  1048  0079  00D2               	movwf	_printBuffer+2
  1049                           
  1050                           ;main.c: 263: printBuffer[3] = currentTemperatureBuffer[0];
  1051  007A  0864               	movf	_currentTemperatureBuffer,w	;volatile
  1052  007B  00D3               	movwf	_printBuffer+3
  1053                           
  1054                           ;main.c: 264: printBuffer[4] = 'C';
  1055  007C  3043               	movlw	67
  1056  007D  00D4               	movwf	_printBuffer+4
  1057                           
  1058                           ;main.c: 265: printBuffer[5] = '\0';
  1059  007E  01D5               	clrf	_printBuffer+5
  1060  007F                     l9059:	
  1061                           
  1062                           ;main.c: 266: }
  1063                           ;main.c: 267: if(currentTemperature < 0)
  1064  007F  1283               	bcf	3,5	;RP0=0, select bank0
  1065  0080  1303               	bcf	3,6	;RP1=0, select bank0
  1066  0081  1FD7               	btfss	_currentTemperature+1,7	;volatile
  1067  0082  288E               	goto	l9065
  1068                           
  1069                           ;main.c: 268: {
  1070                           ;main.c: 269: printBuffer[0] = currentTemperatureBuffer[0];
  1071  0083  0864               	movf	_currentTemperatureBuffer,w	;volatile
  1072  0084  00D0               	movwf	_printBuffer
  1073                           
  1074                           ;main.c: 270: printBuffer[1] = '0';
  1075  0085  3030               	movlw	48
  1076  0086  00D1               	movwf	_printBuffer+1
  1077                           
  1078                           ;main.c: 271: printBuffer[2] = currentTemperatureBuffer[1];
  1079  0087  0865               	movf	_currentTemperatureBuffer+1,w	;volatile
  1080  0088  00D2               	movwf	_printBuffer+2
  1081                           
  1082                           ;main.c: 272: printBuffer[3] = currentTemperatureBuffer[2];
  1083  0089  0866               	movf	_currentTemperatureBuffer+2,w	;volatile
  1084  008A  00D3               	movwf	_printBuffer+3
  1085                           
  1086                           ;main.c: 273: printBuffer[4] = 'C';
  1087  008B  3043               	movlw	67
  1088  008C  00D4               	movwf	_printBuffer+4
  1089                           
  1090                           ;main.c: 274: printBuffer[5] = '\0';
  1091  008D  01D5               	clrf	_printBuffer+5
  1092  008E                     l9065:	
  1093                           
  1094                           ;main.c: 275: }
  1095                           ;main.c: 276: if( (currentTemperature > -10) && (currentTemperature < 0) )
  1096  008E  0857               	movf	_currentTemperature+1,w	;volatile
  1097  008F  3A80               	xorlw	128
  1098  0090  00FF               	movwf	127
  1099  0091  307F               	movlw	127
  1100  0092  027F               	subwf	127,w
  1101  0093  1D03               	skipz
  1102  0094  2897               	goto	u1875
  1103  0095  30F7               	movlw	247
  1104  0096  0256               	subwf	_currentTemperature,w	;volatile
  1105  0097                     u1875:	
  1106  0097  1C03               	skipc
  1107  0098  28A7               	goto	l9073
  1108  0099  1283               	bcf	3,5	;RP0=0, select bank0
  1109  009A  1303               	bcf	3,6	;RP1=0, select bank0
  1110  009B  1FD7               	btfss	_currentTemperature+1,7	;volatile
  1111  009C  28A7               	goto	l9073
  1112                           
  1113                           ;main.c: 277: {
  1114                           ;main.c: 278: printBuffer[0] = currentTemperatureBuffer[0];
  1115  009D  0864               	movf	_currentTemperatureBuffer,w	;volatile
  1116  009E  00D0               	movwf	_printBuffer
  1117                           
  1118                           ;main.c: 279: printBuffer[1] = '0';
  1119  009F  3030               	movlw	48
  1120  00A0  00D1               	movwf	_printBuffer+1
  1121                           
  1122                           ;main.c: 280: printBuffer[2] = '0';
  1123  00A1  00D2               	movwf	_printBuffer+2
  1124                           
  1125                           ;main.c: 281: printBuffer[3] = currentTemperatureBuffer[1];
  1126  00A2  0865               	movf	_currentTemperatureBuffer+1,w	;volatile
  1127  00A3  00D3               	movwf	_printBuffer+3
  1128                           
  1129                           ;main.c: 282: printBuffer[4] = 'C';
  1130  00A4  3043               	movlw	67
  1131  00A5  00D4               	movwf	_printBuffer+4
  1132                           
  1133                           ;main.c: 283: printBuffer[5] = '\0';
  1134  00A6  01D5               	clrf	_printBuffer+5
  1135  00A7                     l9073:	
  1136                           
  1137                           ;main.c: 284: }
  1138                           ;main.c: 286: for(i = 0; i<sizeof(printBuffer); i++)
  1139  00A7  1283               	bcf	3,5	;RP0=0, select bank0
  1140  00A8  1303               	bcf	3,6	;RP1=0, select bank0
  1141  00A9  01CF               	clrf	main@i
  1142  00AA                     l9077:	
  1143                           
  1144                           ;main.c: 287: {
  1145                           ;main.c: 288: if(printBuffer[i]=='\0') break;
  1146  00AA  084F               	movf	main@i,w
  1147  00AB  3E50               	addlw	_printBuffer& (0+255)
  1148  00AC  0084               	movwf	4
  1149  00AD  1383               	bcf	3,7	;select IRP bank0
  1150  00AE  0880               	movf	0,f
  1151  00AF  1903               	btfsc	3,2
  1152  00B0  28BF               	goto	l9087
  1153                           
  1154                           ;main.c: 289: putch(printBuffer[i]);
  1155  00B1  084F               	movf	main@i,w
  1156  00B2  3E50               	addlw	_printBuffer& (0+255)
  1157  00B3  0084               	movwf	4
  1158  00B4  0800               	movf	0,w
  1159  00B5  120A  118A  2654   	fcall	_putch
      +       120A  118A         
  1160  00BA  3006               	movlw	6
  1161  00BB  0ACF               	incf	main@i,f
  1162  00BC  024F               	subwf	main@i,w
  1163  00BD  1C03               	skipc
  1164  00BE  28AA               	goto	l9077
  1165  00BF                     l9087:	
  1166                           
  1167                           ;main.c: 290: }
  1168                           ;main.c: 296: _delay((unsigned long)((50)*(20000000/4000.0)));
  1169  00BF  3002               	movlw	2
  1170  00C0  00CE               	movwf	??_main+2
  1171  00C1  3045               	movlw	69
  1172  00C2  00CD               	movwf	??_main+1
  1173  00C3  30A9               	movlw	169
  1174  00C4  00CC               	movwf	??_main
  1175  00C5                     u2007:	
  1176  00C5  0BCC               	decfsz	??_main,f
  1177  00C6  28C5               	goto	u2007
  1178  00C7  0BCD               	decfsz	??_main+1,f
  1179  00C8  28C5               	goto	u2007
  1180  00C9  0BCE               	decfsz	??_main+2,f
  1181  00CA  28C5               	goto	u2007
  1182  00CB  28CC               	nop2
  1183                           
  1184                           ;main.c: 297: _delay((unsigned long)((50)*(20000000/4000.0)));
  1185  00CC  3002               	movlw	2
  1186  00CD  1283               	bcf	3,5	;RP0=0, select bank0
  1187  00CE  1303               	bcf	3,6	;RP1=0, select bank0
  1188  00CF  00CE               	movwf	??_main+2
  1189  00D0  3045               	movlw	69
  1190  00D1  00CD               	movwf	??_main+1
  1191  00D2  30A9               	movlw	169
  1192  00D3  00CC               	movwf	??_main
  1193  00D4                     u2017:	
  1194  00D4  0BCC               	decfsz	??_main,f
  1195  00D5  28D4               	goto	u2017
  1196  00D6  0BCD               	decfsz	??_main+1,f
  1197  00D7  28D4               	goto	u2017
  1198  00D8  0BCE               	decfsz	??_main+2,f
  1199  00D9  28D4               	goto	u2017
  1200  00DA  28DB               	nop2
  1201                           
  1202                           ;main.c: 298: _delay((unsigned long)((50)*(20000000/4000.0)));
  1203  00DB  3002               	movlw	2
  1204  00DC  1283               	bcf	3,5	;RP0=0, select bank0
  1205  00DD  1303               	bcf	3,6	;RP1=0, select bank0
  1206  00DE  00CE               	movwf	??_main+2
  1207  00DF  3045               	movlw	69
  1208  00E0  00CD               	movwf	??_main+1
  1209  00E1  30A9               	movlw	169
  1210  00E2  00CC               	movwf	??_main
  1211  00E3                     u2027:	
  1212  00E3  0BCC               	decfsz	??_main,f
  1213  00E4  28E3               	goto	u2027
  1214  00E5  0BCD               	decfsz	??_main+1,f
  1215  00E6  28E3               	goto	u2027
  1216  00E7  0BCE               	decfsz	??_main+2,f
  1217  00E8  28E3               	goto	u2027
  1218  00E9  28EA               	nop2
  1219                           
  1220                           ;main.c: 299: _delay((unsigned long)((50)*(20000000/4000.0)));
  1221  00EA  3002               	movlw	2
  1222  00EB  1283               	bcf	3,5	;RP0=0, select bank0
  1223  00EC  1303               	bcf	3,6	;RP1=0, select bank0
  1224  00ED  00CE               	movwf	??_main+2
  1225  00EE  3045               	movlw	69
  1226  00EF  00CD               	movwf	??_main+1
  1227  00F0  30A9               	movlw	169
  1228  00F1  00CC               	movwf	??_main
  1229  00F2                     u2037:	
  1230  00F2  0BCC               	decfsz	??_main,f
  1231  00F3  28F2               	goto	u2037
  1232  00F4  0BCD               	decfsz	??_main+1,f
  1233  00F5  28F2               	goto	u2037
  1234  00F6  0BCE               	decfsz	??_main+2,f
  1235  00F7  28F2               	goto	u2037
  1236  00F8  28F9               	nop2
  1237                           
  1238                           ;main.c: 300: _delay((unsigned long)((50)*(20000000/4000.0)));
  1239  00F9  3002               	movlw	2
  1240  00FA  1283               	bcf	3,5	;RP0=0, select bank0
  1241  00FB  1303               	bcf	3,6	;RP1=0, select bank0
  1242  00FC  00CE               	movwf	??_main+2
  1243  00FD  3045               	movlw	69
  1244  00FE  00CD               	movwf	??_main+1
  1245  00FF  30A9               	movlw	169
  1246  0100  00CC               	movwf	??_main
  1247  0101                     u2047:	
  1248  0101  0BCC               	decfsz	??_main,f
  1249  0102  2901               	goto	u2047
  1250  0103  0BCD               	decfsz	??_main+1,f
  1251  0104  2901               	goto	u2047
  1252  0105  0BCE               	decfsz	??_main+2,f
  1253  0106  2901               	goto	u2047
  1254  0107  2908               	nop2
  1255                           
  1256                           ;main.c: 301: _delay((unsigned long)((50)*(20000000/4000.0)));
  1257  0108  3002               	movlw	2
  1258  0109  1283               	bcf	3,5	;RP0=0, select bank0
  1259  010A  1303               	bcf	3,6	;RP1=0, select bank0
  1260  010B  00CE               	movwf	??_main+2
  1261  010C  3045               	movlw	69
  1262  010D  00CD               	movwf	??_main+1
  1263  010E  30A9               	movlw	169
  1264  010F  00CC               	movwf	??_main
  1265  0110                     u2057:	
  1266  0110  0BCC               	decfsz	??_main,f
  1267  0111  2910               	goto	u2057
  1268  0112  0BCD               	decfsz	??_main+1,f
  1269  0113  2910               	goto	u2057
  1270  0114  0BCE               	decfsz	??_main+2,f
  1271  0115  2910               	goto	u2057
  1272  0116  2917               	nop2
  1273                           
  1274                           ;main.c: 302: _delay((unsigned long)((50)*(20000000/4000.0)));
  1275  0117  3002               	movlw	2
  1276  0118  1283               	bcf	3,5	;RP0=0, select bank0
  1277  0119  1303               	bcf	3,6	;RP1=0, select bank0
  1278  011A  00CE               	movwf	??_main+2
  1279  011B  3045               	movlw	69
  1280  011C  00CD               	movwf	??_main+1
  1281  011D  30A9               	movlw	169
  1282  011E  00CC               	movwf	??_main
  1283  011F                     u2067:	
  1284  011F  0BCC               	decfsz	??_main,f
  1285  0120  291F               	goto	u2067
  1286  0121  0BCD               	decfsz	??_main+1,f
  1287  0122  291F               	goto	u2067
  1288  0123  0BCE               	decfsz	??_main+2,f
  1289  0124  291F               	goto	u2067
  1290  0125  2926               	nop2
  1291                           
  1292                           ;main.c: 303: _delay((unsigned long)((50)*(20000000/4000.0)));
  1293  0126  3002               	movlw	2
  1294  0127  1283               	bcf	3,5	;RP0=0, select bank0
  1295  0128  1303               	bcf	3,6	;RP1=0, select bank0
  1296  0129  00CE               	movwf	??_main+2
  1297  012A  3045               	movlw	69
  1298  012B  00CD               	movwf	??_main+1
  1299  012C  30A9               	movlw	169
  1300  012D  00CC               	movwf	??_main
  1301  012E                     u2077:	
  1302  012E  0BCC               	decfsz	??_main,f
  1303  012F  292E               	goto	u2077
  1304  0130  0BCD               	decfsz	??_main+1,f
  1305  0131  292E               	goto	u2077
  1306  0132  0BCE               	decfsz	??_main+2,f
  1307  0133  292E               	goto	u2077
  1308  0134  2935               	nop2
  1309  0135  0064               	clrwdt	;#
  1310                           
  1311                           ;main.c: 306: _delay((unsigned long)((50)*(20000000/4000.0)));
  1312  0136  3002               	movlw	2
  1313  0137  1283               	bcf	3,5	;RP0=0, select bank0
  1314  0138  1303               	bcf	3,6	;RP1=0, select bank0
  1315  0139  00CE               	movwf	??_main+2
  1316  013A  3045               	movlw	69
  1317  013B  00CD               	movwf	??_main+1
  1318  013C  30A9               	movlw	169
  1319  013D  00CC               	movwf	??_main
  1320  013E                     u2087:	
  1321  013E  0BCC               	decfsz	??_main,f
  1322  013F  293E               	goto	u2087
  1323  0140  0BCD               	decfsz	??_main+1,f
  1324  0141  293E               	goto	u2087
  1325  0142  0BCE               	decfsz	??_main+2,f
  1326  0143  293E               	goto	u2087
  1327  0144  2945               	nop2
  1328                           
  1329                           ;main.c: 307: _delay((unsigned long)((50)*(20000000/4000.0)));
  1330  0145  3002               	movlw	2
  1331  0146  1283               	bcf	3,5	;RP0=0, select bank0
  1332  0147  1303               	bcf	3,6	;RP1=0, select bank0
  1333  0148  00CE               	movwf	??_main+2
  1334  0149  3045               	movlw	69
  1335  014A  00CD               	movwf	??_main+1
  1336  014B  30A9               	movlw	169
  1337  014C  00CC               	movwf	??_main
  1338  014D                     u2097:	
  1339  014D  0BCC               	decfsz	??_main,f
  1340  014E  294D               	goto	u2097
  1341  014F  0BCD               	decfsz	??_main+1,f
  1342  0150  294D               	goto	u2097
  1343  0151  0BCE               	decfsz	??_main+2,f
  1344  0152  294D               	goto	u2097
  1345  0153  2954               	nop2
  1346                           
  1347                           ;main.c: 308: _delay((unsigned long)((50)*(20000000/4000.0)));
  1348  0154  3002               	movlw	2
  1349  0155  1283               	bcf	3,5	;RP0=0, select bank0
  1350  0156  1303               	bcf	3,6	;RP1=0, select bank0
  1351  0157  00CE               	movwf	??_main+2
  1352  0158  3045               	movlw	69
  1353  0159  00CD               	movwf	??_main+1
  1354  015A  30A9               	movlw	169
  1355  015B  00CC               	movwf	??_main
  1356  015C                     u2107:	
  1357  015C  0BCC               	decfsz	??_main,f
  1358  015D  295C               	goto	u2107
  1359  015E  0BCD               	decfsz	??_main+1,f
  1360  015F  295C               	goto	u2107
  1361  0160  0BCE               	decfsz	??_main+2,f
  1362  0161  295C               	goto	u2107
  1363  0162  2963               	nop2
  1364                           
  1365                           ;main.c: 309: _delay((unsigned long)((50)*(20000000/4000.0)));
  1366  0163  3002               	movlw	2
  1367  0164  1283               	bcf	3,5	;RP0=0, select bank0
  1368  0165  1303               	bcf	3,6	;RP1=0, select bank0
  1369  0166  00CE               	movwf	??_main+2
  1370  0167  3045               	movlw	69
  1371  0168  00CD               	movwf	??_main+1
  1372  0169  30A9               	movlw	169
  1373  016A  00CC               	movwf	??_main
  1374  016B                     u2117:	
  1375  016B  0BCC               	decfsz	??_main,f
  1376  016C  296B               	goto	u2117
  1377  016D  0BCD               	decfsz	??_main+1,f
  1378  016E  296B               	goto	u2117
  1379  016F  0BCE               	decfsz	??_main+2,f
  1380  0170  296B               	goto	u2117
  1381  0171  2972               	nop2
  1382                           
  1383                           ;main.c: 310: _delay((unsigned long)((50)*(20000000/4000.0)));
  1384  0172  3002               	movlw	2
  1385  0173  1283               	bcf	3,5	;RP0=0, select bank0
  1386  0174  1303               	bcf	3,6	;RP1=0, select bank0
  1387  0175  00CE               	movwf	??_main+2
  1388  0176  3045               	movlw	69
  1389  0177  00CD               	movwf	??_main+1
  1390  0178  30A9               	movlw	169
  1391  0179  00CC               	movwf	??_main
  1392  017A                     u2127:	
  1393  017A  0BCC               	decfsz	??_main,f
  1394  017B  297A               	goto	u2127
  1395  017C  0BCD               	decfsz	??_main+1,f
  1396  017D  297A               	goto	u2127
  1397  017E  0BCE               	decfsz	??_main+2,f
  1398  017F  297A               	goto	u2127
  1399  0180  2981               	nop2
  1400                           
  1401                           ;main.c: 311: _delay((unsigned long)((50)*(20000000/4000.0)));
  1402  0181  3002               	movlw	2
  1403  0182  1283               	bcf	3,5	;RP0=0, select bank0
  1404  0183  1303               	bcf	3,6	;RP1=0, select bank0
  1405  0184  00CE               	movwf	??_main+2
  1406  0185  3045               	movlw	69
  1407  0186  00CD               	movwf	??_main+1
  1408  0187  30A9               	movlw	169
  1409  0188  00CC               	movwf	??_main
  1410  0189                     u2137:	
  1411  0189  0BCC               	decfsz	??_main,f
  1412  018A  2989               	goto	u2137
  1413  018B  0BCD               	decfsz	??_main+1,f
  1414  018C  2989               	goto	u2137
  1415  018D  0BCE               	decfsz	??_main+2,f
  1416  018E  2989               	goto	u2137
  1417  018F  2990               	nop2
  1418                           
  1419                           ;main.c: 312: _delay((unsigned long)((50)*(20000000/4000.0)));
  1420  0190  3002               	movlw	2
  1421  0191  1283               	bcf	3,5	;RP0=0, select bank0
  1422  0192  1303               	bcf	3,6	;RP1=0, select bank0
  1423  0193  00CE               	movwf	??_main+2
  1424  0194  3045               	movlw	69
  1425  0195  00CD               	movwf	??_main+1
  1426  0196  30A9               	movlw	169
  1427  0197  00CC               	movwf	??_main
  1428  0198                     u2147:	
  1429  0198  0BCC               	decfsz	??_main,f
  1430  0199  2998               	goto	u2147
  1431  019A  0BCD               	decfsz	??_main+1,f
  1432  019B  2998               	goto	u2147
  1433  019C  0BCE               	decfsz	??_main+2,f
  1434  019D  2998               	goto	u2147
  1435  019E  299F               	nop2
  1436                           
  1437                           ;main.c: 313: _delay((unsigned long)((50)*(20000000/4000.0)));
  1438  019F  3002               	movlw	2
  1439  01A0  1283               	bcf	3,5	;RP0=0, select bank0
  1440  01A1  1303               	bcf	3,6	;RP1=0, select bank0
  1441  01A2  00CE               	movwf	??_main+2
  1442  01A3  3045               	movlw	69
  1443  01A4  00CD               	movwf	??_main+1
  1444  01A5  30A9               	movlw	169
  1445  01A6  00CC               	movwf	??_main
  1446  01A7                     u2157:	
  1447  01A7  0BCC               	decfsz	??_main,f
  1448  01A8  29A7               	goto	u2157
  1449  01A9  0BCD               	decfsz	??_main+1,f
  1450  01AA  29A7               	goto	u2157
  1451  01AB  0BCE               	decfsz	??_main+2,f
  1452  01AC  29A7               	goto	u2157
  1453  01AD  29AE               	nop2
  1454                           
  1455                           ;main.c: 336: if(uartReceiveBufferW != uartReceiveBufferR)
  1456  01AE  1283               	bcf	3,5	;RP0=0, select bank0
  1457  01AF  1303               	bcf	3,6	;RP1=0, select bank0
  1458  01B0  0863               	movf	_uartReceiveBufferW,w	;volatile
  1459  01B1  0662               	xorwf	_uartReceiveBufferR,w	;volatile
  1460  01B2  1903               	skipnz
  1461  01B3  282E               	goto	l9029
  1462                           
  1463                           ;main.c: 337: {
  1464                           ;main.c: 338: bufferValue = cGetFromReceiveBuffer();
  1465  01B4  120A  118A  263F   	fcall	_cGetFromReceiveBuffer
      +       120A  118A         
  1466  01B9  00D8               	movwf	_bufferValue
  1467                           
  1468                           ;main.c: 340: if(bufferValue == 0x02)
  1469  01BA  3A02               	xorlw	2
  1470  01BB  1D03               	skipz
  1471  01BC  29C1               	goto	l9099
  1472                           
  1473                           ;main.c: 341: {
  1474                           ;main.c: 342: buffer_SM = 2;
  1475  01BD  3002               	movlw	2
  1476  01BE                     L1:	
  1477  01BE  00EF               	movwf	_buffer_SM	;volatile
  1478                           
  1479                           ;main.c: 343: dataCounter = 0;
  1480  01BF  01DA               	clrf	_dataCounter
  1481                           
  1482                           ;main.c: 344: }
  1483  01C0  29EB               	goto	l9123
  1484  01C1                     l9099:	
  1485                           
  1486                           ;main.c: 345: else if(buffer_SM == 2)
  1487  01C1  086F               	movf	_buffer_SM,w	;volatile
  1488  01C2  3A02               	xorlw	2
  1489  01C3  1D03               	skipz
  1490  01C4  29D2               	goto	l9111
  1491                           
  1492                           ;main.c: 346: {
  1493                           ;main.c: 347: commandBuffer[dataCounter] = bufferValue;
  1494  01C5  085A               	movf	_dataCounter,w
  1495  01C6  3E6A               	addlw	_commandBuffer& (0+255)
  1496  01C7  0084               	movwf	4
  1497  01C8  0858               	movf	_bufferValue,w
  1498  01C9  1383               	bcf	3,7	;select IRP bank0
  1499  01CA  0080               	movwf	0
  1500                           
  1501                           ;main.c: 348: dataCounter++;
  1502  01CB  0ADA               	incf	_dataCounter,f
  1503                           
  1504                           ;main.c: 350: if(dataCounter == 3)
  1505  01CC  085A               	movf	_dataCounter,w
  1506  01CD  3A03               	xorlw	3
  1507  01CE  1D03               	skipz
  1508  01CF  29EB               	goto	l9123
  1509                           
  1510                           ;main.c: 351: {
  1511                           ;main.c: 352: buffer_SM = 3;
  1512  01D0  3003               	movlw	3
  1513  01D1  29BE               	goto	L1
  1514  01D2                     l9111:	
  1515                           
  1516                           ;main.c: 357: else if(buffer_SM == 3)
  1517  01D2  086F               	movf	_buffer_SM,w	;volatile
  1518  01D3  3A03               	xorlw	3
  1519  01D4  1D03               	skipz
  1520  01D5  29EB               	goto	l9123
  1521                           
  1522                           ;main.c: 358: {
  1523                           ;main.c: 359: if(dataCounter < 16)
  1524  01D6  3010               	movlw	16
  1525  01D7  025A               	subwf	_dataCounter,w
  1526  01D8  1803               	skipnc
  1527  01D9  29E9               	goto	l2289
  1528                           
  1529                           ;main.c: 360: {
  1530                           ;main.c: 361: if(bufferValue == 0x03)
  1531  01DA  0858               	movf	_bufferValue,w
  1532  01DB  3A03               	xorlw	3
  1533  01DC  1D03               	skipz
  1534  01DD  29E1               	goto	l9119
  1535                           
  1536                           ;main.c: 362: {
  1537                           ;main.c: 363: buffer_SM = 5;
  1538  01DE  3005               	movlw	5
  1539  01DF  00EF               	movwf	_buffer_SM	;volatile
  1540                           
  1541                           ;main.c: 364: }
  1542  01E0  29E7               	goto	l9121
  1543  01E1                     l9119:	
  1544                           
  1545                           ;main.c: 365: else
  1546                           ;main.c: 366: {
  1547                           ;main.c: 367: dataBuffer[dataCounter] = bufferValue;
  1548  01E1  085A               	movf	_dataCounter,w
  1549  01E2  3EBE               	addlw	_dataBuffer& (0+255)
  1550  01E3  0084               	movwf	4
  1551  01E4  0858               	movf	_bufferValue,w
  1552  01E5  1383               	bcf	3,7	;select IRP bank1
  1553  01E6  0080               	movwf	0
  1554  01E7                     l9121:	
  1555                           
  1556                           ;main.c: 368: }
  1557                           ;main.c: 369: dataCounter++;
  1558  01E7  0ADA               	incf	_dataCounter,f
  1559                           
  1560                           ;main.c: 370: }
  1561  01E8  29EB               	goto	l9123
  1562  01E9                     l2289:	
  1563                           
  1564                           ;main.c: 371: else
  1565                           ;main.c: 372: {
  1566                           ;main.c: 373: buffer_SM = 1;
  1567  01E9  01EF               	clrf	_buffer_SM	;volatile
  1568  01EA  0AEF               	incf	_buffer_SM,f	;volatile
  1569  01EB                     l9123:	
  1570                           
  1571                           ;main.c: 374: }
  1572                           ;main.c: 375: }
  1573                           ;main.c: 376: if(buffer_SM == 5)
  1574  01EB  086F               	movf	_buffer_SM,w	;volatile
  1575  01EC  3A05               	xorlw	5
  1576  01ED  1D03               	skipz
  1577  01EE  282E               	goto	l9029
  1578                           
  1579                           ;main.c: 377: {
  1580                           ;main.c: 378: if(commandBuffer[0] == 'C')
  1581  01EF  086A               	movf	_commandBuffer,w
  1582  01F0  3A43               	xorlw	67
  1583  01F1  1D03               	skipz
  1584  01F2  2A33               	goto	l2297
  1585                           
  1586                           ;main.c: 379: {
  1587                           ;main.c: 380: currentCommand = (commandBuffer[1]-48) * 10;
  1588  01F3  300A               	movlw	10
  1589  01F4  00A0               	movwf	?___bmul
  1590  01F5  086B               	movf	_commandBuffer+1,w
  1591  01F6  3ED0               	addlw	208
  1592  01F7  120A  118A  2631   	fcall	___bmul
      +       120A  118A         
  1593  01FC  00D9               	movwf	_currentCommand
  1594                           
  1595                           ;main.c: 381: currentCommand += (commandBuffer[2]-48);
  1596  01FD  086C               	movf	_commandBuffer+2,w
  1597  01FE  3ED0               	addlw	208
  1598  01FF  07D9               	addwf	_currentCommand,f
  1599                           
  1600                           ;main.c: 382: switch(currentCommand)
  1601  0200  2A28               	goto	l9137
  1602  0201                     l2296:	
  1603                           ;main.c: 383: {
  1604                           ;main.c: 384: case 1:
  1605                           
  1606                           
  1607                           ;main.c: 385: (PORTAbits.RA4) = 1;
  1608  0201  1605               	bsf	5,4	;volatile
  1609                           
  1610                           ;main.c: 386: putch(tempH);
  1611  0202  085F               	movf	_tempH,w	;volatile
  1612  0203  120A  118A  2654   	fcall	_putch
      +       120A  118A         
  1613                           
  1614                           ;main.c: 388: break;
  1615  0208  2A33               	goto	l2297
  1616  0209                     l2298:	
  1617                           ;main.c: 389: case 2:
  1618                           
  1619                           
  1620                           ;main.c: 390: (PORTAbits.RA4) = 0;
  1621  0209  1205               	bcf	5,4	;volatile
  1622                           
  1623                           ;main.c: 392: break;
  1624  020A  2A33               	goto	l2297
  1625  020B                     l9133:	
  1626                           
  1627                           ;main.c: 394: putch(dataBuffer[0]);
  1628  020B  1683               	bsf	3,5	;RP0=1, select bank1
  1629  020C  083E               	movf	_dataBuffer^(0+128),w
  1630  020D  120A  118A  2654   	fcall	_putch
      +       120A  118A         
  1631                           
  1632                           ;main.c: 395: putch(dataBuffer[1]);
  1633  0212  1683               	bsf	3,5	;RP0=1, select bank1
  1634  0213  083F               	movf	(_dataBuffer^(0+128)+1),w
  1635  0214  120A  118A  2654   	fcall	_putch
      +       120A  118A         
  1636                           
  1637                           ;main.c: 396: putch(dataBuffer[2]);
  1638  0219  1683               	bsf	3,5	;RP0=1, select bank1
  1639  021A  0840               	movf	(_dataBuffer^(0+128)+2),w
  1640  021B  120A  118A  2654   	fcall	_putch
      +       120A  118A         
  1641                           
  1642                           ;main.c: 397: putch(dataBuffer[3]);
  1643  0220  1683               	bsf	3,5	;RP0=1, select bank1
  1644  0221  0841               	movf	(_dataBuffer^(0+128)+3),w
  1645  0222  120A  118A  2654   	fcall	_putch
      +       120A  118A         
  1646                           
  1647                           ;main.c: 398: break;
  1648  0227  2A33               	goto	l2297
  1649  0228                     l9137:	
  1650  0228  0859               	movf	_currentCommand,w
  1651                           
  1652                           ; Switch size 1, requested type "space"
  1653                           ; Number of cases is 3, Range of values is 1 to 3
  1654                           ; switch strategies available:
  1655                           ; Name         Instructions Cycles
  1656                           ; simple_byte           10     6 (average)
  1657                           ; direct_byte           20    11 (fixed)
  1658                           ; jumptable            263     9 (fixed)
  1659                           ;	Chosen strategy is simple_byte
  1660  0229  3A01               	xorlw	1	; case 1
  1661  022A  1903               	skipnz
  1662  022B  2A01               	goto	l2296
  1663  022C  3A03               	xorlw	3	; case 2
  1664  022D  1903               	skipnz
  1665  022E  2A09               	goto	l2298
  1666  022F  3A01               	xorlw	1	; case 3
  1667  0230  1903               	skipnz
  1668  0231  2A0B               	goto	l9133
  1669  0232  2A33               	goto	l2297
  1670  0233                     l2297:	
  1671                           
  1672                           ;main.c: 401: buffer_SM = 1;
  1673  0233  01EF               	clrf	_buffer_SM	;volatile
  1674  0234  0AEF               	incf	_buffer_SM,f	;volatile
  1675                           
  1676                           ;main.c: 402: }
  1677  0235  282E               	goto	l9029
  1678  0236                     __end_of_main:	
  1679                           
  1680                           	psect	text662
  1681  0455                     __ptext662:	
  1682 ;; =============== function _main ends ============
  1683                           
  1684                           
  1685 ;; *************** function _itoa *****************
  1686 ;; Defined at:
  1687 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\itoa.c"
  1688 ;; Parameters:    Size  Location     Type
  1689 ;;  buf             1    wreg     PTR unsigned char 
  1690 ;;		 -> currentTemperatureBuffer(6), 
  1691 ;;  val             2   15[BANK0 ] int 
  1692 ;;  base            2   17[BANK0 ] int 
  1693 ;; Auto vars:     Size  Location     Type
  1694 ;;  buf             1   20[BANK0 ] PTR unsigned char 
  1695 ;;		 -> currentTemperatureBuffer(6), 
  1696 ;;  cp              1    0        PTR unsigned char 
  1697 ;;		 -> currentTemperatureBuffer(6), 
  1698 ;; Return value:  Size  Location     Type
  1699 ;;                  1    wreg      PTR unsigned char 
  1700 ;; Registers used:
  1701 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1702 ;; Tracked objects:
  1703 ;;		On entry : 60/0
  1704 ;;		On exit  : 160/0
  1705 ;;		Unchanged: FFE9F/0
  1706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1707 ;;      Params:         0       4       0       0       0
  1708 ;;      Locals:         0       2       0       0       0
  1709 ;;      Temps:          0       0       0       0       0
  1710 ;;      Totals:         0       6       0       0       0
  1711 ;;Total ram usage:        6 bytes
  1712 ;; Hardware stack levels used:    1
  1713 ;; Hardware stack levels required when called:    4
  1714 ;; This function calls:
  1715 ;;		_utoa
  1716 ;; This function is called by:
  1717 ;;		_main
  1718 ;; This function uses a non-reentrant model
  1719 ;;
  1720  0455                     _itoa:	
  1721                           
  1722                           ; Regs used in _itoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1723                           ;itoa@buf stored from wreg
  1724  0455  00B4               	movwf	itoa@buf
  1725  0456  1FB0               	btfss	itoa@val+1,7
  1726  0457  2C63               	goto	l9005
  1727  0458  0834               	movf	itoa@buf,w
  1728  0459  0084               	movwf	4
  1729  045A  302D               	movlw	45
  1730  045B  1383               	bcf	3,7	;select IRP bank0
  1731  045C  0080               	movwf	0
  1732  045D  0AB4               	incf	itoa@buf,f
  1733  045E  09AF               	comf	itoa@val,f
  1734  045F  09B0               	comf	itoa@val+1,f
  1735  0460  0AAF               	incf	itoa@val,f
  1736  0461  1903               	skipnz
  1737  0462  0AB0               	incf	itoa@val+1,f
  1738  0463                     l9005:	
  1739  0463  0830               	movf	itoa@val+1,w
  1740  0464  00A8               	movwf	?_utoa+1
  1741  0465  082F               	movf	itoa@val,w
  1742  0466  00A7               	movwf	?_utoa
  1743  0467  0832               	movf	itoa@base+1,w
  1744  0468  00AA               	movwf	?_utoa+3
  1745  0469  0831               	movf	itoa@base,w
  1746  046A  00A9               	movwf	?_utoa+2
  1747  046B  0834               	movf	itoa@buf,w
  1748  046C  2C6D               	ljmp	_utoa
  1749  046D                     __end_of_itoa:	
  1750  046D                     __ptext667:	
  1751 ;; =============== function ___ftdiv ends ============
  1752                           
  1753                           
  1754 ;; *************** function _utoa *****************
  1755 ;; Defined at:
  1756 ;;		line 18 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\itoa.c"
  1757 ;; Parameters:    Size  Location     Type
  1758 ;;  buf             1    wreg     PTR unsigned char 
  1759 ;;		 -> currentTemperatureBuffer(6), 
  1760 ;;  val             2    7[BANK0 ] unsigned int 
  1761 ;;  base            2    9[BANK0 ] int 
  1762 ;; Auto vars:     Size  Location     Type
  1763 ;;  buf             1   14[BANK0 ] PTR unsigned char 
  1764 ;;		 -> currentTemperatureBuffer(6), 
  1765 ;;  v               2   11[BANK0 ] unsigned int 
  1766 ;;  c               1   13[BANK0 ] unsigned char 
  1767 ;; Return value:  Size  Location     Type
  1768 ;;                  1    wreg      PTR unsigned char 
  1769 ;; Registers used:
  1770 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1771 ;; Tracked objects:
  1772 ;;		On entry : 60/0
  1773 ;;		On exit  : 160/0
  1774 ;;		Unchanged: FFE9F/0
  1775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1776 ;;      Params:         0       4       0       0       0
  1777 ;;      Locals:         0       4       0       0       0
  1778 ;;      Temps:          0       0       0       0       0
  1779 ;;      Totals:         0       8       0       0       0
  1780 ;;Total ram usage:        8 bytes
  1781 ;; Hardware stack levels used:    1
  1782 ;; Hardware stack levels required when called:    3
  1783 ;; This function calls:
  1784 ;;		___lwdiv
  1785 ;;		___lwmod
  1786 ;; This function is called by:
  1787 ;;		_itoa
  1788 ;; This function uses a non-reentrant model
  1789 ;;
  1790  046D                     _utoa:	
  1791                           
  1792                           ; Regs used in _utoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1793                           ;utoa@buf stored from wreg
  1794  046D  00AE               	movwf	utoa@buf
  1795  046E  0828               	movf	utoa@val+1,w
  1796  046F  00AC               	movwf	utoa@v+1
  1797  0470  0827               	movf	utoa@val,w
  1798  0471  00AB               	movwf	utoa@v
  1799  0472                     l8933:	
  1800  0472  082A               	movf	utoa@base+1,w
  1801  0473  00A1               	movwf	?___lwdiv+1
  1802  0474  0829               	movf	utoa@base,w
  1803  0475  00A0               	movwf	?___lwdiv
  1804  0476  082C               	movf	utoa@v+1,w
  1805  0477  00A3               	movwf	?___lwdiv+3
  1806  0478  082B               	movf	utoa@v,w
  1807  0479  00A2               	movwf	?___lwdiv+2
  1808  047A  24B8  120A  118A   	fcall	___lwdiv
  1809  047D  0821               	movf	?___lwdiv+1,w
  1810  047E  00AC               	movwf	utoa@v+1
  1811  047F  0820               	movf	?___lwdiv,w
  1812  0480  00AB               	movwf	utoa@v
  1813  0481  0AAE               	incf	utoa@buf,f
  1814  0482  042C               	iorwf	utoa@v+1,w
  1815  0483  1D03               	skipz
  1816  0484  2C72               	goto	l8933
  1817  0485  082E               	movf	utoa@buf,w
  1818  0486  0084               	movwf	4
  1819  0487  1383               	bcf	3,7	;select IRP bank0
  1820  0488  0180               	clrf	0
  1821  0489  03AE               	decf	utoa@buf,f
  1822  048A                     l8943:	
  1823  048A  082A               	movf	utoa@base+1,w
  1824  048B  00A1               	movwf	?___lwmod+1
  1825  048C  0829               	movf	utoa@base,w
  1826  048D  00A0               	movwf	?___lwmod
  1827  048E  0828               	movf	utoa@val+1,w
  1828  048F  00A3               	movwf	?___lwmod+3
  1829  0490  0827               	movf	utoa@val,w
  1830  0491  00A2               	movwf	?___lwmod+2
  1831  0492  24E2  120A  118A   	fcall	___lwmod
  1832  0495  0820               	movf	?___lwmod,w
  1833  0496  00AD               	movwf	utoa@c
  1834  0497  082A               	movf	utoa@base+1,w
  1835  0498  00A1               	movwf	?___lwdiv+1
  1836  0499  0829               	movf	utoa@base,w
  1837  049A  00A0               	movwf	?___lwdiv
  1838  049B  0828               	movf	utoa@val+1,w
  1839  049C  00A3               	movwf	?___lwdiv+3
  1840  049D  0827               	movf	utoa@val,w
  1841  049E  00A2               	movwf	?___lwdiv+2
  1842  049F  24B8  120A  118A   	fcall	___lwdiv
  1843  04A2  0821               	movf	?___lwdiv+1,w
  1844  04A3  00A8               	movwf	utoa@val+1
  1845  04A4  0820               	movf	?___lwdiv,w
  1846  04A5  00A7               	movwf	utoa@val
  1847  04A6  300A               	movlw	10
  1848  04A7  022D               	subwf	utoa@c,w
  1849  04A8  1C03               	skipc
  1850  04A9  2CAC               	goto	l6896
  1851  04AA  3007               	movlw	7
  1852  04AB  07AD               	addwf	utoa@c,f
  1853  04AC                     l6896:	
  1854  04AC  3030               	movlw	48
  1855  04AD  07AD               	addwf	utoa@c,f
  1856  04AE  082E               	movf	utoa@buf,w
  1857  04AF  0084               	movwf	4
  1858  04B0  082D               	movf	utoa@c,w
  1859  04B1  0080               	movwf	0
  1860  04B2  03AE               	decf	utoa@buf,f
  1861  04B3  0828               	movf	utoa@val+1,w
  1862  04B4  0427               	iorwf	utoa@val,w
  1863  04B5  1903               	btfsc	3,2
  1864  04B6  0008               	return
  1865  04B7  2C8A               	goto	l8943
  1866  04B8                     __end_of_utoa:	
  1867  04B8                     __ptext672:	
  1868 ;; =============== function ___lwmod ends ============
  1869                           
  1870                           
  1871 ;; *************** function ___lwdiv *****************
  1872 ;; Defined at:
  1873 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
  1874 ;; Parameters:    Size  Location     Type
  1875 ;;  divisor         2    0[BANK0 ] unsigned int 
  1876 ;;  dividend        2    2[BANK0 ] unsigned int 
  1877 ;; Auto vars:     Size  Location     Type
  1878 ;;  quotient        2    5[BANK0 ] unsigned int 
  1879 ;;  counter         1    4[BANK0 ] unsigned char 
  1880 ;; Return value:  Size  Location     Type
  1881 ;;                  2    0[BANK0 ] unsigned int 
  1882 ;; Registers used:
  1883 ;;		wreg, status,2, status,0
  1884 ;; Tracked objects:
  1885 ;;		On entry : 60/0
  1886 ;;		On exit  : 60/0
  1887 ;;		Unchanged: FFF9F/0
  1888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1889 ;;      Params:         0       4       0       0       0
  1890 ;;      Locals:         0       3       0       0       0
  1891 ;;      Temps:          0       0       0       0       0
  1892 ;;      Totals:         0       7       0       0       0
  1893 ;;Total ram usage:        7 bytes
  1894 ;; Hardware stack levels used:    1
  1895 ;; Hardware stack levels required when called:    2
  1896 ;; This function calls:
  1897 ;;		Nothing
  1898 ;; This function is called by:
  1899 ;;		_utoa
  1900 ;; This function uses a non-reentrant model
  1901 ;;
  1902  04B8                     ___lwdiv:	
  1903                           
  1904                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1905  04B8  01A5               	clrf	___lwdiv@quotient
  1906  04B9  01A6               	clrf	___lwdiv@quotient+1
  1907  04BA  0821               	movf	___lwdiv@divisor+1,w
  1908  04BB  0420               	iorwf	___lwdiv@divisor,w
  1909  04BC  1903               	skipnz
  1910  04BD  2CDD               	goto	l8895
  1911  04BE  01A4               	clrf	___lwdiv@counter
  1912  04BF                     L5:	
  1913  04BF  0AA4               	incf	___lwdiv@counter,f
  1914  04C0  1BA1               	btfsc	___lwdiv@divisor+1,7
  1915  04C1  2CC6               	goto	l8883
  1916  04C2  1003               	clrc
  1917  04C3  0DA0               	rlf	___lwdiv@divisor,f
  1918  04C4  0DA1               	rlf	___lwdiv@divisor+1,f
  1919  04C5  2CBF               	goto	L5
  1920  04C6                     l8883:	
  1921  04C6  1003               	clrc
  1922  04C7  0DA5               	rlf	___lwdiv@quotient,f
  1923  04C8  0DA6               	rlf	___lwdiv@quotient+1,f
  1924  04C9  0821               	movf	___lwdiv@divisor+1,w
  1925  04CA  0223               	subwf	___lwdiv@dividend+1,w
  1926  04CB  1D03               	skipz
  1927  04CC  2CCF               	goto	u1725
  1928  04CD  0820               	movf	___lwdiv@divisor,w
  1929  04CE  0222               	subwf	___lwdiv@dividend,w
  1930  04CF                     u1725:	
  1931  04CF  1C03               	skipc
  1932  04D0  2CD9               	goto	L6
  1933  04D1  0820               	movf	___lwdiv@divisor,w
  1934  04D2  02A2               	subwf	___lwdiv@dividend,f
  1935  04D3  0821               	movf	___lwdiv@divisor+1,w
  1936  04D4  1C03               	skipc
  1937  04D5  03A3               	decf	___lwdiv@dividend+1,f
  1938  04D6  02A3               	subwf	___lwdiv@dividend+1,f
  1939  04D7  1425               	bsf	___lwdiv@quotient,0
  1940  04D8  1003               	clrc
  1941  04D9                     L6:	
  1942  04D9  0CA1               	rrf	___lwdiv@divisor+1,f
  1943  04DA  0CA0               	rrf	___lwdiv@divisor,f
  1944  04DB  0BA4               	decfsz	___lwdiv@counter,f
  1945  04DC  2CC6               	goto	l8883
  1946  04DD                     l8895:	
  1947  04DD  0826               	movf	___lwdiv@quotient+1,w
  1948  04DE  00A1               	movwf	?___lwdiv+1
  1949  04DF  0825               	movf	___lwdiv@quotient,w
  1950  04E0  00A0               	movwf	?___lwdiv
  1951  04E1  0008               	return
  1952  04E2                     __end_of___lwdiv:	
  1953  04E2                     __ptext671:	
  1954 ;; =============== function ___ftpack ends ============
  1955                           
  1956                           
  1957 ;; *************** function ___lwmod *****************
  1958 ;; Defined at:
  1959 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  1960 ;; Parameters:    Size  Location     Type
  1961 ;;  divisor         2    0[BANK0 ] unsigned int 
  1962 ;;  dividend        2    2[BANK0 ] unsigned int 
  1963 ;; Auto vars:     Size  Location     Type
  1964 ;;  counter         1    4[BANK0 ] unsigned char 
  1965 ;; Return value:  Size  Location     Type
  1966 ;;                  2    0[BANK0 ] unsigned int 
  1967 ;; Registers used:
  1968 ;;		wreg, status,2, status,0
  1969 ;; Tracked objects:
  1970 ;;		On entry : 60/0
  1971 ;;		On exit  : 160/0
  1972 ;;		Unchanged: FFE9F/0
  1973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1974 ;;      Params:         0       4       0       0       0
  1975 ;;      Locals:         0       1       0       0       0
  1976 ;;      Temps:          0       0       0       0       0
  1977 ;;      Totals:         0       5       0       0       0
  1978 ;;Total ram usage:        5 bytes
  1979 ;; Hardware stack levels used:    1
  1980 ;; Hardware stack levels required when called:    2
  1981 ;; This function calls:
  1982 ;;		Nothing
  1983 ;; This function is called by:
  1984 ;;		_utoa
  1985 ;; This function uses a non-reentrant model
  1986 ;;
  1987  04E2                     ___lwmod:	
  1988                           
  1989                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1990  04E2  0821               	movf	___lwmod@divisor+1,w
  1991  04E3  0420               	iorwf	___lwmod@divisor,w
  1992  04E4  1903               	skipnz
  1993  04E5  2D01               	goto	l8915
  1994  04E6  01A4               	clrf	___lwmod@counter
  1995  04E7                     L3:	
  1996  04E7  0AA4               	incf	___lwmod@counter,f
  1997  04E8  1BA1               	btfsc	___lwmod@divisor+1,7
  1998  04E9  2CEE               	goto	l8907
  1999  04EA  1003               	clrc
  2000  04EB  0DA0               	rlf	___lwmod@divisor,f
  2001  04EC  0DA1               	rlf	___lwmod@divisor+1,f
  2002  04ED  2CE7               	goto	L3
  2003  04EE                     l8907:	
  2004  04EE  0821               	movf	___lwmod@divisor+1,w
  2005  04EF  0223               	subwf	___lwmod@dividend+1,w
  2006  04F0  1D03               	skipz
  2007  04F1  2CF4               	goto	u1765
  2008  04F2  0820               	movf	___lwmod@divisor,w
  2009  04F3  0222               	subwf	___lwmod@dividend,w
  2010  04F4                     u1765:	
  2011  04F4  1C03               	skipc
  2012  04F5  2CFD               	goto	L4
  2013  04F6  0820               	movf	___lwmod@divisor,w
  2014  04F7  02A2               	subwf	___lwmod@dividend,f
  2015  04F8  0821               	movf	___lwmod@divisor+1,w
  2016  04F9  1C03               	skipc
  2017  04FA  03A3               	decf	___lwmod@dividend+1,f
  2018  04FB  02A3               	subwf	___lwmod@dividend+1,f
  2019  04FC  1003               	clrc
  2020  04FD                     L4:	
  2021  04FD  0CA1               	rrf	___lwmod@divisor+1,f
  2022  04FE  0CA0               	rrf	___lwmod@divisor,f
  2023  04FF  0BA4               	decfsz	___lwmod@counter,f
  2024  0500  2CEE               	goto	l8907
  2025  0501                     l8915:	
  2026  0501  0823               	movf	___lwmod@dividend+1,w
  2027  0502  00A1               	movwf	?___lwmod+1
  2028  0503  0822               	movf	___lwmod@dividend,w
  2029  0504  00A0               	movwf	?___lwmod
  2030  0505  0008               	return
  2031  0506                     __end_of___lwmod:	
  2032                           
  2033                           	psect	text663
  2034  0236                     __ptext663:	
  2035 ;; =============== function _itoa ends ============
  2036                           
  2037                           
  2038 ;; *************** function _getTemperature *****************
  2039 ;; Defined at:
  2040 ;;		line 670 in file "../src/main.c"
  2041 ;; Parameters:    Size  Location     Type
  2042 ;;		None
  2043 ;; Auto vars:     Size  Location     Type
  2044 ;;  milliVolt       3   36[BANK0 ] float 
  2045 ;;  iTempN          2   41[BANK0 ] unsigned int 
  2046 ;;  iTempP          2   39[BANK0 ] unsigned int 
  2047 ;;  m               1   43[BANK0 ] unsigned char 
  2048 ;; Return value:  Size  Location     Type
  2049 ;;                  1    wreg      unsigned char 
  2050 ;; Registers used:
  2051 ;;		wreg, status,2, status,0, pclath, cstack
  2052 ;; Tracked objects:
  2053 ;;		On entry : 0/0
  2054 ;;		On exit  : 60/0
  2055 ;;		Unchanged: FFF9F/0
  2056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2057 ;;      Params:         0       0       0       0       0
  2058 ;;      Locals:         0       8       0       0       0
  2059 ;;      Temps:          0       0       0       0       0
  2060 ;;      Totals:         0       8       0       0       0
  2061 ;;Total ram usage:        8 bytes
  2062 ;; Hardware stack levels used:    1
  2063 ;; Hardware stack levels required when called:    4
  2064 ;; This function calls:
  2065 ;;		_read_ADC
  2066 ;;		___lwtoft
  2067 ;;		___ftmul
  2068 ;;		___ftdiv
  2069 ;;		___fttol
  2070 ;; This function is called by:
  2071 ;;		_main
  2072 ;; This function uses a non-reentrant model
  2073 ;;
  2074  0236                     _getTemperature:	
  2075                           
  2076                           ;main.c: 671: unsigned int iTempP, iTempN;
  2077                           ;main.c: 672: float milliVolt;
  2078                           ;main.c: 673: unsigned char m;
  2079                           ;main.c: 675: iTempP = 0;
  2080                           
  2081                           ; Regs used in _getTemperature: [wreg+status,2+status,0+pclath+cstack]
  2082  0236  1283               	bcf	3,5	;RP0=0, select bank0
  2083  0237  1303               	bcf	3,6	;RP1=0, select bank0
  2084  0238  01C7               	clrf	getTemperature@iTempP
  2085  0239  01C8               	clrf	getTemperature@iTempP+1
  2086                           
  2087                           ;main.c: 676: for(m=0; m<16; m++)
  2088  023A  01CB               	clrf	getTemperature@m
  2089  023B                     l8967:	
  2090                           
  2091                           ;main.c: 677: {
  2092                           ;main.c: 678: iTempP += read_ADC((0));
  2093  023B  3000               	movlw	0
  2094  023C  22A8  120A  118A   	fcall	_read_ADC
  2095  023F  0820               	movf	?_read_ADC,w
  2096  0240  07C7               	addwf	getTemperature@iTempP,f
  2097  0241  1803               	skipnc
  2098  0242  0AC8               	incf	getTemperature@iTempP+1,f
  2099  0243  0821               	movf	?_read_ADC+1,w
  2100  0244  07C8               	addwf	getTemperature@iTempP+1,f
  2101  0245  3010               	movlw	16
  2102  0246  0ACB               	incf	getTemperature@m,f
  2103  0247  024B               	subwf	getTemperature@m,w
  2104  0248  1C03               	skipc
  2105  0249  2A3B               	goto	l8967
  2106  024A  300F               	movlw	15
  2107                           
  2108                           ;main.c: 679: }
  2109                           ;main.c: 680: iTempP /= 16;
  2110  024B  0EC7               	swapf	getTemperature@iTempP,f
  2111  024C  0EC8               	swapf	getTemperature@iTempP+1,f
  2112  024D  05C7               	andwf	getTemperature@iTempP,f
  2113  024E  0848               	movf	getTemperature@iTempP+1,w
  2114  024F  39F0               	andlw	240
  2115  0250  04C7               	iorwf	getTemperature@iTempP,f
  2116  0251  300F               	movlw	15
  2117  0252  05C8               	andwf	getTemperature@iTempP+1,f
  2118                           
  2119                           ;main.c: 682: iTempN = 0;
  2120  0253  01C9               	clrf	getTemperature@iTempN
  2121  0254  01CA               	clrf	getTemperature@iTempN+1
  2122                           
  2123                           ;main.c: 683: for(m=0; m<16; m++)
  2124  0255  01CB               	clrf	getTemperature@m
  2125  0256                     l8981:	
  2126                           
  2127                           ;main.c: 684: {
  2128                           ;main.c: 685: iTempN += read_ADC((1));
  2129  0256  3001               	movlw	1
  2130  0257  22A8  120A  118A   	fcall	_read_ADC
  2131  025A  0820               	movf	?_read_ADC,w
  2132  025B  07C9               	addwf	getTemperature@iTempN,f
  2133  025C  1803               	skipnc
  2134  025D  0ACA               	incf	getTemperature@iTempN+1,f
  2135  025E  0821               	movf	?_read_ADC+1,w
  2136  025F  07CA               	addwf	getTemperature@iTempN+1,f
  2137  0260  3010               	movlw	16
  2138  0261  0ACB               	incf	getTemperature@m,f
  2139  0262  024B               	subwf	getTemperature@m,w
  2140  0263  1C03               	skipc
  2141  0264  2A56               	goto	l8981
  2142  0265  300F               	movlw	15
  2143                           
  2144                           ;main.c: 686: }
  2145                           ;main.c: 687: iTempN /= 16;
  2146  0266  0EC9               	swapf	getTemperature@iTempN,f
  2147  0267  0ECA               	swapf	getTemperature@iTempN+1,f
  2148  0268  05C9               	andwf	getTemperature@iTempN,f
  2149  0269  084A               	movf	getTemperature@iTempN+1,w
  2150  026A  39F0               	andlw	240
  2151  026B  04C9               	iorwf	getTemperature@iTempN,f
  2152  026C  300F               	movlw	15
  2153  026D  05CA               	andwf	getTemperature@iTempN+1,f
  2154                           
  2155                           ;main.c: 689: milliVolt = (iTempP - iTempN) * a;
  2156  026E  3040               	movlw	64
  2157  026F  00AB               	movwf	?___ftmul
  2158  0270  309C               	movlw	156
  2159  0271  00AC               	movwf	?___ftmul+1
  2160  0272  3040               	movlw	64
  2161  0273  00AD               	movwf	?___ftmul+2
  2162  0274  0848               	movf	getTemperature@iTempP+1,w
  2163  0275  00A9               	movwf	?___lwtoft+1
  2164  0276  0847               	movf	getTemperature@iTempP,w
  2165  0277  00A8               	movwf	?___lwtoft
  2166  0278  0849               	movf	getTemperature@iTempN,w
  2167  0279  02A8               	subwf	?___lwtoft,f
  2168  027A  084A               	movf	getTemperature@iTempN+1,w
  2169  027B  1C03               	skipc
  2170  027C  03A9               	decf	?___lwtoft+1,f
  2171  027D  02A9               	subwf	?___lwtoft+1,f
  2172  027E  23D9  120A  118A   	fcall	___lwtoft
  2173  0281  0828               	movf	?___lwtoft,w
  2174  0282  00AE               	movwf	?___ftmul+3
  2175  0283  0829               	movf	?___lwtoft+1,w
  2176  0284  00AF               	movwf	?___ftmul+4
  2177  0285  082A               	movf	?___lwtoft+2,w
  2178  0286  00B0               	movwf	?___ftmul+5
  2179  0287  232C  120A  118A   	fcall	___ftmul
  2180  028A  082B               	movf	?___ftmul,w
  2181  028B  00C4               	movwf	getTemperature@milliVolt
  2182  028C  082C               	movf	?___ftmul+1,w
  2183  028D  00C5               	movwf	getTemperature@milliVolt+1
  2184  028E  082D               	movf	?___ftmul+2,w
  2185  028F  00C6               	movwf	getTemperature@milliVolt+2
  2186                           
  2187                           ;main.c: 690: m = milliVolt / 10.0;
  2188  0290  0844               	movf	getTemperature@milliVolt,w
  2189  0291  00B8               	movwf	?___ftdiv+3
  2190  0292  0845               	movf	getTemperature@milliVolt+1,w
  2191  0293  00B9               	movwf	?___ftdiv+4
  2192  0294  0846               	movf	getTemperature@milliVolt+2,w
  2193  0295  00BA               	movwf	?___ftdiv+5
  2194  0296  3020               	movlw	32
  2195  0297  01B5               	clrf	?___ftdiv
  2196  0298  00B6               	movwf	?___ftdiv+1
  2197  0299  3041               	movlw	65
  2198  029A  00B7               	movwf	?___ftdiv+2
  2199  029B  22C4  120A  118A   	fcall	___ftdiv
  2200  029E  0835               	movf	?___ftdiv,w
  2201  029F  00A8               	movwf	?___fttol
  2202  02A0  0836               	movf	?___ftdiv+1,w
  2203  02A1  00A9               	movwf	?___fttol+1
  2204  02A2  0837               	movf	?___ftdiv+2,w
  2205  02A3  00AA               	movwf	?___fttol+2
  2206  02A4  23E9               	fcall	___fttol
  2207  02A5  0828               	movf	?___fttol,w
  2208  02A6  00CB               	movwf	getTemperature@m
  2209                           
  2210                           ;main.c: 691: return m;
  2211  02A7  0008               	return
  2212  02A8                     __end_of_getTemperature:	
  2213  02A8                     __ptext678:	
  2214 ;; =============== function _vInitializeBoard ends ============
  2215                           
  2216                           
  2217 ;; *************** function _read_ADC *****************
  2218 ;; Defined at:
  2219 ;;		line 69 in file "../src/adc.c"
  2220 ;; Parameters:    Size  Location     Type
  2221 ;;  analogChanne    1    wreg     unsigned char 
  2222 ;; Auto vars:     Size  Location     Type
  2223 ;;  analogChanne    1    3[BANK0 ] unsigned char 
  2224 ;;  adcResult       2    4[BANK0 ] unsigned int 
  2225 ;; Return value:  Size  Location     Type
  2226 ;;                  2    0[BANK0 ] unsigned int 
  2227 ;; Registers used:
  2228 ;;		wreg, status,2, status,0
  2229 ;; Tracked objects:
  2230 ;;		On entry : 0/0
  2231 ;;		On exit  : 60/0
  2232 ;;		Unchanged: FFF9F/0
  2233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2234 ;;      Params:         0       2       0       0       0
  2235 ;;      Locals:         0       3       0       0       0
  2236 ;;      Temps:          0       1       0       0       0
  2237 ;;      Totals:         0       6       0       0       0
  2238 ;;Total ram usage:        6 bytes
  2239 ;; Hardware stack levels used:    1
  2240 ;; Hardware stack levels required when called:    2
  2241 ;; This function calls:
  2242 ;;		Nothing
  2243 ;; This function is called by:
  2244 ;;		_getTemperature
  2245 ;; This function uses a non-reentrant model
  2246 ;;
  2247  02A8                     _read_ADC:	
  2248                           
  2249                           ; Regs used in _read_ADC: [wreg+status,2+status,0]
  2250                           ;read_ADC@analogChannel stored from wreg
  2251  02A8  1283               	bcf	3,5	;RP0=0, select bank0
  2252  02A9  1303               	bcf	3,6	;RP1=0, select bank0
  2253  02AA  00A3               	movwf	read_ADC@analogChannel
  2254                           
  2255                           ;adc.c: 72: ADCON0bits.CHS = analogChannel;
  2256  02AB  00A2               	movwf	??_read_ADC
  2257  02AC  0DA2               	rlf	??_read_ADC,f
  2258  02AD  0DA2               	rlf	??_read_ADC,f
  2259  02AE  081F               	movf	31,w	;volatile
  2260  02AF  0622               	xorwf	??_read_ADC,w
  2261  02B0  39C3               	andlw	-61
  2262  02B1  0622               	xorwf	??_read_ADC,w
  2263  02B2  009F               	movwf	31	;volatile
  2264                           
  2265                           ;adc.c: 73: ADCON0bits.GO_DONE = 1;
  2266  02B3  149F               	bsf	31,1	;volatile
  2267  02B4                     l1088:	
  2268                           ;adc.c: 74: while(ADCON0bits.GO_DONE) continue;
  2269                           
  2270  02B4  189F               	btfsc	31,1	;volatile
  2271  02B5  2AB4               	goto	l1088
  2272                           
  2273                           ;adc.c: 75: adcResult = ADRESH;
  2274  02B6  081E               	movf	30,w	;volatile
  2275  02B7  00A4               	movwf	read_ADC@adcResult
  2276  02B8  01A5               	clrf	read_ADC@adcResult+1
  2277                           
  2278                           ;adc.c: 76: adcResult <<= 8;
  2279  02B9  00A5               	movwf	read_ADC@adcResult+1
  2280  02BA  01A4               	clrf	read_ADC@adcResult
  2281                           
  2282                           ;adc.c: 77: adcResult |= ADRESL;
  2283  02BB  1683               	bsf	3,5	;RP0=1, select bank1
  2284  02BC  081E               	movf	30,w	;volatile
  2285  02BD  1283               	bcf	3,5	;RP0=0, select bank0
  2286  02BE  04A4               	iorwf	read_ADC@adcResult,f
  2287                           
  2288                           ;adc.c: 79: return adcResult;
  2289  02BF  0825               	movf	read_ADC@adcResult+1,w
  2290  02C0  00A1               	movwf	?_read_ADC+1
  2291  02C1  0824               	movf	read_ADC@adcResult,w
  2292  02C2  00A0               	movwf	?_read_ADC
  2293  02C3  0008               	return
  2294  02C4                     __end_of_read_ADC:	
  2295  02C4                     __ptext666:	
  2296 ;; =============== function ___ftmul ends ============
  2297                           
  2298                           
  2299 ;; *************** function ___ftdiv *****************
  2300 ;; Defined at:
  2301 ;;		line 50 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftdiv.c"
  2302 ;; Parameters:    Size  Location     Type
  2303 ;;  f2              3   21[BANK0 ] float 
  2304 ;;  f1              3   24[BANK0 ] float 
  2305 ;; Auto vars:     Size  Location     Type
  2306 ;;  f3              3   31[BANK0 ] float 
  2307 ;;  sign            1   35[BANK0 ] unsigned char 
  2308 ;;  exp             1   34[BANK0 ] unsigned char 
  2309 ;;  cntr            1   30[BANK0 ] unsigned char 
  2310 ;; Return value:  Size  Location     Type
  2311 ;;                  3   21[BANK0 ] float 
  2312 ;; Registers used:
  2313 ;;		wreg, status,2, status,0, pclath, cstack
  2314 ;; Tracked objects:
  2315 ;;		On entry : 60/0
  2316 ;;		On exit  : 60/0
  2317 ;;		Unchanged: FFF9F/0
  2318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2319 ;;      Params:         0       6       0       0       0
  2320 ;;      Locals:         0       6       0       0       0
  2321 ;;      Temps:          0       3       0       0       0
  2322 ;;      Totals:         0      15       0       0       0
  2323 ;;Total ram usage:       15 bytes
  2324 ;; Hardware stack levels used:    1
  2325 ;; Hardware stack levels required when called:    3
  2326 ;; This function calls:
  2327 ;;		___ftpack
  2328 ;; This function is called by:
  2329 ;;		_getTemperature
  2330 ;; This function uses a non-reentrant model
  2331 ;;
  2332  02C4                     ___ftdiv:	
  2333                           
  2334                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  2335  02C4  0838               	movf	___ftdiv@f1,w
  2336  02C5  00BB               	movwf	??___ftdiv
  2337  02C6  0839               	movf	___ftdiv@f1+1,w
  2338  02C7  00BC               	movwf	??___ftdiv+1
  2339  02C8  083A               	movf	___ftdiv@f1+2,w
  2340  02C9  00BD               	movwf	??___ftdiv+2
  2341  02CA  1003               	clrc
  2342  02CB  0D3C               	rlf	??___ftdiv+1,w
  2343  02CC  0D3D               	rlf	??___ftdiv+2,w
  2344  02CD  00C2               	movwf	___ftdiv@exp
  2345  02CE  08C2               	movf	___ftdiv@exp,f
  2346  02CF  1D03               	skipz
  2347  02D0  2AD5               	goto	l8459
  2348  02D1  01B5               	clrf	?___ftdiv
  2349  02D2  01B6               	clrf	?___ftdiv+1
  2350  02D3  01B7               	clrf	?___ftdiv+2
  2351  02D4  0008               	return
  2352  02D5                     l8459:	
  2353  02D5  0835               	movf	___ftdiv@f2,w
  2354  02D6  00BB               	movwf	??___ftdiv
  2355  02D7  0836               	movf	___ftdiv@f2+1,w
  2356  02D8  00BC               	movwf	??___ftdiv+1
  2357  02D9  0837               	movf	___ftdiv@f2+2,w
  2358  02DA  00BD               	movwf	??___ftdiv+2
  2359  02DB  1003               	clrc
  2360  02DC  0D3C               	rlf	??___ftdiv+1,w
  2361  02DD  0D3D               	rlf	??___ftdiv+2,w
  2362  02DE  00C3               	movwf	___ftdiv@sign
  2363  02DF  08C3               	movf	___ftdiv@sign,f
  2364  02E0  1D03               	skipz
  2365  02E1  2AE6               	goto	l6997
  2366  02E2  01B5               	clrf	?___ftdiv
  2367  02E3  01B6               	clrf	?___ftdiv+1
  2368  02E4  01B7               	clrf	?___ftdiv+2
  2369  02E5  0008               	return
  2370  02E6                     l6997:	
  2371  02E6  3089               	movlw	137
  2372  02E7  01BF               	clrf	___ftdiv@f3
  2373  02E8  01C0               	clrf	___ftdiv@f3+1
  2374  02E9  01C1               	clrf	___ftdiv@f3+2
  2375  02EA  0743               	addwf	___ftdiv@sign,w
  2376  02EB  00BB               	movwf	??___ftdiv
  2377  02EC  02C2               	subwf	___ftdiv@exp,f
  2378  02ED  083A               	movf	___ftdiv@f1+2,w
  2379  02EE  00C3               	movwf	___ftdiv@sign
  2380  02EF  0837               	movf	___ftdiv@f2+2,w
  2381  02F0  06C3               	xorwf	___ftdiv@sign,f
  2382  02F1  3080               	movlw	128
  2383  02F2  05C3               	andwf	___ftdiv@sign,f
  2384  02F3  3018               	movlw	24
  2385  02F4  17B9               	bsf	___ftdiv@f1+1,7
  2386  02F5  01BA               	clrf	___ftdiv@f1+2
  2387  02F6  17B6               	bsf	___ftdiv@f2+1,7
  2388  02F7  01B7               	clrf	___ftdiv@f2+2
  2389  02F8  00BE               	movwf	___ftdiv@cntr
  2390  02F9                     l8483:	
  2391  02F9  1003               	clrc
  2392  02FA  0DBF               	rlf	___ftdiv@f3,f
  2393  02FB  0DC0               	rlf	___ftdiv@f3+1,f
  2394  02FC  0DC1               	rlf	___ftdiv@f3+2,f
  2395  02FD  0837               	movf	___ftdiv@f2+2,w
  2396  02FE  023A               	subwf	___ftdiv@f1+2,w
  2397  02FF  1D03               	skipz
  2398  0300  2B07               	goto	u1365
  2399  0301  0836               	movf	___ftdiv@f2+1,w
  2400  0302  0239               	subwf	___ftdiv@f1+1,w
  2401  0303  1D03               	skipz
  2402  0304  2B07               	goto	u1365
  2403  0305  0835               	movf	___ftdiv@f2,w
  2404  0306  0238               	subwf	___ftdiv@f1,w
  2405  0307                     u1365:	
  2406  0307  1C03               	skipc
  2407  0308  2B15               	goto	L2
  2408  0309  0835               	movf	___ftdiv@f2,w
  2409  030A  02B8               	subwf	___ftdiv@f1,f
  2410  030B  0836               	movf	___ftdiv@f2+1,w
  2411  030C  1C03               	skipc
  2412  030D  0F36               	incfsz	___ftdiv@f2+1,w
  2413  030E  02B9               	subwf	___ftdiv@f1+1,f
  2414  030F  0837               	movf	___ftdiv@f2+2,w
  2415  0310  1C03               	skipc
  2416  0311  0A37               	incf	___ftdiv@f2+2,w
  2417  0312  02BA               	subwf	___ftdiv@f1+2,f
  2418  0313  143F               	bsf	___ftdiv@f3,0
  2419  0314  1003               	clrc
  2420  0315                     L2:	
  2421  0315  0DB8               	rlf	___ftdiv@f1,f
  2422  0316  0DB9               	rlf	___ftdiv@f1+1,f
  2423  0317  0DBA               	rlf	___ftdiv@f1+2,f
  2424  0318  0BBE               	decfsz	___ftdiv@cntr,f
  2425  0319  2AF9               	goto	l8483
  2426  031A  083F               	movf	___ftdiv@f3,w
  2427  031B  00A0               	movwf	?___ftpack
  2428  031C  0840               	movf	___ftdiv@f3+1,w
  2429  031D  00A1               	movwf	?___ftpack+1
  2430  031E  0841               	movf	___ftdiv@f3+2,w
  2431  031F  00A2               	movwf	?___ftpack+2
  2432  0320  0842               	movf	___ftdiv@exp,w
  2433  0321  00A3               	movwf	?___ftpack+3
  2434  0322  0843               	movf	___ftdiv@sign,w
  2435  0323  00A4               	movwf	?___ftpack+4
  2436  0324  239B               	fcall	___ftpack
  2437  0325  0820               	movf	?___ftpack,w
  2438  0326  00B5               	movwf	?___ftdiv
  2439  0327  0821               	movf	?___ftpack+1,w
  2440  0328  00B6               	movwf	?___ftdiv+1
  2441  0329  0822               	movf	?___ftpack+2,w
  2442  032A  00B7               	movwf	?___ftdiv+2
  2443  032B  0008               	return
  2444  032C                     __end_of___ftdiv:	
  2445  032C                     __ptext665:	
  2446 ;; =============== function ___lwtoft ends ============
  2447                           
  2448                           
  2449 ;; *************** function ___ftmul *****************
  2450 ;; Defined at:
  2451 ;;		line 52 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftmul.c"
  2452 ;; Parameters:    Size  Location     Type
  2453 ;;  f1              3   11[BANK0 ] float 
  2454 ;;  f2              3   14[BANK0 ] float 
  2455 ;; Auto vars:     Size  Location     Type
  2456 ;;  f3_as_produc    3   21[BANK0 ] unsigned um
  2457 ;;  sign            1   25[BANK0 ] unsigned char 
  2458 ;;  cntr            1   24[BANK0 ] unsigned char 
  2459 ;;  exp             1   20[BANK0 ] unsigned char 
  2460 ;; Return value:  Size  Location     Type
  2461 ;;                  3   11[BANK0 ] float 
  2462 ;; Registers used:
  2463 ;;		wreg, status,2, status,0, pclath, cstack
  2464 ;; Tracked objects:
  2465 ;;		On entry : 60/0
  2466 ;;		On exit  : 60/0
  2467 ;;		Unchanged: FFF9F/0
  2468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2469 ;;      Params:         0       6       0       0       0
  2470 ;;      Locals:         0       6       0       0       0
  2471 ;;      Temps:          0       3       0       0       0
  2472 ;;      Totals:         0      15       0       0       0
  2473 ;;Total ram usage:       15 bytes
  2474 ;; Hardware stack levels used:    1
  2475 ;; Hardware stack levels required when called:    3
  2476 ;; This function calls:
  2477 ;;		___ftpack
  2478 ;; This function is called by:
  2479 ;;		_getTemperature
  2480 ;; This function uses a non-reentrant model
  2481 ;;
  2482  032C                     ___ftmul:	
  2483                           
  2484                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  2485  032C  082B               	movf	___ftmul@f1,w
  2486  032D  00B1               	movwf	??___ftmul
  2487  032E  082C               	movf	___ftmul@f1+1,w
  2488  032F  00B2               	movwf	??___ftmul+1
  2489  0330  082D               	movf	___ftmul@f1+2,w
  2490  0331  00B3               	movwf	??___ftmul+2
  2491  0332  1003               	clrc
  2492  0333  0D32               	rlf	??___ftmul+1,w
  2493  0334  0D33               	rlf	??___ftmul+2,w
  2494  0335  00B4               	movwf	___ftmul@exp
  2495  0336  08B4               	movf	___ftmul@exp,f
  2496  0337  1D03               	skipz
  2497  0338  2B3D               	goto	l8503
  2498  0339  01AB               	clrf	?___ftmul
  2499  033A  01AC               	clrf	?___ftmul+1
  2500  033B  01AD               	clrf	?___ftmul+2
  2501  033C  0008               	return
  2502  033D                     l8503:	
  2503  033D  082E               	movf	___ftmul@f2,w
  2504  033E  00B1               	movwf	??___ftmul
  2505  033F  082F               	movf	___ftmul@f2+1,w
  2506  0340  00B2               	movwf	??___ftmul+1
  2507  0341  0830               	movf	___ftmul@f2+2,w
  2508  0342  00B3               	movwf	??___ftmul+2
  2509  0343  1003               	clrc
  2510  0344  0D32               	rlf	??___ftmul+1,w
  2511  0345  0D33               	rlf	??___ftmul+2,w
  2512  0346  00B9               	movwf	___ftmul@sign
  2513  0347  08B9               	movf	___ftmul@sign,f
  2514  0348  1D03               	skipz
  2515  0349  2B4E               	goto	l8509
  2516  034A  01AB               	clrf	?___ftmul
  2517  034B  01AC               	clrf	?___ftmul+1
  2518  034C  01AD               	clrf	?___ftmul+2
  2519  034D  0008               	return
  2520  034E                     l8509:	
  2521  034E  0839               	movf	___ftmul@sign,w
  2522  034F  3E7B               	addlw	123
  2523  0350  07B4               	addwf	___ftmul@exp,f
  2524  0351  082D               	movf	___ftmul@f1+2,w
  2525  0352  00B9               	movwf	___ftmul@sign
  2526  0353  0830               	movf	___ftmul@f2+2,w
  2527  0354  06B9               	xorwf	___ftmul@sign,f
  2528  0355  3080               	movlw	128
  2529  0356  05B9               	andwf	___ftmul@sign,f
  2530  0357  3007               	movlw	7
  2531  0358  17AC               	bsf	___ftmul@f1+1,7
  2532  0359  17AF               	bsf	___ftmul@f2+1,7
  2533  035A  01B0               	clrf	___ftmul@f2+2
  2534  035B  01B5               	clrf	___ftmul@f3_as_product
  2535  035C  01B6               	clrf	___ftmul@f3_as_product+1
  2536  035D  01B7               	clrf	___ftmul@f3_as_product+2
  2537  035E  00B8               	movwf	___ftmul@cntr
  2538  035F                     l8527:	
  2539  035F  1C2B               	btfss	___ftmul@f1,0
  2540  0360  2B69               	goto	l8531
  2541  0361  082E               	movf	___ftmul@f2,w
  2542  0362  2444  120A  118A   	fcall	PL2	;call to abstracted procedure
  2543  0365  1803               	skipnc
  2544  0366  0A30               	incf	___ftmul@f2+2,w
  2545  0367  1D03               	btfss	3,2
  2546  0368  07B7               	addwf	___ftmul@f3_as_product+2,f
  2547  0369                     l8531:	
  2548  0369  1003               	clrc
  2549  036A  0CAD               	rrf	___ftmul@f1+2,f
  2550  036B  0CAC               	rrf	___ftmul@f1+1,f
  2551  036C  0CAB               	rrf	___ftmul@f1,f
  2552  036D  1003               	clrc
  2553  036E  0DAE               	rlf	___ftmul@f2,f
  2554  036F  0DAF               	rlf	___ftmul@f2+1,f
  2555  0370  0DB0               	rlf	___ftmul@f2+2,f
  2556  0371  0BB8               	decfsz	___ftmul@cntr,f
  2557  0372  2B5F               	goto	l8527
  2558  0373  3009               	movlw	9
  2559  0374  00B8               	movwf	___ftmul@cntr
  2560  0375                     l8539:	
  2561  0375  1C2B               	btfss	___ftmul@f1,0
  2562  0376  2B7F               	goto	l8543
  2563  0377  082E               	movf	___ftmul@f2,w
  2564  0378  2444  120A  118A   	fcall	PL2	;call to abstracted procedure
  2565  037B  1803               	skipnc
  2566  037C  0A30               	incf	___ftmul@f2+2,w
  2567  037D  1D03               	btfss	3,2
  2568  037E  07B7               	addwf	___ftmul@f3_as_product+2,f
  2569  037F                     l8543:	
  2570  037F  1003               	clrc
  2571  0380  0CAD               	rrf	___ftmul@f1+2,f
  2572  0381  0CAC               	rrf	___ftmul@f1+1,f
  2573  0382  0CAB               	rrf	___ftmul@f1,f
  2574  0383  1003               	clrc
  2575  0384  0CB7               	rrf	___ftmul@f3_as_product+2,f
  2576  0385  0CB6               	rrf	___ftmul@f3_as_product+1,f
  2577  0386  0CB5               	rrf	___ftmul@f3_as_product,f
  2578  0387  0BB8               	decfsz	___ftmul@cntr,f
  2579  0388  2B75               	goto	l8539
  2580  0389  0835               	movf	___ftmul@f3_as_product,w
  2581  038A  00A0               	movwf	?___ftpack
  2582  038B  0836               	movf	___ftmul@f3_as_product+1,w
  2583  038C  00A1               	movwf	?___ftpack+1
  2584  038D  0837               	movf	___ftmul@f3_as_product+2,w
  2585  038E  00A2               	movwf	?___ftpack+2
  2586  038F  0834               	movf	___ftmul@exp,w
  2587  0390  00A3               	movwf	?___ftpack+3
  2588  0391  0839               	movf	___ftmul@sign,w
  2589  0392  00A4               	movwf	?___ftpack+4
  2590  0393  239B               	fcall	___ftpack
  2591  0394  0820               	movf	?___ftpack,w
  2592  0395  00AB               	movwf	?___ftmul
  2593  0396  0821               	movf	?___ftpack+1,w
  2594  0397  00AC               	movwf	?___ftmul+1
  2595  0398  0822               	movf	?___ftpack+2,w
  2596  0399  00AD               	movwf	?___ftmul+2
  2597  039A  0008               	return
  2598  039B                     __end_of___ftmul:	
  2599  039B                     __ptext670:	
  2600 ;; =============== function ___fttol ends ============
  2601                           
  2602                           
  2603 ;; *************** function ___ftpack *****************
  2604 ;; Defined at:
  2605 ;;		line 63 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\float.c"
  2606 ;; Parameters:    Size  Location     Type
  2607 ;;  arg             3    0[BANK0 ] unsigned um
  2608 ;;  exp             1    3[BANK0 ] unsigned char 
  2609 ;;  sign            1    4[BANK0 ] unsigned char 
  2610 ;; Auto vars:     Size  Location     Type
  2611 ;;		None
  2612 ;; Return value:  Size  Location     Type
  2613 ;;                  3    0[BANK0 ] float 
  2614 ;; Registers used:
  2615 ;;		wreg, status,2, status,0
  2616 ;; Tracked objects:
  2617 ;;		On entry : 60/0
  2618 ;;		On exit  : 60/0
  2619 ;;		Unchanged: FFF9F/0
  2620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2621 ;;      Params:         0       5       0       0       0
  2622 ;;      Locals:         0       0       0       0       0
  2623 ;;      Temps:          0       3       0       0       0
  2624 ;;      Totals:         0       8       0       0       0
  2625 ;;Total ram usage:        8 bytes
  2626 ;; Hardware stack levels used:    1
  2627 ;; Hardware stack levels required when called:    2
  2628 ;; This function calls:
  2629 ;;		Nothing
  2630 ;; This function is called by:
  2631 ;;		___ftdiv
  2632 ;;		___ftmul
  2633 ;;		___lwtoft
  2634 ;; This function uses a non-reentrant model
  2635 ;;
  2636  039B                     ___ftpack:	
  2637                           
  2638                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  2639  039B  0823               	movf	___ftpack@exp,w
  2640  039C  1903               	btfsc	3,2
  2641  039D  2BA3               	goto	l8353
  2642  039E  0822               	movf	___ftpack@arg+2,w
  2643  039F  0421               	iorwf	___ftpack@arg+1,w
  2644  03A0  0420               	iorwf	___ftpack@arg,w
  2645  03A1  1D03               	skipz
  2646  03A2  2BAC               	goto	l8359
  2647  03A3                     l8353:	
  2648  03A3  01A0               	clrf	?___ftpack
  2649  03A4  01A1               	clrf	?___ftpack+1
  2650  03A5  01A2               	clrf	?___ftpack+2
  2651  03A6  0008               	return
  2652  03A7                     l8357:	
  2653  03A7  0AA3               	incf	___ftpack@exp,f
  2654  03A8  1003               	clrc
  2655  03A9  0CA2               	rrf	___ftpack@arg+2,f
  2656  03AA  0CA1               	rrf	___ftpack@arg+1,f
  2657  03AB  0CA0               	rrf	___ftpack@arg,f
  2658  03AC                     l8359:	
  2659  03AC  30FE               	movlw	254
  2660  03AD  0522               	andwf	___ftpack@arg+2,w
  2661  03AE  1903               	btfsc	3,2
  2662  03AF  2BBB               	goto	l8363
  2663  03B0  2BA7               	goto	l8357
  2664  03B1                     l8361:	
  2665  03B1  0AA3               	incf	___ftpack@exp,f
  2666  03B2  0AA0               	incf	___ftpack@arg,f
  2667  03B3  1903               	skipnz
  2668  03B4  0AA1               	incf	___ftpack@arg+1,f
  2669  03B5  1903               	skipnz
  2670  03B6  0AA2               	incf	___ftpack@arg+2,f
  2671  03B7  1003               	clrc
  2672  03B8  0CA2               	rrf	___ftpack@arg+2,f
  2673  03B9  0CA1               	rrf	___ftpack@arg+1,f
  2674  03BA  0CA0               	rrf	___ftpack@arg,f
  2675  03BB                     l8363:	
  2676  03BB  30FF               	movlw	255
  2677  03BC  0522               	andwf	___ftpack@arg+2,w
  2678  03BD  1903               	btfsc	3,2
  2679  03BE  2BC5               	goto	l8367
  2680  03BF  2BB1               	goto	l8361
  2681  03C0                     l8365:	
  2682  03C0  03A3               	decf	___ftpack@exp,f
  2683  03C1  1003               	clrc
  2684  03C2  0DA0               	rlf	___ftpack@arg,f
  2685  03C3  0DA1               	rlf	___ftpack@arg+1,f
  2686  03C4  0DA2               	rlf	___ftpack@arg+2,f
  2687  03C5                     l8367:	
  2688  03C5  1FA1               	btfss	___ftpack@arg+1,7
  2689  03C6  2BC0               	goto	l8365
  2690  03C7  1C23               	btfss	___ftpack@exp,0
  2691  03C8  13A1               	bcf	___ftpack@arg+1,7
  2692  03C9  1003               	clrc
  2693  03CA  0CA3               	rrf	___ftpack@exp,f
  2694  03CB  0823               	movf	___ftpack@exp,w
  2695  03CC  00A7               	movwf	??___ftpack+2
  2696  03CD  01A6               	clrf	??___ftpack+1
  2697  03CE  01A5               	clrf	??___ftpack
  2698  03CF  0825               	movf	??___ftpack,w
  2699  03D0  04A0               	iorwf	___ftpack@arg,f
  2700  03D1  0826               	movf	??___ftpack+1,w
  2701  03D2  04A1               	iorwf	___ftpack@arg+1,f
  2702  03D3  0827               	movf	??___ftpack+2,w
  2703  03D4  04A2               	iorwf	___ftpack@arg+2,f
  2704  03D5  0824               	movf	___ftpack@sign,w
  2705  03D6  1D03               	skipz
  2706  03D7  17A2               	bsf	___ftpack@arg+2,7
  2707  03D8  0008               	return
  2708  03D9                     __end_of___ftpack:	
  2709  03D9                     __ptext664:	
  2710 ;; =============== function _getTemperature ends ============
  2711                           
  2712                           
  2713 ;; *************** function ___lwtoft *****************
  2714 ;; Defined at:
  2715 ;;		line 29 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwtoft.c"
  2716 ;; Parameters:    Size  Location     Type
  2717 ;;  c               2    8[BANK0 ] unsigned int 
  2718 ;; Auto vars:     Size  Location     Type
  2719 ;;		None
  2720 ;; Return value:  Size  Location     Type
  2721 ;;                  3    8[BANK0 ] float 
  2722 ;; Registers used:
  2723 ;;		wreg, status,2, status,0, pclath, cstack
  2724 ;; Tracked objects:
  2725 ;;		On entry : 60/0
  2726 ;;		On exit  : 60/0
  2727 ;;		Unchanged: FFF9F/0
  2728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2729 ;;      Params:         0       3       0       0       0
  2730 ;;      Locals:         0       0       0       0       0
  2731 ;;      Temps:          0       0       0       0       0
  2732 ;;      Totals:         0       3       0       0       0
  2733 ;;Total ram usage:        3 bytes
  2734 ;; Hardware stack levels used:    1
  2735 ;; Hardware stack levels required when called:    3
  2736 ;; This function calls:
  2737 ;;		___ftpack
  2738 ;; This function is called by:
  2739 ;;		_getTemperature
  2740 ;; This function uses a non-reentrant model
  2741 ;;
  2742  03D9                     ___lwtoft:	
  2743                           
  2744                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  2745  03D9  0828               	movf	___lwtoft@c,w
  2746  03DA  00A0               	movwf	?___ftpack
  2747  03DB  0829               	movf	___lwtoft@c+1,w
  2748  03DC  00A1               	movwf	?___ftpack+1
  2749  03DD  308E               	movlw	142
  2750  03DE  01A2               	clrf	?___ftpack+2
  2751  03DF  00A3               	movwf	?___ftpack+3
  2752  03E0  01A4               	clrf	?___ftpack+4
  2753  03E1  239B               	fcall	___ftpack
  2754  03E2  0820               	movf	?___ftpack,w
  2755  03E3  00A8               	movwf	?___lwtoft
  2756  03E4  0821               	movf	?___ftpack+1,w
  2757  03E5  00A9               	movwf	?___lwtoft+1
  2758  03E6  0822               	movf	?___ftpack+2,w
  2759  03E7  00AA               	movwf	?___lwtoft+2
  2760  03E8  0008               	return
  2761  03E9                     __end_of___lwtoft:	
  2762  03E9                     __ptext669:	
  2763 ;; =============== function _vInitializeVHN5019 ends ============
  2764                           
  2765                           
  2766 ;; *************** function ___fttol *****************
  2767 ;; Defined at:
  2768 ;;		line 45 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\fttol.c"
  2769 ;; Parameters:    Size  Location     Type
  2770 ;;  f1              3    8[BANK0 ] float 
  2771 ;; Auto vars:     Size  Location     Type
  2772 ;;  lval            4   16[BANK0 ] unsigned long 
  2773 ;;  exp1            1   20[BANK0 ] unsigned char 
  2774 ;;  sign1           1   15[BANK0 ] unsigned char 
  2775 ;; Return value:  Size  Location     Type
  2776 ;;                  4    8[BANK0 ] long 
  2777 ;; Registers used:
  2778 ;;		wreg, status,2, status,0
  2779 ;; Tracked objects:
  2780 ;;		On entry : 60/0
  2781 ;;		On exit  : 60/0
  2782 ;;		Unchanged: FFF9F/0
  2783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2784 ;;      Params:         0       4       0       0       0
  2785 ;;      Locals:         0       6       0       0       0
  2786 ;;      Temps:          0       3       0       0       0
  2787 ;;      Totals:         0      13       0       0       0
  2788 ;;Total ram usage:       13 bytes
  2789 ;; Hardware stack levels used:    1
  2790 ;; Hardware stack levels required when called:    2
  2791 ;; This function calls:
  2792 ;;		Nothing
  2793 ;; This function is called by:
  2794 ;;		_getTemperature
  2795 ;; This function uses a non-reentrant model
  2796 ;;
  2797  03E9                     ___fttol:	
  2798                           
  2799                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  2800  03E9  244E  120A  118A   	fcall	PL3	;call to abstracted procedure
  2801  03EC  1003               	clrc
  2802  03ED  0D2D               	rlf	??___fttol+1,w
  2803  03EE  0D2E               	rlf	??___fttol+2,w
  2804  03EF  00B4               	movwf	___fttol@exp1
  2805  03F0  08B4               	movf	___fttol@exp1,f
  2806  03F1  1D03               	skipz
  2807  03F2  2BF8               	goto	l8381
  2808  03F3                     l8379:	
  2809  03F3  01A8               	clrf	?___fttol
  2810  03F4  01A9               	clrf	?___fttol+1
  2811  03F5  01AA               	clrf	?___fttol+2
  2812  03F6  01AB               	clrf	?___fttol+3
  2813  03F7  0008               	return
  2814  03F8                     l8381:	
  2815  03F8  244E  120A  118A   	fcall	PL3	;call to abstracted procedure
  2816  03FB  3017               	movlw	23
  2817  03FC                     u1245:	
  2818  03FC  1003               	clrc
  2819  03FD  0CAE               	rrf	??___fttol+2,f
  2820  03FE  0CAD               	rrf	??___fttol+1,f
  2821  03FF  0CAC               	rrf	??___fttol,f
  2822  0400  3EFF               	addlw	-1
  2823  0401  1D03               	skipz
  2824  0402  2BFC               	goto	u1245
  2825  0403  082C               	movf	??___fttol,w
  2826  0404  00AF               	movwf	___fttol@sign1
  2827  0405  17A9               	bsf	___fttol@f1+1,7
  2828  0406  01AA               	clrf	___fttol@f1+2
  2829  0407  0828               	movf	___fttol@f1,w
  2830  0408  00B0               	movwf	___fttol@lval
  2831  0409  0829               	movf	___fttol@f1+1,w
  2832  040A  00B1               	movwf	___fttol@lval+1
  2833  040B  082A               	movf	___fttol@f1+2,w
  2834  040C  00B2               	movwf	___fttol@lval+2
  2835  040D  308E               	movlw	142
  2836  040E  01B3               	clrf	___fttol@lval+3
  2837  040F  02B4               	subwf	___fttol@exp1,f
  2838  0410  1FB4               	btfss	___fttol@exp1,7
  2839  0411  2C1F               	goto	l8401
  2840  0412  0834               	movf	___fttol@exp1,w
  2841  0413  3A80               	xorlw	128
  2842  0414  3E8F               	addlw	143
  2843  0415  1C03               	btfss	3,0
  2844  0416  2BF3               	goto	l8379
  2845  0417                     l8397:	
  2846  0417  1003               	clrc
  2847  0418  0CB3               	rrf	___fttol@lval+3,f
  2848  0419  0CB2               	rrf	___fttol@lval+2,f
  2849  041A  0CB1               	rrf	___fttol@lval+1,f
  2850  041B  0CB0               	rrf	___fttol@lval,f
  2851  041C  0FB4               	incfsz	___fttol@exp1,f
  2852  041D  2C17               	goto	l8397
  2853  041E  2C2D               	goto	l8407
  2854  041F                     l8401:	
  2855  041F  3018               	movlw	24
  2856  0420  0234               	subwf	___fttol@exp1,w
  2857  0421  1803               	btfsc	3,0
  2858  0422  2BF3               	goto	l8379
  2859  0423                     l7024:	
  2860  0423  08B4               	movf	___fttol@exp1,f
  2861  0424  1903               	btfsc	3,2
  2862  0425  2C2D               	goto	l8407
  2863  0426  1003               	clrc
  2864  0427  0DB0               	rlf	___fttol@lval,f
  2865  0428  0DB1               	rlf	___fttol@lval+1,f
  2866  0429  0DB2               	rlf	___fttol@lval+2,f
  2867  042A  0DB3               	rlf	___fttol@lval+3,f
  2868  042B  03B4               	decf	___fttol@exp1,f
  2869  042C  2C23               	goto	l7024
  2870  042D                     l8407:	
  2871  042D  082F               	movf	___fttol@sign1,w
  2872  042E  1903               	btfsc	3,2
  2873  042F  2C3B               	goto	l8411
  2874  0430  09B0               	comf	___fttol@lval,f
  2875  0431  09B1               	comf	___fttol@lval+1,f
  2876  0432  09B2               	comf	___fttol@lval+2,f
  2877  0433  09B3               	comf	___fttol@lval+3,f
  2878  0434  0AB0               	incf	___fttol@lval,f
  2879  0435  1903               	skipnz
  2880  0436  0AB1               	incf	___fttol@lval+1,f
  2881  0437  1903               	skipnz
  2882  0438  0AB2               	incf	___fttol@lval+2,f
  2883  0439  1903               	skipnz
  2884  043A  0AB3               	incf	___fttol@lval+3,f
  2885  043B                     l8411:	
  2886  043B  0833               	movf	___fttol@lval+3,w
  2887  043C  00AB               	movwf	?___fttol+3
  2888  043D  0832               	movf	___fttol@lval+2,w
  2889  043E  00AA               	movwf	?___fttol+2
  2890  043F  0831               	movf	___fttol@lval+1,w
  2891  0440  00A9               	movwf	?___fttol+1
  2892  0441  0830               	movf	___fttol@lval,w
  2893  0442  00A8               	movwf	?___fttol
  2894  0443  0008               	return
  2895  0444                     __end_of___fttol:	
  2896  0444                     PL2:	
  2897  0444  07B5               	addwf	___ftmul@f3_as_product,f
  2898  0445  082F               	movf	___ftmul@f2+1,w
  2899  0446  1103               	clrz
  2900  0447  1803               	skipnc
  2901  0448  0A2F               	incf	___ftmul@f2+1,w
  2902  0449  1D03               	btfss	3,2
  2903  044A  07B6               	addwf	___ftmul@f3_as_product+1,f
  2904  044B  0830               	movf	___ftmul@f2+2,w
  2905  044C  1103               	clrz
  2906  044D  0008               	return
  2907  044E                     PL3:	
  2908  044E  0828               	movf	___fttol@f1,w
  2909  044F  00AC               	movwf	??___fttol
  2910  0450  0829               	movf	___fttol@f1+1,w
  2911  0451  00AD               	movwf	??___fttol+1
  2912  0452  082A               	movf	___fttol@f1+2,w
  2913  0453  00AE               	movwf	??___fttol+2
  2914  0454  0008               	return
  2915                           
  2916                           	psect	text668
  2917  057E                     __ptext668:	
  2918 ;; =============== function _utoa ends ============
  2919                           
  2920                           
  2921 ;; *************** function _vInitializeVHN5019 *****************
  2922 ;; Defined at:
  2923 ;;		line 41 in file "../src/vhn5019.c"
  2924 ;; Parameters:    Size  Location     Type
  2925 ;;		None
  2926 ;; Auto vars:     Size  Location     Type
  2927 ;;		None
  2928 ;; Return value:  Size  Location     Type
  2929 ;;		None               void
  2930 ;; Registers used:
  2931 ;;		wreg, status,2
  2932 ;; Tracked objects:
  2933 ;;		On entry : 17F/20
  2934 ;;		On exit  : 60/0
  2935 ;;		Unchanged: 0/0
  2936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2937 ;;      Params:         0       0       0       0       0
  2938 ;;      Locals:         0       0       0       0       0
  2939 ;;      Temps:          0       2       0       0       0
  2940 ;;      Totals:         0       2       0       0       0
  2941 ;;Total ram usage:        2 bytes
  2942 ;; Hardware stack levels used:    1
  2943 ;; Hardware stack levels required when called:    2
  2944 ;; This function calls:
  2945 ;;		Nothing
  2946 ;; This function is called by:
  2947 ;;		_main
  2948 ;; This function uses a non-reentrant model
  2949 ;;
  2950  057E                     _vInitializeVHN5019:	
  2951                           
  2952                           ;vhn5019.c: 42: (TRISCbits.TRISC2) = 0;
  2953                           
  2954                           ; Regs used in _vInitializeVHN5019: [wreg+status,2]
  2955  057E  1107               	bcf	7,2	;volatile
  2956                           
  2957                           ;vhn5019.c: 43: (PORTCbits.RC2) = 0;
  2958  057F  1283               	bcf	3,5	;RP0=0, select bank0
  2959  0580  1107               	bcf	7,2	;volatile
  2960                           
  2961                           ;vhn5019.c: 44: (TRISCbits.TRISC1) = 0;
  2962  0581  1683               	bsf	3,5	;RP0=1, select bank1
  2963  0582  1087               	bcf	7,1	;volatile
  2964                           
  2965                           ;vhn5019.c: 45: (PORTCbits.RC1) = 0;
  2966  0583  1283               	bcf	3,5	;RP0=0, select bank0
  2967  0584  1087               	bcf	7,1	;volatile
  2968                           
  2969                           ;vhn5019.c: 47: (TRISBbits.TRISB1) = 0;
  2970  0585  1683               	bsf	3,5	;RP0=1, select bank1
  2971  0586  1086               	bcf	6,1	;volatile
  2972                           
  2973                           ;vhn5019.c: 48: (PORTBbits.RB1) = 1;
  2974  0587  1283               	bcf	3,5	;RP0=0, select bank0
  2975  0588  1486               	bsf	6,1	;volatile
  2976                           
  2977                           ;vhn5019.c: 49: (TRISDbits.TRISD5) = 0;
  2978  0589  1683               	bsf	3,5	;RP0=1, select bank1
  2979  058A  1288               	bcf	8,5	;volatile
  2980                           
  2981                           ;vhn5019.c: 50: (PORTDbits.RD5) = 1;
  2982  058B  1283               	bcf	3,5	;RP0=0, select bank0
  2983  058C  1688               	bsf	8,5	;volatile
  2984                           
  2985                           ;vhn5019.c: 52: (TRISBbits.TRISB3) = 0;
  2986  058D  1683               	bsf	3,5	;RP0=1, select bank1
  2987  058E  1186               	bcf	6,3	;volatile
  2988                           
  2989                           ;vhn5019.c: 53: (PORTBbits.RB3) = 1;
  2990  058F  1283               	bcf	3,5	;RP0=0, select bank0
  2991  0590  1586               	bsf	6,3	;volatile
  2992                           
  2993                           ;vhn5019.c: 54: (TRISDbits.TRISD7) = 0;
  2994  0591  1683               	bsf	3,5	;RP0=1, select bank1
  2995  0592  1388               	bcf	8,7	;volatile
  2996                           
  2997                           ;vhn5019.c: 55: (PORTDbits.RD7) = 1;
  2998  0593  1283               	bcf	3,5	;RP0=0, select bank0
  2999  0594  1788               	bsf	8,7	;volatile
  3000                           
  3001                           ;vhn5019.c: 57: (TRISBbits.TRISB0) = 0 ;
  3002  0595  1683               	bsf	3,5	;RP0=1, select bank1
  3003  0596  1006               	bcf	6,0	;volatile
  3004                           
  3005                           ;vhn5019.c: 58: (PORTBbits.RB0) = 0;
  3006  0597  1283               	bcf	3,5	;RP0=0, select bank0
  3007  0598  1006               	bcf	6,0	;volatile
  3008                           
  3009                           ;vhn5019.c: 59: (TRISDbits.TRISD4) = 0 ;
  3010  0599  1683               	bsf	3,5	;RP0=1, select bank1
  3011  059A  1208               	bcf	8,4	;volatile
  3012                           
  3013                           ;vhn5019.c: 60: (PORTDbits.RD4) = 0;
  3014  059B  1283               	bcf	3,5	;RP0=0, select bank0
  3015  059C  1208               	bcf	8,4	;volatile
  3016                           
  3017                           ;vhn5019.c: 65: T2CON = 0b00000011;
  3018  059D  3003               	movlw	3
  3019  059E  0092               	movwf	18	;volatile
  3020                           
  3021                           ;vhn5019.c: 66: PIE1bits.TMR2IE = 0;
  3022  059F  1683               	bsf	3,5	;RP0=1, select bank1
  3023  05A0  108C               	bcf	12,1	;volatile
  3024                           
  3025                           ;vhn5019.c: 67: CCP1CON = 0b00001100;
  3026  05A1  300C               	movlw	12
  3027  05A2  1283               	bcf	3,5	;RP0=0, select bank0
  3028  05A3  0097               	movwf	23	;volatile
  3029                           
  3030                           ;vhn5019.c: 68: CCP2CON = 0b00001100;
  3031  05A4  009D               	movwf	29	;volatile
  3032                           
  3033                           ;vhn5019.c: 69: CCPR1L = 0;
  3034  05A5  0195               	clrf	21	;volatile
  3035                           
  3036                           ;vhn5019.c: 70: CCPR2L = 0;
  3037  05A6  019B               	clrf	27	;volatile
  3038                           
  3039                           ;vhn5019.c: 71: PR2 = 255;
  3040  05A7  30FF               	movlw	255
  3041  05A8  1683               	bsf	3,5	;RP0=1, select bank1
  3042  05A9  0092               	movwf	18	;volatile
  3043                           
  3044                           ;vhn5019.c: 72: _delay((unsigned long)((1)*(20000000/4000.0)));
  3045  05AA  3007               	movlw	7
  3046  05AB  1283               	bcf	3,5	;RP0=0, select bank0
  3047  05AC  00A1               	movwf	??_vInitializeVHN5019+1
  3048  05AD  307D               	movlw	125
  3049  05AE  00A0               	movwf	??_vInitializeVHN5019
  3050  05AF                     u2167:	
  3051  05AF  0BA0               	decfsz	??_vInitializeVHN5019,f
  3052  05B0  2DAF               	goto	u2167
  3053  05B1  0BA1               	decfsz	??_vInitializeVHN5019+1,f
  3054  05B2  2DAF               	goto	u2167
  3055                           
  3056                           ;vhn5019.c: 73: T2CONbits.TMR2ON = 1;
  3057  05B3  1283               	bcf	3,5	;RP0=0, select bank0
  3058  05B4  1303               	bcf	3,6	;RP1=0, select bank0
  3059  05B5  1512               	bsf	18,2	;volatile
  3060  05B6  0008               	return
  3061  05B7                     __end_of_vInitializeVHN5019:	
  3062                           
  3063                           	psect	text673
  3064  0631                     __ptext673:	
  3065 ;; =============== function ___lwdiv ends ============
  3066                           
  3067                           
  3068 ;; *************** function ___bmul *****************
  3069 ;; Defined at:
  3070 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\bmul.c"
  3071 ;; Parameters:    Size  Location     Type
  3072 ;;  multiplier      1    wreg     unsigned char 
  3073 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  3074 ;; Auto vars:     Size  Location     Type
  3075 ;;  multiplier      1    2[BANK0 ] unsigned char 
  3076 ;;  product         1    1[BANK0 ] unsigned char 
  3077 ;; Return value:  Size  Location     Type
  3078 ;;                  1    wreg      unsigned char 
  3079 ;; Registers used:
  3080 ;;		wreg, status,2, status,0
  3081 ;; Tracked objects:
  3082 ;;		On entry : 60/100
  3083 ;;		On exit  : 60/100
  3084 ;;		Unchanged: FFF9F/0
  3085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3086 ;;      Params:         0       1       0       0       0
  3087 ;;      Locals:         0       2       0       0       0
  3088 ;;      Temps:          0       0       0       0       0
  3089 ;;      Totals:         0       3       0       0       0
  3090 ;;Total ram usage:        3 bytes
  3091 ;; Hardware stack levels used:    1
  3092 ;; Hardware stack levels required when called:    2
  3093 ;; This function calls:
  3094 ;;		Nothing
  3095 ;; This function is called by:
  3096 ;;		_main
  3097 ;; This function uses a non-reentrant model
  3098 ;;
  3099  0631                     ___bmul:	
  3100                           
  3101                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3102                           ;___bmul@multiplier stored from wreg
  3103  0631  00A2               	movwf	___bmul@multiplier
  3104  0632  01A1               	clrf	___bmul@product
  3105  0633                     l8859:	
  3106  0633  0820               	movf	___bmul@multiplicand,w
  3107  0634  1822               	btfsc	___bmul@multiplier,0
  3108  0635  07A1               	addwf	___bmul@product,f
  3109  0636  1003               	clrc
  3110  0637  0DA0               	rlf	___bmul@multiplicand,f
  3111  0638  1003               	clrc
  3112  0639  0CA2               	rrf	___bmul@multiplier,f
  3113  063A  08A2               	movf	___bmul@multiplier,f
  3114  063B  1D03               	skipz
  3115  063C  2E33               	goto	l8859
  3116  063D  0821               	movf	___bmul@product,w
  3117  063E  0008               	return
  3118  063F                     __end_of___bmul:	
  3119                           
  3120                           	psect	text674
  3121  063F                     __ptext674:	
  3122 ;; =============== function ___bmul ends ============
  3123                           
  3124                           
  3125 ;; *************** function _cGetFromReceiveBuffer *****************
  3126 ;; Defined at:
  3127 ;;		line 577 in file "../src/main.c"
  3128 ;; Parameters:    Size  Location     Type
  3129 ;;		None
  3130 ;; Auto vars:     Size  Location     Type
  3131 ;;  value           1    0[BANK0 ] unsigned char 
  3132 ;; Return value:  Size  Location     Type
  3133 ;;                  1    wreg      unsigned char 
  3134 ;; Registers used:
  3135 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3136 ;; Tracked objects:
  3137 ;;		On entry : 60/0
  3138 ;;		On exit  : 160/100
  3139 ;;		Unchanged: FFE9F/0
  3140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3141 ;;      Params:         0       0       0       0       0
  3142 ;;      Locals:         0       1       0       0       0
  3143 ;;      Temps:          0       0       0       0       0
  3144 ;;      Totals:         0       1       0       0       0
  3145 ;;Total ram usage:        1 bytes
  3146 ;; Hardware stack levels used:    1
  3147 ;; Hardware stack levels required when called:    2
  3148 ;; This function calls:
  3149 ;;		Nothing
  3150 ;; This function is called by:
  3151 ;;		_main
  3152 ;; This function uses a non-reentrant model
  3153 ;;
  3154  063F                     _cGetFromReceiveBuffer:	
  3155                           
  3156                           ;main.c: 578: unsigned char value;
  3157                           ;main.c: 580: value = uartReceiveBuffer[uartReceiveBufferR];
  3158                           
  3159                           ; Regs used in _cGetFromReceiveBuffer: [wreg-fsr0h+status,2+status,0]
  3160  063F  0862               	movf	_uartReceiveBufferR,w
  3161  0640  3E90               	addlw	_uartReceiveBuffer& (0+255)
  3162  0641  0084               	movwf	4
  3163  0642  1783               	bsf	3,7	;select IRP bank3
  3164  0643  0800               	movf	0,w
  3165  0644  00A0               	movwf	cGetFromReceiveBuffer@value
  3166                           
  3167                           ;main.c: 581: uartReceiveBufferR++;
  3168  0645  0AE2               	incf	_uartReceiveBufferR,f	;volatile
  3169                           
  3170                           ;main.c: 582: if(uartReceiveBufferR == ( 60 ))
  3171  0646  0862               	movf	_uartReceiveBufferR,w	;volatile
  3172  0647  3A3C               	xorlw	60
  3173  0648  1903               	btfsc	3,2
  3174                           
  3175                           ;main.c: 583: {
  3176                           ;main.c: 584: uartReceiveBufferR = 0;
  3177  0649  01E2               	clrf	_uartReceiveBufferR	;volatile
  3178                           
  3179                           ;main.c: 585: }
  3180                           ;main.c: 586: return value;
  3181  064A  0820               	movf	cGetFromReceiveBuffer@value,w
  3182  064B  0008               	return
  3183  064C                     __end_of_cGetFromReceiveBuffer:	
  3184                           
  3185                           	psect	text675
  3186  0654                     __ptext675:	
  3187 ;; =============== function _cGetFromReceiveBuffer ends ============
  3188                           
  3189                           
  3190 ;; *************** function _putch *****************
  3191 ;; Defined at:
  3192 ;;		line 122 in file "../src/uart.c"
  3193 ;; Parameters:    Size  Location     Type
  3194 ;;  c               1    wreg     unsigned char 
  3195 ;; Auto vars:     Size  Location     Type
  3196 ;;  c               1    0[BANK0 ] unsigned char 
  3197 ;; Return value:  Size  Location     Type
  3198 ;;		None               void
  3199 ;; Registers used:
  3200 ;;		wreg
  3201 ;; Tracked objects:
  3202 ;;		On entry : 40/0
  3203 ;;		On exit  : 60/0
  3204 ;;		Unchanged: FFF9F/0
  3205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3206 ;;      Params:         0       0       0       0       0
  3207 ;;      Locals:         0       1       0       0       0
  3208 ;;      Temps:          0       0       0       0       0
  3209 ;;      Totals:         0       1       0       0       0
  3210 ;;Total ram usage:        1 bytes
  3211 ;; Hardware stack levels used:    1
  3212 ;; Hardware stack levels required when called:    2
  3213 ;; This function calls:
  3214 ;;		Nothing
  3215 ;; This function is called by:
  3216 ;;		_main
  3217 ;; This function uses a non-reentrant model
  3218 ;;
  3219  0654                     _putch:	
  3220                           
  3221                           ; Regs used in _putch: [wreg]
  3222                           ;putch@c stored from wreg
  3223  0654  1283               	bcf	3,5	;RP0=0, select bank0
  3224  0655  00A0               	movwf	putch@c
  3225  0656                     l3460:	
  3226                           ;uart.c: 123: while( !TXIF )
  3227                           
  3228  0656  1E0C               	btfss	12,4
  3229  0657  2E56               	goto	l3460
  3230                           
  3231                           ;uart.c: 125: TXREG = c;
  3232  0658  0820               	movf	putch@c,w
  3233  0659  0099               	movwf	25	;volatile
  3234  065A  0008               	return
  3235  065B                     __end_of_putch:	
  3236                           
  3237                           	psect	text676
  3238  060A                     __ptext676:	
  3239 ;; =============== function _putch ends ============
  3240                           
  3241                           
  3242 ;; *************** function _vInitializeUart *****************
  3243 ;; Defined at:
  3244 ;;		line 41 in file "../src/uart.c"
  3245 ;; Parameters:    Size  Location     Type
  3246 ;;		None
  3247 ;; Auto vars:     Size  Location     Type
  3248 ;;  cBaudTemp       1    0        unsigned char 
  3249 ;; Return value:  Size  Location     Type
  3250 ;;		None               void
  3251 ;; Registers used:
  3252 ;;		wreg
  3253 ;; Tracked objects:
  3254 ;;		On entry : 60/0
  3255 ;;		On exit  : 60/20
  3256 ;;		Unchanged: FFF9F/0
  3257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3258 ;;      Params:         0       0       0       0       0
  3259 ;;      Locals:         0       1       0       0       0
  3260 ;;      Temps:          0       0       0       0       0
  3261 ;;      Totals:         0       1       0       0       0
  3262 ;;Total ram usage:        1 bytes
  3263 ;; Hardware stack levels used:    1
  3264 ;; Hardware stack levels required when called:    2
  3265 ;; This function calls:
  3266 ;;		Nothing
  3267 ;; This function is called by:
  3268 ;;		_main
  3269 ;; This function uses a non-reentrant model
  3270 ;;
  3271  060A                     _vInitializeUart:	
  3272                           
  3273                           ;uart.c: 46: (TRISCbits.TRISC6) = 1;
  3274                           
  3275                           ; Regs used in _vInitializeUart: [wreg]
  3276  060A  1683               	bsf	3,5	;RP0=1, select bank1
  3277  060B  1707               	bsf	7,6	;volatile
  3278                           
  3279                           ;uart.c: 47: (TRISCbits.TRISC7) = 1;
  3280  060C  1787               	bsf	7,7	;volatile
  3281                           
  3282                           ;uart.c: 56: {
  3283                           ;uart.c: 57: BRGH = 0;
  3284                           
  3285                           ;uart.c: 55: else if( cBaudTemp == ( 2 ) )
  3286  060D  1118               	bcf	24,2
  3287                           
  3288                           ;uart.c: 58: BRG16 = 1;
  3289  060E  1703               	bsf	3,6	;RP1=1, select bank3
  3290  060F  3033               	movlw	51
  3291  0610  1587               	bsf	7,3
  3292                           
  3293                           ;uart.c: 59: SPBRG = 51;
  3294  0611  1303               	bcf	3,6	;RP1=0, select bank1
  3295  0612  0099               	movwf	25	;volatile
  3296                           
  3297                           ;uart.c: 72: }
  3298                           ;uart.c: 74: SYNC = 0;
  3299                           
  3300                           ;uart.c: 60: }
  3301  0613  1218               	bcf	24,4
  3302                           
  3303                           ;uart.c: 75: SPEN = 1;
  3304  0614  1283               	bcf	3,5	;RP0=0, select bank0
  3305  0615  1798               	bsf	24,7
  3306                           
  3307                           ;uart.c: 76: CREN = 1;
  3308  0616  1618               	bsf	24,4
  3309                           
  3310                           ;uart.c: 77: TXEN = 1;
  3311  0617  1683               	bsf	3,5	;RP0=1, select bank1
  3312  0618  1698               	bsf	24,5
  3313                           
  3314                           ;uart.c: 78: TX9 = 0;
  3315  0619  1318               	bcf	24,6
  3316                           
  3317                           ;uart.c: 79: RX9 = 0;
  3318  061A  1283               	bcf	3,5	;RP0=0, select bank0
  3319  061B  1318               	bcf	24,6
  3320                           
  3321                           ;uart.c: 80: ADDEN = 0;
  3322  061C  1198               	bcf	24,3
  3323                           
  3324                           ;uart.c: 81: RCIE = 1;
  3325  061D  1683               	bsf	3,5	;RP0=1, select bank1
  3326  061E  168C               	bsf	12,5
  3327                           
  3328                           ;uart.c: 82: TXIE = 0;
  3329  061F  120C               	bcf	12,4
  3330  0620  0008               	return
  3331  0621                     __end_of_vInitializeUart:	
  3332                           
  3333                           	psect	text677
  3334  05B7                     __ptext677:	
  3335 ;; =============== function _vInitializeUart ends ============
  3336                           
  3337                           
  3338 ;; *************** function _vInitializeBoard *****************
  3339 ;; Defined at:
  3340 ;;		line 505 in file "../src/main.c"
  3341 ;; Parameters:    Size  Location     Type
  3342 ;;		None
  3343 ;; Auto vars:     Size  Location     Type
  3344 ;;		None
  3345 ;; Return value:  Size  Location     Type
  3346 ;;		None               void
  3347 ;; Registers used:
  3348 ;;		wreg, status,2
  3349 ;; Tracked objects:
  3350 ;;		On entry : 17F/0
  3351 ;;		On exit  : 17F/20
  3352 ;;		Unchanged: FFE80/0
  3353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3354 ;;      Params:         0       0       0       0       0
  3355 ;;      Locals:         0       0       0       0       0
  3356 ;;      Temps:          0       0       0       0       0
  3357 ;;      Totals:         0       0       0       0       0
  3358 ;;Total ram usage:        0 bytes
  3359 ;; Hardware stack levels used:    1
  3360 ;; Hardware stack levels required when called:    2
  3361 ;; This function calls:
  3362 ;;		Nothing
  3363 ;; This function is called by:
  3364 ;;		_main
  3365 ;; This function uses a non-reentrant model
  3366 ;;
  3367  05B7                     _vInitializeBoard:	
  3368                           
  3369                           ;main.c: 506: PORTA = 0;
  3370                           
  3371                           ; Regs used in _vInitializeBoard: [wreg+status,2]
  3372  05B7  0185               	clrf	5	;volatile
  3373                           
  3374                           ;main.c: 507: PORTB = 0;
  3375  05B8  0186               	clrf	6	;volatile
  3376                           
  3377                           ;main.c: 508: PORTC = 0;
  3378  05B9  0187               	clrf	7	;volatile
  3379                           
  3380                           ;main.c: 509: PORTD = 0;
  3381  05BA  0188               	clrf	8	;volatile
  3382                           
  3383                           ;main.c: 510: PORTE = 0;
  3384  05BB  0189               	clrf	9	;volatile
  3385                           
  3386                           ;main.c: 512: CM1CON0 = 0;
  3387  05BC  1703               	bsf	3,6	;RP1=1, select bank2
  3388  05BD  0187               	clrf	7	;volatile
  3389                           
  3390                           ;main.c: 513: CM2CON0 = 0;
  3391  05BE  0188               	clrf	8	;volatile
  3392                           
  3393                           ;main.c: 514: OSCCON = 0b01110101;
  3394  05BF  3075               	movlw	117
  3395  05C0  1683               	bsf	3,5	;RP0=1, select bank1
  3396  05C1  1303               	bcf	3,6	;RP1=0, select bank1
  3397  05C2  008F               	movwf	15	;volatile
  3398                           
  3399                           ;main.c: 517: C1ON = 0;
  3400  05C3  1283               	bcf	3,5	;RP0=0, select bank2
  3401  05C4  1703               	bsf	3,6	;RP1=1, select bank2
  3402  05C5  3017               	movlw	23
  3403  05C6  1387               	bcf	7,7
  3404                           
  3405                           ;main.c: 518: C2ON = 0;
  3406  05C7  1388               	bcf	8,7
  3407                           
  3408                           ;main.c: 521: WDTCON = 0b00010111;
  3409  05C8  0085               	movwf	5	;volatile
  3410                           
  3411                           ;main.c: 522: OPTION_REG = 0b10000111;
  3412  05C9  3087               	movlw	135
  3413  05CA  1683               	bsf	3,5	;RP0=1, select bank1
  3414  05CB  1303               	bcf	3,6	;RP1=0, select bank1
  3415  05CC  0081               	movwf	1	;volatile
  3416                           
  3417                           ;main.c: 524: ANSELH = 0;
  3418  05CD  1703               	bsf	3,6	;RP1=1, select bank3
  3419  05CE  0189               	clrf	9	;volatile
  3420                           
  3421                           ;main.c: 525: ANSEL = 0;
  3422  05CF  0188               	clrf	8	;volatile
  3423  05D0  3007               	movlw	7
  3424                           
  3425                           ;main.c: 527: T0IF = 0;
  3426  05D1  110B               	bcf	11,2
  3427                           
  3428                           ;main.c: 528: T0IE = 1;
  3429  05D2  168B               	bsf	11,5
  3430                           
  3431                           ;main.c: 530: TRISA = 0b00000111;
  3432  05D3  1303               	bcf	3,6	;RP1=0, select bank1
  3433  05D4  0085               	movwf	5	;volatile
  3434                           
  3435                           ;main.c: 531: TRISB = 0b00000000;
  3436  05D5  0186               	clrf	6	;volatile
  3437                           
  3438                           ;main.c: 532: TRISC = 0b11000000;
  3439  05D6  30C0               	movlw	192
  3440  05D7  0087               	movwf	7	;volatile
  3441                           
  3442                           ;main.c: 533: TRISD = 0b00000000;
  3443  05D8  0188               	clrf	8	;volatile
  3444                           
  3445                           ;main.c: 534: TRISE = 0b00000100;
  3446  05D9  3004               	movlw	4
  3447  05DA  0089               	movwf	9	;volatile
  3448                           
  3449                           ;main.c: 536: tim10Hz = 5;
  3450  05DB  3005               	movlw	5
  3451  05DC  1283               	bcf	3,5	;RP0=0, select bank0
  3452  05DD  00ED               	movwf	_tim10Hz	;volatile
  3453                           
  3454                           ;main.c: 537: tim2Hz = 5;
  3455  05DE  00EE               	movwf	_tim2Hz	;volatile
  3456                           
  3457                           ;main.c: 538: tim1sec = 2;
  3458  05DF  3002               	movlw	2
  3459  05E0  1683               	bsf	3,5	;RP0=1, select bank1
  3460  05E1  00CE               	movwf	_tim1sec^(0+128)	;volatile
  3461                           
  3462                           ;main.c: 539: CONV = 0;
  3463  05E2  1079               	bcf	_CONV/(0+8),_CONV& (0+7)
  3464                           
  3465                           ;main.c: 540: conversionFinished = 0;
  3466  05E3  10F9               	bcf	_conversionFinished/(0+8),_conversionFinished& (0+7)
  3467  05E4  0008               	return
  3468  05E5                     __end_of_vInitializeBoard:	
  3469                           
  3470                           	psect	text679
  3471  0621                     __ptext679:	
  3472 ;; =============== function _read_ADC ends ============
  3473                           
  3474                           
  3475 ;; *************** function _vInitializeADC *****************
  3476 ;; Defined at:
  3477 ;;		line 41 in file "../src/adc.c"
  3478 ;; Parameters:    Size  Location     Type
  3479 ;;		None
  3480 ;; Auto vars:     Size  Location     Type
  3481 ;;		None
  3482 ;; Return value:  Size  Location     Type
  3483 ;;		None               void
  3484 ;; Registers used:
  3485 ;;		None
  3486 ;; Tracked objects:
  3487 ;;		On entry : 60/20
  3488 ;;		On exit  : 60/0
  3489 ;;		Unchanged: FFF9F/0
  3490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3491 ;;      Params:         0       0       0       0       0
  3492 ;;      Locals:         0       0       0       0       0
  3493 ;;      Temps:          0       0       0       0       0
  3494 ;;      Totals:         0       0       0       0       0
  3495 ;;Total ram usage:        0 bytes
  3496 ;; Hardware stack levels used:    1
  3497 ;; Hardware stack levels required when called:    2
  3498 ;; This function calls:
  3499 ;;		Nothing
  3500 ;; This function is called by:
  3501 ;;		_main
  3502 ;; This function uses a non-reentrant model
  3503 ;;
  3504  0621                     _vInitializeADC:	
  3505                           
  3506                           ;adc.c: 42: (TRISAbits.TRISA0) = 1;
  3507                           
  3508                           ; Regs used in _vInitializeADC: []
  3509  0621  1405               	bsf	5,0	;volatile
  3510                           
  3511                           ;adc.c: 43: (TRISAbits.TRISA1) = 1;
  3512  0622  1485               	bsf	5,1	;volatile
  3513                           
  3514                           ;adc.c: 45: ANSELbits.ANS0 = 1;
  3515  0623  1703               	bsf	3,6	;RP1=1, select bank3
  3516  0624  1408               	bsf	8,0	;volatile
  3517                           
  3518                           ;adc.c: 46: ANSELbits.ANS1 = 1;
  3519  0625  1488               	bsf	8,1	;volatile
  3520                           
  3521                           ;adc.c: 48: ADCON0bits.ADCS1 = 1;
  3522  0626  1283               	bcf	3,5	;RP0=0, select bank0
  3523  0627  1303               	bcf	3,6	;RP1=0, select bank0
  3524  0628  179F               	bsf	31,7	;volatile
  3525                           
  3526                           ;adc.c: 49: ADCON0bits.ADCS0 = 0;
  3527  0629  131F               	bcf	31,6	;volatile
  3528                           
  3529                           ;adc.c: 51: ADCON1bits.ADFM = 1;
  3530  062A  1683               	bsf	3,5	;RP0=1, select bank1
  3531  062B  179F               	bsf	31,7	;volatile
  3532                           
  3533                           ;adc.c: 52: ADCON1bits.VCFG1 = 0;
  3534  062C  129F               	bcf	31,5	;volatile
  3535                           
  3536                           ;adc.c: 53: ADCON1bits.VCFG0 = 0;
  3537  062D  121F               	bcf	31,4	;volatile
  3538                           
  3539                           ;adc.c: 54: ADCON0bits.ADON = 1;
  3540  062E  1283               	bcf	3,5	;RP0=0, select bank0
  3541  062F  141F               	bsf	31,0	;volatile
  3542  0630  0008               	return
  3543  0631                     __end_of_vInitializeADC:	
  3544                           
  3545                           	psect	text680
  3546  0506                     __ptext680:	
  3547 ;; =============== function _vInitializeADC ends ============
  3548                           
  3549                           
  3550 ;; *************** function _erdem *****************
  3551 ;; Defined at:
  3552 ;;		line 416 in file "../src/main.c"
  3553 ;; Parameters:    Size  Location     Type
  3554 ;;		None
  3555 ;; Auto vars:     Size  Location     Type
  3556 ;;  i               2    0        unsigned int 
  3557 ;;  temp            1    4[COMMON] unsigned char 
  3558 ;; Return value:  Size  Location     Type
  3559 ;;		None               void
  3560 ;; Registers used:
  3561 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3562 ;; Tracked objects:
  3563 ;;		On entry : 0/0
  3564 ;;		On exit  : 40/0
  3565 ;;		Unchanged: FFE9F/0
  3566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3567 ;;      Params:         0       0       0       0       0
  3568 ;;      Locals:         1       0       0       0       0
  3569 ;;      Temps:          3       0       0       0       0
  3570 ;;      Totals:         4       0       0       0       0
  3571 ;;Total ram usage:        4 bytes
  3572 ;; Hardware stack levels used:    1
  3573 ;; Hardware stack levels required when called:    1
  3574 ;; This function calls:
  3575 ;;		_vCheckError
  3576 ;;		_vAddToUartReceiveBuffer
  3577 ;;		_cGetFromTxBuffer
  3578 ;; This function is called by:
  3579 ;;		Interrupt level 1
  3580 ;; This function uses a non-reentrant model
  3581 ;;
  3582  0506                     _erdem:	
  3583                           
  3584                           ;main.c: 417: unsigned char temp;
  3585                           ;main.c: 418: unsigned int i;
  3586                           ;main.c: 420: if(T0IE && T0IF)
  3587  0506  1A8B               	btfsc	11,5
  3588  0507  1D0B               	btfss	11,2
  3589  0508  2D27               	goto	i1l2306
  3590                           
  3591                           ;main.c: 421: {
  3592                           ;main.c: 422: TMR0 = 93;
  3593  0509  305D               	movlw	93
  3594  050A  1283               	bcf	3,5	;RP0=0, select bank0
  3595  050B  1303               	bcf	3,6	;RP1=0, select bank0
  3596  050C  0081               	movwf	1	;volatile
  3597                           
  3598                           ;main.c: 424: if(--tim10Hz==0)
  3599  050D  0BED               	decfsz	_tim10Hz,f	;volatile
  3600  050E  2D25               	goto	i1l8227
  3601                           
  3602                           ;main.c: 425: {
  3603                           ;main.c: 426: tim10Hz=12;
  3604  050F  300C               	movlw	12
  3605  0510  00ED               	movwf	_tim10Hz	;volatile
  3606                           
  3607                           ;main.c: 427: if(CONV==1)
  3608  0511  1C79               	btfss	_CONV/(0+8),_CONV& (0+7)
  3609  0512  2D1C               	goto	i1l8219
  3610                           
  3611                           ;main.c: 428: {
  3612                           ;main.c: 429: if(convert--==0)
  3613  0513  03F5               	decf	_convert,f	;volatile
  3614  0514  0875               	movf	_convert,w	;volatile
  3615  0515  3AFF               	xorlw	255
  3616  0516  1D03               	skipz
  3617  0517  2D1C               	goto	i1l8219
  3618                           
  3619                           ;main.c: 430: {
  3620                           ;main.c: 431: convert=9;
  3621  0518  3009               	movlw	9
  3622  0519  00F5               	movwf	_convert	;volatile
  3623                           
  3624                           ;main.c: 432: CONV=0;
  3625  051A  1079               	bcf	_CONV/(0+8),_CONV& (0+7)
  3626                           
  3627                           ;main.c: 433: conversionFinished = 1;
  3628  051B  14F9               	bsf	_conversionFinished/(0+8),_conversionFinished& (0+7)
  3629  051C                     i1l8219:	
  3630                           
  3631                           ;main.c: 435: }
  3632                           ;main.c: 436: }
  3633                           ;main.c: 438: if(--tim2Hz==0)
  3634  051C  0BEE               	decfsz	_tim2Hz,f	;volatile
  3635  051D  2D25               	goto	i1l8227
  3636                           
  3637                           ;main.c: 439: {
  3638                           ;main.c: 440: tim2Hz=5;
  3639  051E  3005               	movlw	5
  3640  051F  00EE               	movwf	_tim2Hz	;volatile
  3641                           
  3642                           ;main.c: 441: if(--tim1sec==0)
  3643  0520  1683               	bsf	3,5	;RP0=1, select bank1
  3644  0521  0BCE               	decfsz	_tim1sec^(0+128),f	;volatile
  3645  0522  2D25               	goto	i1l8227
  3646                           
  3647                           ;main.c: 442: {
  3648                           ;main.c: 443: tim1sec=2;
  3649  0523  3002               	movlw	2
  3650  0524  00CE               	movwf	_tim1sec^(0+128)	;volatile
  3651  0525                     i1l8227:	
  3652                           
  3653                           ;main.c: 445: }
  3654                           ;main.c: 446: }
  3655                           ;main.c: 447: }
  3656                           ;main.c: 450: T0IF = 0;
  3657  0525  110B               	bcf	11,2
  3658  0526  2D52               	goto	i1l2312
  3659  0527                     i1l2306:	
  3660                           
  3661                           ;main.c: 452: }
  3662                           ;main.c: 454: if(RCIE && RCIF)
  3663  0527  1683               	bsf	3,5	;RP0=1, select bank1
  3664  0528  1303               	bcf	3,6	;RP1=0, select bank1
  3665  0529  1E8C               	btfss	12,5
  3666  052A  2D40               	goto	i1l2313
  3667  052B  1283               	bcf	3,5	;RP0=0, select bank0
  3668  052C  1E8C               	btfss	12,5
  3669  052D  2D40               	goto	i1l2313
  3670                           
  3671                           ;main.c: 455: {
  3672                           ;main.c: 456: if (OERR)
  3673  052E  1C98               	btfss	24,1
  3674  052F  2D32               	goto	i1l2314
  3675                           
  3676                           ;main.c: 457: {
  3677                           ;main.c: 458: CREN=0;
  3678  0530  1218               	bcf	24,4
  3679                           
  3680                           ;main.c: 459: CREN=1;
  3681  0531  1618               	bsf	24,4
  3682  0532                     i1l2314:	
  3683                           
  3684                           ;main.c: 460: }
  3685                           ;main.c: 461: if(FERR)
  3686  0532  1918               	btfsc	24,2
  3687  0533  081A               	movf	26,w	;volatile
  3688  0534                     i1l8241:	
  3689  0534  1A8C               	btfsc	12,5
  3690  0535  2D3A               	goto	i1l8243
  3691                           
  3692                           ;main.c: 466: {
  3693                           ;main.c: 467: vCheckError();
  3694  0536  255B  120A  118A   	fcall	_vCheckError
  3695  0539  2D34               	goto	i1l8241
  3696  053A                     i1l8243:	
  3697                           
  3698                           ;main.c: 468: }
  3699                           ;main.c: 470: temp = RCREG;
  3700  053A  081A               	movf	26,w	;volatile
  3701  053B  00F4               	movwf	erdem@temp
  3702                           
  3703                           ;main.c: 471: vAddToUartReceiveBuffer(temp);
  3704  053C  2564  120A  118A   	fcall	_vAddToUartReceiveBuffer
  3705  053F  2D52               	goto	i1l2312
  3706  0540                     i1l2313:	
  3707                           
  3708                           ;main.c: 473: }
  3709                           ;main.c: 475: if(TXIE && TXIF)
  3710  0540  1683               	bsf	3,5	;RP0=1, select bank1
  3711  0541  1E0C               	btfss	12,4
  3712  0542  2D52               	goto	i1l2312
  3713  0543  1283               	bcf	3,5	;RP0=0, select bank0
  3714  0544  1E0C               	btfss	12,4
  3715  0545  2D52               	goto	i1l2312
  3716                           
  3717                           ;main.c: 476: {
  3718                           ;main.c: 477: if(uartTransmitBufferR != uartTransmitBufferW)
  3719  0546  0877               	movf	_uartTransmitBufferR,w	;volatile
  3720  0547  0678               	xorwf	_uartTransmitBufferW,w	;volatile
  3721  0548  1903               	skipnz
  3722  0549  2D52               	goto	i1l2312
  3723                           
  3724                           ;main.c: 478: {
  3725                           ;main.c: 479: temp = cGetFromTxBuffer();
  3726  054A  2571               	fcall	_cGetFromTxBuffer
  3727  054B  00F4               	movwf	erdem@temp
  3728                           
  3729                           ;main.c: 480: TXREG = temp;
  3730  054C  0099               	movwf	25	;volatile
  3731                           
  3732                           ;main.c: 481: if(temp == 0x03)
  3733  054D  0874               	movf	erdem@temp,w
  3734  054E  3A03               	xorlw	3
  3735                           
  3736                           ;main.c: 482: {
  3737                           ;main.c: 483: TXIE = 0;
  3738  054F  1683               	bsf	3,5	;RP0=1, select bank1
  3739  0550  1903               	btfsc	3,2
  3740  0551  120C               	bcf	12,4
  3741  0552                     i1l2312:	
  3742  0552  0873               	movf	??_erdem+2,w
  3743  0553  008A               	movwf	10
  3744  0554  0872               	movf	??_erdem+1,w
  3745  0555  0084               	movwf	4
  3746  0556  0E71               	swapf	??_erdem^(0+-128),w
  3747  0557  0083               	movwf	3
  3748  0558  0EFE               	swapf	126,f
  3749  0559  0E7E               	swapf	126,w
  3750  055A  0009               	retfie
  3751  055B                     __end_of_erdem:	
  3752  055B                     __ptext683:	
  3753 ;; =============== function _vAddToUartReceiveBuffer ends ============
  3754                           
  3755                           
  3756 ;; *************** function _vCheckError *****************
  3757 ;; Defined at:
  3758 ;;		line 97 in file "../src/uart.c"
  3759 ;; Parameters:    Size  Location     Type
  3760 ;;		None
  3761 ;; Auto vars:     Size  Location     Type
  3762 ;;  a               1    0        unsigned char 
  3763 ;; Return value:  Size  Location     Type
  3764 ;;		None               void
  3765 ;; Registers used:
  3766 ;;		wreg
  3767 ;; Tracked objects:
  3768 ;;		On entry : 0/0
  3769 ;;		On exit  : 60/0
  3770 ;;		Unchanged: FFF9F/0
  3771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3772 ;;      Params:         0       0       0       0       0
  3773 ;;      Locals:         0       0       0       0       0
  3774 ;;      Temps:          0       0       0       0       0
  3775 ;;      Totals:         0       0       0       0       0
  3776 ;;Total ram usage:        0 bytes
  3777 ;; Hardware stack levels used:    1
  3778 ;; This function calls:
  3779 ;;		Nothing
  3780 ;; This function is called by:
  3781 ;;		_erdem
  3782 ;; This function uses a non-reentrant model
  3783 ;;
  3784  055B                     _vCheckError:	
  3785                           
  3786                           ;uart.c: 99: if ( OERR )
  3787                           
  3788                           ; Regs used in _vCheckError: [wreg]
  3789  055B  1283               	bcf	3,5	;RP0=0, select bank0
  3790  055C  1303               	bcf	3,6	;RP1=0, select bank0
  3791  055D  1C98               	btfss	24,1
  3792  055E  2D61               	goto	i1l3455
  3793                           
  3794                           ;uart.c: 100: {
  3795                           ;uart.c: 101: CREN =0;
  3796  055F  1218               	bcf	24,4
  3797                           
  3798                           ;uart.c: 102: CREN = 1;
  3799  0560  1618               	bsf	24,4
  3800  0561                     i1l3455:	
  3801                           
  3802                           ;uart.c: 103: }
  3803                           ;uart.c: 104: if( FERR )
  3804  0561  1918               	btfsc	24,2
  3805                           
  3806                           ;uart.c: 105: {
  3807                           ;uart.c: 106: a = RCREG;
  3808  0562  081A               	movf	26,w	;volatile
  3809  0563  0008               	return
  3810  0564                     __end_of_vCheckError:	
  3811  0564                     __ptext682:	
  3812 ;; =============== function _cGetFromTxBuffer ends ============
  3813                           
  3814                           
  3815 ;; *************** function _vAddToUartReceiveBuffer *****************
  3816 ;; Defined at:
  3817 ;;		line 556 in file "../src/main.c"
  3818 ;; Parameters:    Size  Location     Type
  3819 ;;  data            1    wreg     unsigned char 
  3820 ;; Auto vars:     Size  Location     Type
  3821 ;;  data            1    0[COMMON] unsigned char 
  3822 ;; Return value:  Size  Location     Type
  3823 ;;		None               void
  3824 ;; Registers used:
  3825 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3826 ;; Tracked objects:
  3827 ;;		On entry : 60/0
  3828 ;;		On exit  : 160/100
  3829 ;;		Unchanged: FFE9F/0
  3830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3831 ;;      Params:         0       0       0       0       0
  3832 ;;      Locals:         1       0       0       0       0
  3833 ;;      Temps:          0       0       0       0       0
  3834 ;;      Totals:         1       0       0       0       0
  3835 ;;Total ram usage:        1 bytes
  3836 ;; Hardware stack levels used:    1
  3837 ;; This function calls:
  3838 ;;		Nothing
  3839 ;; This function is called by:
  3840 ;;		_erdem
  3841 ;; This function uses a non-reentrant model
  3842 ;;
  3843  0564                     _vAddToUartReceiveBuffer:	
  3844                           
  3845                           ; Regs used in _vAddToUartReceiveBuffer: [wreg-fsr0h+status,2+status,0]
  3846                           ;vAddToUartReceiveBuffer@data stored from wreg
  3847  0564  00F0               	movwf	vAddToUartReceiveBuffer@data
  3848                           
  3849                           ;main.c: 557: uartReceiveBuffer[ uartReceiveBufferW ] = data;
  3850  0565  0863               	movf	_uartReceiveBufferW,w
  3851  0566  3E90               	addlw	_uartReceiveBuffer& (0+255)
  3852  0567  0084               	movwf	4
  3853  0568  0870               	movf	vAddToUartReceiveBuffer@data,w
  3854  0569  1783               	bsf	3,7	;select IRP bank3
  3855  056A  0080               	movwf	0
  3856                           
  3857                           ;main.c: 558: uartReceiveBufferW++;
  3858  056B  0AE3               	incf	_uartReceiveBufferW,f	;volatile
  3859                           
  3860                           ;main.c: 559: if(uartReceiveBufferW == ( 60 ))
  3861  056C  0863               	movf	_uartReceiveBufferW,w	;volatile
  3862  056D  3A3C               	xorlw	60
  3863  056E  1903               	btfsc	3,2
  3864                           
  3865                           ;main.c: 560: {
  3866                           ;main.c: 561: uartReceiveBufferW = 0;
  3867  056F  01E3               	clrf	_uartReceiveBufferW	;volatile
  3868  0570  0008               	return
  3869  0571                     __end_of_vAddToUartReceiveBuffer:	
  3870  0571                     __ptext681:	
  3871 ;; =============== function _erdem ends ============
  3872                           
  3873                           
  3874 ;; *************** function _cGetFromTxBuffer *****************
  3875 ;; Defined at:
  3876 ;;		line 646 in file "../src/main.c"
  3877 ;; Parameters:    Size  Location     Type
  3878 ;;		None
  3879 ;; Auto vars:     Size  Location     Type
  3880 ;;  value           1    0[COMMON] unsigned char 
  3881 ;; Return value:  Size  Location     Type
  3882 ;;                  1    wreg      unsigned char 
  3883 ;; Registers used:
  3884 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3885 ;; Tracked objects:
  3886 ;;		On entry : 60/0
  3887 ;;		On exit  : 160/0
  3888 ;;		Unchanged: FFE9F/0
  3889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3890 ;;      Params:         0       0       0       0       0
  3891 ;;      Locals:         1       0       0       0       0
  3892 ;;      Temps:          0       0       0       0       0
  3893 ;;      Totals:         1       0       0       0       0
  3894 ;;Total ram usage:        1 bytes
  3895 ;; Hardware stack levels used:    1
  3896 ;; This function calls:
  3897 ;;		Nothing
  3898 ;; This function is called by:
  3899 ;;		_erdem
  3900 ;; This function uses a non-reentrant model
  3901 ;;
  3902  0571                     _cGetFromTxBuffer:	
  3903                           
  3904                           ;main.c: 647: unsigned char value;
  3905                           ;main.c: 649: value = uartTransmitBuffer[uartTransmitBufferR];
  3906                           
  3907                           ; Regs used in _cGetFromTxBuffer: [wreg-fsr0h+status,2+status,0]
  3908  0571  0877               	movf	_uartTransmitBufferR,w
  3909  0572  3EA0               	addlw	_uartTransmitBuffer& (0+255)
  3910  0573  0084               	movwf	4
  3911  0574  1383               	bcf	3,7	;select IRP bank1
  3912  0575  0800               	movf	0,w
  3913  0576  00F0               	movwf	cGetFromTxBuffer@value
  3914                           
  3915                           ;main.c: 650: uartTransmitBufferR++;
  3916  0577  0AF7               	incf	_uartTransmitBufferR,f	;volatile
  3917                           
  3918                           ;main.c: 651: if(uartTransmitBufferR == ( 30 ))
  3919  0578  0877               	movf	_uartTransmitBufferR,w	;volatile
  3920  0579  3A1E               	xorlw	30
  3921  057A  1903               	btfsc	3,2
  3922                           
  3923                           ;main.c: 652: {
  3924                           ;main.c: 653: uartTransmitBufferR = 0;
  3925  057B  01F7               	clrf	_uartTransmitBufferR	;volatile
  3926                           
  3927                           ;main.c: 654: }
  3928                           ;main.c: 655: return value;
  3929  057C  0870               	movf	cGetFromTxBuffer@value,w
  3930  057D  0008               	return
  3931  057E                     __end_of_cGetFromTxBuffer:	
  3932                           
  3933                           	psect	intentry
  3934  0004                     __pintentry:	
  3935                           ; Regs used in _erdem: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3936                           
  3937  0004                     interrupt_function:	
  3938  007E                     saved_w	set	btemp
  3939  0004  00FE               	movwf	btemp
  3940  0005  0E03               	swapf	3,w
  3941  0006  00F1               	movwf	??_erdem
  3942  0007  0804               	movf	4,w
  3943  0008  00F2               	movwf	??_erdem+1
  3944  0009  080A               	movf	10,w
  3945  000A  00F3               	movwf	??_erdem+2
  3946  000B  120A  118A  2D06   	ljmp	_erdem
  3947                           
  3948                           	psect	text684
  3949  0000                     __ptext684:	
  3950 ;; =============== function _vCheckError ends ============
  3951                           
  3952  007E                     btemp	set	126	;btemp
  3953  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Fri Jul 03 17:56:33 2015

                  ___bmul@product 0021                    _vInitializeADC 0621                                fsr 0004  
       ??_vAddToUartReceiveBuffer 0070                  ??_getTemperature 0044                               _GIE 005F  
                             _PR2 0092                               _RX9 00C6                               _TX9 04C6  
                 _vInitializeUart 060A                               _tam 005E                               fsr0 0004  
                             indf 0000                      ___ftdiv@cntr 003E                      ___ftdiv@sign 0043  
         ??_cGetFromReceiveBuffer 0020                              l1091 0000                              l1085 0000  
                            l1088 02B4                              l2324 0000                              l2332 0000  
                            l2352 0000                              _C1ON 083F                              _C2ON 0847  
                            l2296 0201                              l2297 0233                              l2289 01E9  
                            l2298 0209                              l3452 0000                              l3460 0656  
                            l3463 0000                              l4550 0000                              l7024 0423  
                            l7130 0000                              l9001 0000                              l9003 0000  
                            l9011 0000                              l9005 0463                              l9021 0000  
                            l9013 0000                              l9103 0000                              l9111 01D2  
                            l9031 0000                              l9023 0000                              l9015 0000  
                            l8401 041F                              l9121 01E7                              l9105 0000  
                            l9041 0000                              l9033 0000                              l9025 0000  
                            l9017 0000                              l9009 0000                              l8411 043B  
                            l9131 0000                              l9123 01EB                              l9051 0000  
                            l9043 0000                              l9035 0000                              l9027 0000  
                            l9019 0000                              l9133 020B                              l9053 0066  
                            l9045 0000                              l9037 0000                              l9029 002E  
                            l8351 0000                              l8407 042D                              l8511 0000  
                            l8503 033D                              l9119 01E1                              l9071 0000  
                            l9063 0000                              l9047 0000                              l9039 0000  
                            l6904 0000                              l6920 0000                              l8361 03B1  
                            l8353 03A3                              l8409 0000                              l8521 0000  
                            l8513 0000                              l9137 0228                              l9129 0000  
                            l9073 00A7                              l9065 008E                              l9057 0000  
                            l6930 0000                              l8371 0000                              l8363 03BB  
                            l8531 0369                              l8523 0000                              l8515 0000  
                            l9083 0000                              l9059 007F                              l8373 0000  
                            l8365 03C0                              l8357 03A7                              l8349 0000  
                            l8381 03F8                              l8453 0000                              l8533 0000  
                            l8525 0000                              l8517 0000                              l8509 034E  
                            l9093 0000                              l9085 0000                              l9077 00AA  
                            l8375 0000                              l8367 03C5                              l8359 03AC  
                            l8391 0000                              l8383 0000                              l8471 0000  
                            l8543 037F                              l8535 0000                              l8527 035F  
                            l8519 0000                              l9087 00BF                              l8385 0000  
                            l8377 0000                              l8481 0000                              l8473 0000  
                            l8465 0000                              l8545 0000                              l8537 0000  
                            l9089 0000                              l6890 0000                              l8803 0000  
                            l8387 0000                              l8379 03F3                              l8491 0000  
                            l8483 02F9                              l8475 0000                              l8467 0000  
                            l8459 02D5                              l8547 0000                              l8539 0375  
                            l9099 01C1                              l8805 0000                              l8397 0417  
                            l8389 0000                              l8493 0000                              l8477 0000  
                            l8469 0000                              l8549 0000                              l8751 0000  
                            l8831 0000                              l8823 0000                              l8807 0000  
                            l8399 0000                              l8487 0000                              l8479 0000  
                            l6896 04AC                              l8753 0000                              l8833 0000  
                            l8825 0000                              l8841 0000                              l8913 0000  
                            l8921 0000                              l8497 0000                              l6898 0000  
                            l8755 0000                              l8771 0000                              l8763 0000  
                            l8835 0000                              l8827 0000                              l8907 04EE  
                            l8915 0501                              l8923 0000                              l8931 0000  
                            l8757 0000                              l8781 0000                              l8773 0000  
                            l8765 0000                              l8837 0000                              l8829 0000  
                            l8845 0000                              l8925 0000                              l8941 0000  
                            l8933 0472                              l6997 02E6                              l8791 0000  
                            l8783 0000                              l8775 0000                              l8767 0000  
                            l8839 0000                              l8847 0000                              l8927 0000  
                            l8919 0000                              l8951 0000                              l8943 048A  
                            l8935 0000                              l8785 0000                              l8777 0000  
                            l8769 0000                              l8793 0000                              l8849 0000  
                            l8865 0000                              l8857 0000                              l8873 0000  
                            l8929 0000                              l8953 0000                              l8945 0000  
                            l8937 0000                              l8961 0000                              l8787 0000  
                            l8779 0000                              l8795 0000                              l8867 0000  
                            l8859 0633                              l8883 04C6                              l8875 0000  
                            l8955 0000                              l8947 0000                              l8971 0000  
                            l8789 0000                              l8797 0000                              l8893 0000  
                            l8885 0000                              l8957 0000                              l8981 0256  
                            l8895 04DD                              l8991 0000                              l8983 0000  
                            l8975 0000                              l8967 023B                              l8889 0000  
                            l8985 0000                              l8977 0000                              l8969 0000  
                            l8899 0000                              l8995 0000                              l8989 0000  
                            l8997 0000                              _BRGH 04C2                              _T0IE 005D  
                            _T0IF 005A                              _CREN 00C4                              _FERR 00C2  
                            _CONV 03C8                              u2007 00C5                              u1240 0000  
                            u2017 00D4                              u2107 015C                              u2027 00E3  
                            u1245 03FC                              u2117 016B                              u2037 00F2  
                            u2127 017A                              u2047 0101                              u2137 0189  
                            u2057 0110                              u2147 0198                              u2067 011F  
                            u1365 0307                              u2157 01A7                              u2077 012E  
                            u2167 05AF                              u2087 013E                              u2097 014D  
                            u1725 04CF                              u1765 04F4                              u1845 0057  
                            u1855 0071                              u1875 0097                              _PEIE 005E  
                            _RCIE 0465                              _RCIF 0065                              _OERR 00C1  
                            _TMR0 0001                              _SPEN 00C7                              _TXIE 0464  
                            _TXEN 04C5                              _TXIF 0064                              _SYNC 04C4  
                _vInitializeBoard 05B7                              _main 0011                      ___ftpack@arg 0020  
                            _itoa 0455                      ___ftpack@exp 0023                              btemp 007E  
                            _utoa 046D                              start 000E                 ___bmul@multiplier 0022  
                    ___ftmul@cntr 0038            __end_of_vInitializeADC 0631                      ___ftmul@sign 0039  
                    ___fttol@exp1 0034                      ___fttol@lval 0030                             _ADDEN 00C3  
                           ?_main 0070                             ?_itoa 002F                             _BRG16 0C3B  
                 __end_of___ftdiv 032C                             _ANSEL 0188                             ?_utoa 0027  
                 __end_of___ftmul 039B                   __end_of___fttol 0444                             _T2CON 0012  
                 __end_of___lwdiv 04E2                   __end_of___lwmod 0506                             _RCREG 001A  
                           _SPBRG 0099                             _PORTA 0005                             _PORTB 0006  
                           _PORTC 0007                             _PORTD 0008                             _PORTE 0009  
                           _TRISA 0085                             _TRISB 0086                             _TRISC 0087  
                           _TRISD 0088                             _TRISE 0089                             _TXREG 0019  
           cGetFromTxBuffer@value 0070                   _debugModeStatus 007A                             _erdem 0506  
                           _tempH 005F                             _tempL 0060                     ___ftpack@sign 0024  
             _uartTransmitBufferR 0077               _uartTransmitBufferW 0078                             _putch 0654  
                           main@i 004F                    __pbitbssCOMMON 03C8                             pclath 000A  
 __end_of_vAddToUartReceiveBuffer 0571                 _uartReceiveBuffer 0190                             utoa@c 002D  
            __size_of_vCheckError 0009                             utoa@v 002B                             status 0003  
                           wtemp0 007E                 read_ADC@adcResult 0024                   ?_vInitializeADC 0070  
                    __end_of_main 0236                      __end_of_itoa 046D                      __end_of_utoa 04B8  
         __end_of_vInitializeUart 0621       vAddToUartReceiveBuffer@data 0070                            ??_main 004C  
                   ___fttol@sign1 002F                            ??_itoa 0033                            ??_utoa 002B  
                          ?_erdem 0070                            _ADRESH 001E                            _ADRESL 009E  
                          _CCPR1L 0015                            _CCPR2L 001B                _vInitializeVHN5019 057E  
                          ?_putch 0070                  __end_of___ftpack 03D9                            _ANSELH 0189  
                          i1l2312 0552                            i1l2313 0540                            i1l2314 0532  
                          i1l2306 0527                            i1l2345 0000                            i1l3455 0561  
                          i1l8221 0000                            i1l8205 0000                            i1l8223 0000  
                          i1l8215 0000                            i1l8207 0000                            i1l8241 0534  
                          i1l8225 0000                            i1l8217 0000                            i1l8209 0000  
                          i1l8243 053A                            i1l8219 051C                            i1l8227 0525  
                          i1l8261 0000                            i1l8245 0000                            i1l8271 0000  
                          i1l8255 0000                            i1l8257 0000                            i1l8267 0000  
                          i1l8275 0000                            i1l8269 0000                            i1l8277 0000  
                          i1l8279 0000                            i1l8199 0000                  __end_of___lwtoft 03E9  
                          _OSCCON 008F                            _WDTCON 0105               ?_vInitializeVHN5019 0070  
                          ___bmul 0631         __size_of_cGetFromTxBuffer 000D                         ??___ftdiv 003B  
                       ??___ftmul 0031                         ??___fttol 002C                         ??___lwdiv 0024  
                __end_of_read_ADC 02C4                         ??___lwmod 0024                            _tim2Hz 006E  
                          clrloop 064D             ___ftmul@f3_as_product 0035              ??_vInitializeVHN5019 0020  
                    __pdataCOMMON 007A                            saved_w 007E                _uartReceiveBufferR 0062  
              _uartReceiveBufferW 0063                            putch@c 0020                        ___ftdiv@f1 0038  
                      ___ftdiv@f2 0035                        ___ftdiv@f3 003F               ___bmul@multiplicand 0020  
                      ___ftmul@f1 002B                        ___ftmul@f2 002E                        ___fttol@f1 0028  
                  __pcstackCOMMON 0070                      __pidataBANK0 0000                     __end_of_erdem 055B  
                ?_vInitializeUart 0070                     __end_of_putch 065B          __end_of_vInitializeBoard 05E5  
                      ___lwtoft@c 0028          _currentTemperatureBuffer 0064                           ??_erdem 0071  
                      _dataBuffer 00BE                           ??_putch 0020                        __pbssBANK0 0050  
                      __pbssBANK1 00A0                        __pbssBANK3 0190    __size_of_cGetFromReceiveBuffer 000D  
   __end_of_cGetFromReceiveBuffer 064C                        __pmaintext 0011                           ?___bmul 0020  
                      __pintentry 0004                           _CM1CON0 0107                           _CM2CON0 0108  
                         _CCP1CON 0017                           _CCP2CON 001D                   _debounceCounter 005B  
                       ?___ftpack 0020                         ?___lwtoft 0028                         ?_read_ADC 0020  
                ??_vInitializeADC 0020          ?_vAddToUartReceiveBuffer 0070                   __size_of___bmul 000E  
                _cGetFromTxBuffer 0571                           ___ftdiv 02C4                           ___ftmul 032C  
                         ___fttol 03E9                           ___lwdiv 04B8                           ___lwmod 04E2  
                      ??___ftpack 0025                         _ANSELbits 0188                        ??___lwtoft 002B  
                         _convert 0075                           _tim10Hz 006D                         _T2CONbits 0012  
                         _tim1min 0076                           _tim1sec 00CE                           _ondalik 005D  
                   ??_vCheckError 0070              end_of_initialization 0606           __size_of_getTemperature 0072  
                      ??_read_ADC 0022                           itoa@buf 0034                           itoa@val 002F  
                         utoa@buf 002E                           utoa@val 0027                         _PORTAbits 0005  
                       _PORTBbits 0006                         _PORTCbits 0007                         _PORTDbits 0008  
           read_ADC@analogChannel 0023                         _TRISAbits 0085                         _TRISBbits 0086  
                       _TRISCbits 0087                         _TRISDbits 0088                       ___ftdiv@exp 0042  
             __end_of_vCheckError 0564                       ___ftmul@exp 0034                    __end_of___bmul 063F  
                   __pidataCOMMON 0000                 ?_vInitializeBoard 0070                _uartTransmitBuffer 00A0  
     __size_of_vInitializeVHN5019 0039                ??_vInitializeBoard 0020               start_initialization 05E5  
                  _currentCommand 0059                          ??___bmul 0021                       __pdataBANK0 006F  
                     _dataCounter 005A                 __size_of___ftpack 003E                       __pbssCOMMON 0075  
               __size_of___lwtoft 0010          __size_of_vInitializeUart 0017                     __pcstackBANK0 0020  
        __end_of_cGetFromTxBuffer 057E                    _getTemperature 0236                       _vCheckError 055B  
                 getTemperature@m 004B                      _oldTempLevel 005C                         __pnvBANK0 006D  
                       __pnvBANK1 00CE             _cGetFromReceiveBuffer 063F                 __size_of_read_ADC 001C  
                ___lwdiv@dividend 0022                         __ptext670 039B                         __ptext662 0455  
                       __ptext671 04E2                         __ptext663 0236                         __ptext680 0506  
                       __ptext672 04B8                         __ptext664 03D9                         __ptext681 0571  
                       __ptext673 0631                         __ptext665 032C                         __ptext682 0564  
                       __ptext674 063F                         __ptext666 02C4                         __ptext683 055B  
                       __ptext675 0654                         __ptext667 046D                         __ptext684 0000  
                       __ptext676 060A                         __ptext668 057E                         __ptext677 05B7  
                       __ptext669 03E9                         __ptext678 02A8                         __ptext679 0621  
                        ?___ftdiv 0035                          ?___ftmul 002B                          ?___fttol 0028  
                        ?___lwdiv 0020                          ?___lwmod 0020                         _buffer_SM 006F  
__size_of_vAddToUartReceiveBuffer 000D            __end_of_getTemperature 02A8                  ___lwdiv@quotient 0025  
                  __size_of_erdem 0055                    __size_of_putch 0007                 interrupt_function 0004  
                        _PIE1bits 008C                       _bufferValue 0058              getTemperature@iTempN 0049  
            getTemperature@iTempP 0047                        _ADCON0bits 001F                        _ADCON1bits 009F  
                       erdem@temp 0074                   ?_getTemperature 0070                 ??_vInitializeUart 0020  
          ?_cGetFromReceiveBuffer 0070                  __size_of___ftdiv 0068           __size_of_vInitializeADC 0010  
                __size_of___ftmul 006F                  __size_of___fttol 005B                  __size_of___lwdiv 002A  
                __size_of___lwmod 0024                          ___ftpack 039B                _currentTemperature 0056  
                        ___lwtoft 03D9                _conversionFinished 03C9                   ___lwdiv@divisor 0020  
                 ___lwdiv@counter 0024        cGetFromReceiveBuffer@value 0020         __size_of_vInitializeBoard 002E  
                        _read_ADC 02A8                     __size_of_main 0225                     __size_of_itoa 0018  
                   __size_of_utoa 004B                     _timerOverflow 0061                          clear_ram 064C  
      __end_of_vInitializeVHN5019 05B7           _vAddToUartReceiveBuffer 0564                          itoa@base 0031  
                    ?_vCheckError 0070                 ?_cGetFromTxBuffer 0070                          intlevel1 0000  
              ??_cGetFromTxBuffer 0070                  ___lwmod@dividend 0022           getTemperature@milliVolt 0044  
                   _commandBuffer 006A                          utoa@base 0029                        _OPTION_REG 0081  
                 ___lwmod@divisor 0020                   ___lwmod@counter 0024                       _printBuffer 0050  
